#include once "parserFB\token.bi"

function identToTOK( ident as string ) as TOK
	
	select case lcase( ident )
		case "="
			return TOK.Tassign
		case "+"
			return TOK.Tplus
		case "-"
			return TOK.Tminus
		case "/"
			return TOK.Tdiv
		case "*"
			return TOK.Ttimes
		case "mod"
			return TOK.Tmod
		case "\"
			return TOK.Tintegerdiv
		case "shl"
			return TOK.Tshl
		case "shr"
			return TOK.Tshr
		case "^"
			return TOK.Tcaret
		case ">"
			return TOK.Tgreater
		case "<"
			return TOK.Tless
		case "is"
			return TOK.Tis
		case "..."
			return TOK.Tdotdotdot
		case "."
			return TOK.Tdot
		case "_"
			return TOK.Tunderline
		case "!"
			return TOK.Texclam
		case "?"
			return TOK.Tquest
		case "$"
			return TOK.Tdollar
		case "\"
			return TOK.Tquote
		case ":"
			return TOK.Tcolon
		case ","
			return TOK.Tcomma
		case "#"
			return TOK.Tpound
		case "&"
			return TOK.Tandsign
		case "@"
			return TOK.Tat
		case "("
			return TOK.Topenparen
		case ")"
			return TOK.Tcloseparen
		case "["
			return TOK.Topenbracket
		case "]"
			return TOK.Tclosebracket
		case "{"
			return TOK.Topencurly
		case "}"
			return TOK.Tclosecurly
		case "and"
			return TOK.Tand
		case "or"
			return TOK.Tor
		case "xor"
			return TOK.Txor
		case "not"
			return TOK.Tnot
		case "eqv"
			return TOK.Teqv
		case "imp"
			return TOK.Timp
		case "andalso"
			return TOK.Tandalso
		case "orelse"
			return TOK.Torelse
			
		case "let"
			return TOK.Tlet
		case "for"
			return TOK.Tfor
		case "to"
			return TOK.Tto
		case "next"
			return TOK.Tnext
		case "step"
			return TOK.Tstep
		case "exit"
			return TOK.Texit
		case "new"
			return TOK.Tnew
		case "delete"
			return TOK.Tdelete
		case "do"
			return TOK.Tdo
		case "loop"
			return TOK.Tloop
		case "while"
			return TOK.Twhile
		case "wend"
			return TOK.Twend
		case "if"
			return TOK.Tif
		case "then"
			return TOK.Tthen
		case "else"
			return TOK.Telse
		case "end"
			return TOK.Tend
		case "dim"
			return TOK.Tdim
		case "as"
			return TOK.Tas
		case "enum"
			return TOK.Tenum
		case "type"
			return TOK.Ttype
		case "union"
			return TOK.Tunion
		case "field"
			return TOK.Tfield
		case "return"
			return TOK.Treturn
		case "with"
			return TOK.Twith
		case "select"
			return TOK.Tselect
		case "case"
			return TOK.Tcase
		case "cast"
			return TOK.Tcast
		case "option"
			return TOK.Toption
		case "explicit"
			return TOK.Texplicit

		' Function
		case "declare"
			return TOK.Tdeclare
		case "sub"
			return TOK.Tsub
		case "function"
			return TOK.Tfunction
		case "byval"
			return TOK.Tbyval
		case "byref"
			return TOK.Tbyref
		case "stdcall"
			return TOK.Tstdcall
		case "cdecl"
			return TOK.Tcdecl
		case "pascal"
			return TOK.Tpascal
		case "overload"
			return TOK.Toverload
		case "alias"
			return TOK.Talias
		case "export"
			return TOK.Texport
		
		' data
		case "byte"
			return TOK.Tbyte
		case "ubyte"
			return TOK.Tubyte
		case "short"
			return TOK.Tshort
		case "ushort"
			return TOK.Tushort
		case "integer"
			return TOK.Tinteger
		case "uinteger"
			return TOK.Tuinteger
		case "longint"
			return TOK.Tlongint
		case "ulongint"
			return TOK.Tulongint
		case "single"
			return TOK.Tsingle
		case "double"
			return TOK.Tdouble
		case "zstring"
			return TOK.Tzstring
		case "wstring"
			return TOK.Twstring
		case "any"
			return TOK.Tany

		case "const"
			return TOK.Tconst
		case "pointer"
			return TOK.Tpointer
		case "ptr"
			return TOK.Tptr
		case "unsigned"
			return TOK.Tunsigned
		case "extern"
			return TOK.Textern
		case "common"
			return TOK.Tcommon
		case "shared"
			return TOK.Tshared
		case "static"		
			return TOK.Tstatic
		case "scope"
			return TOK.Tscope

		' Array
		case "redim"
			return TOK.Tredim
		case "var"
			return TOK.Tvar
		case "preserve"		
			return TOK.Tpreserve
		case "erase"
			return TOK.Terase

		' class
		case "class"
			return TOK.Tclass
		case "private"
			return TOK.Tprivate
		case "protected"
			return TOK.Tprotected
		case "public"
			return TOK.Tpublic
		case "extends"
			return TOK.Textends
		case "object"
			return TOK.Tobject
		case "virtural"
			return TOK.Tvirtual
		case "abstract"
			return TOK.Tabstract
		case "constructor"		
			return TOK.Tconstructor
		case "destructor"
			return TOK.Tdestructor
		case "property"
			return TOK.Tproperty
		case "operator"
			return TOK.Toperator
		case "this"		
			return TOK.Tthis
		case "base"
			return TOK.Tbase


		case "include"
			return TOK.Tinclude
		case "libpath"
			return TOK.Tlibpath
		case "once"
			return TOK.Tonce
		case "elseif"
			return TOK.Telseif
		case "endif"
			return TOK.Tendif
		case "ifdef"
			return TOK.Tifdef
		case "ifndef"
			return TOK.Tifndef
		case "define"
			return TOK.Tdefine
		case "macro"		
			return TOK.Tmacro
		case "endmacro"
			return TOK.Tendmacro

		case "namespace"
			return TOK.Tnamespace
		case else
	end select
	
	return -1
	
end function


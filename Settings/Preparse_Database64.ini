AFX\AFXCOM.INC|AfxWstrAlloc|AfxWstrAlloc(BYREF wszStr AS WSTRING) AS WSTRING PTR
AFX\AFXCOM.INC|AfxGuid|AfxGuid(BYVAL pwszGuidText AS WSTRING PTR = NULL) AS GUID
AFX\AFXCOM.INC|AfxGuidText|AfxGuidText OVERLOAD(BYVAL classID AS CLSID PTR) AS STRING
AFX\AFXCOM.INC|AfxGuidText|AfxGuidText OVERLOAD(BYVAL classID AS CLSID) AS STRING
AFX\AFXCOM.INC|AfxGuidText|AfxGuidText OVERLOAD(BYVAL riid AS REFIID) AS STRING
AFX\AFXCOM.INC|AfxNewCom|AfxNewCom OVERLOAD(BYREF wszProgID AS CONST WSTRING, BYREF wszLicKey AS WSTRING = "") AS ANY PTR
AFX\AFXCOM.INC|AfxNewCom|AfxNewCom OVERLOAD(BYREF wszClsID AS CONST WSTRING, BYREF wszIID AS CONST WSTRING) AS ANY PTR
AFX\AFXCOM.INC|AfxNewCom|AfxNewCom OVERLOAD(BYREF classID AS CONST CLSID) AS ANY PTR
AFX\AFXCOM.INC|AfxNewCom|AfxNewCom OVERLOAD(BYREF classID AS CONST CLSID, BYREF riid AS CONST IID) AS ANY PTR
AFX\AFXCOM.INC|AfxNewCom|AfxNewCom OVERLOAD(BYREF wszLibName AS CONST WSTRING, BYREF rclsid AS CONST CLSID, BYREF riid AS CONST IID, BYREF wszLicKey AS WSTRING = "") AS ANY PTR
AFX\AFXCOM.INC|AfxNewCom|AfxNewCom OVERLOAD(BYREF wszLibName AS CONST WSTRING, BYREF wszClsid AS CONST WSTRING, BYREF wszIid AS CONST WSTRING, BYREF wszLicKey AS WSTRING = "") AS ANY PTR
AFX\AFXCOM.INC|AfxGetCom|AfxGetCom OVERLOAD(BYREF wszProgID AS CONST WSTRING) AS ANY PTR
AFX\AFXCOM.INC|AfxGetCom|AfxGetCom OVERLOAD(BYREF classID AS CONST CLSID) AS ANY PTR
AFX\AFXCOM.INC|AfxAnyCom|AfxAnyCom OVERLOAD(BYREF wszProgID AS CONST WSTRING) AS ANY PTR
AFX\AFXCOM.INC|AfxAnyCom|AfxAnyCom OVERLOAD(BYREF classID AS CONST CLSID) AS ANY PTR
AFX\AFXCOM.INC|AfxSafeRelease|AfxSafeRelease(BYREF pv AS ANY PTR) AS ULONG
AFX\AFXCOM.INC|AfxSafeAddRef|AfxSafeAddRef(BYVAL pv AS ANY PTR) AS ULONG
AFX\AFXCOM.INC|AfxAdvise|AfxAdvise OVERLOAD(BYVAL pUnk AS ANY PTR, BYVAL pEvtObj AS ANY PTR, BYVAL riid AS IID PTR, BYVAL pdwCookie AS DWORD PTR) AS HRESULT
AFX\AFXCOM.INC|AfxAdvise|AfxAdvise OVERLOAD(BYVAL pUnk AS ANY PTR, BYVAL pEvtObj AS ANY PTR, BYREF riid AS CONST IID, BYVAL pdwCookie AS DWORD PTR) AS HRESULT
AFX\AFXCOM.INC|AfxAdvise|AfxAdvise OVERLOAD(BYVAL pUnk AS ANY PTR, BYVAL pEvtObj AS ANY PTR, BYREF riid AS IID, BYVAL pdwCookie AS DWORD PTR) AS HRESULT
AFX\AFXCOM.INC|AfxUnadvise|AfxUnadvise OVERLOAD(BYVAL pUnk AS ANY PTR, BYVAL riid AS IID PTR, BYVAL dwCookie AS DWORD) AS HRESULT
AFX\AFXCOM.INC|AfxUnadvise|AfxUnadvise OVERLOAD(BYVAL pUnk AS ANY PTR, BYREF riid AS CONST IID, BYVAL dwCookie AS DWORD) AS HRESULT
AFX\AFXCOM.INC|AfxUnadvise|AfxUnadvise OVERLOAD(BYVAL pUnk AS ANY PTR, BYREF riid AS IID, BYVAL dwCookie AS DWORD) AS HRESULT
AFX\AFXCOM.INC|AfxGetOleErrorInfo|AfxGetOleErrorInfo() AS CWSTR
AFX\AFXCOM.INC|AfxOleCreateFontDisp|AfxOleCreateFontDisp( BYREF wszFontName AS WSTRING, BYVAL cySize AS LONGLONG, BYVAL fWeight AS SHORT = FW_NORMAL, BYVAL fItalic AS WINBOOL = FALSE, BYVAL fUnderline AS WINBOOL = FALSE, BYVAL fStrikethrough AS WINBOOL = FALSE, BYVAL fCharset AS SHORT = DEFAULT_CHARSET ) AS IFontDisp PTR
AFX\AFXCOM.INC|AfxOleCreateFont|AfxOleCreateFont( BYREF wszFontName AS WSTRING, BYVAL cySize AS LONGLONG, BYVAL fWeight AS SHORT = FW_NORMAL, BYVAL fItalic AS WINBOOL = FALSE, BYVAL fUnderline AS WINBOOL = FALSE, BYVAL fStrikethrough AS WINBOOL = FALSE, BYVAL fCharset AS SHORT = DEFAULT_CHARSET ) AS IFont PTR
AFX\AFXCOM.INC|CComPtr.Attach|CComPtr.Attach(BYVAL pUnk AS ANY PTR)
AFX\AFXCOM.INC|CComPtr.Detach|CComPtr.Detach() AS ANY PTR
AFX\AFXCOM.INC|CComPtr##T.vtbl|CComPtr##T.vtbl() AS T PTR
AFX\AFXCOM.INC|CComPtr##T.vptr|CComPtr##T.vptr() AS T PTR
AFX\AFXCOM.INC|AfxVariantGetElementCount|AfxVariantGetElementCount(BYVAL pvarIn AS VARIANT PTR) AS ULONG
AFX\AFXCOM.INC|AfxVariantToBuffer|AfxVariantToBuffer(BYVAL pvarIn AS VARIANT PTR, BYVAL pv AS LPVOID, BYVAL cb AS ULONG) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToString|AfxVariantToString(BYVAL pvarIn AS VARIANT PTR, BYVAL pwszBuf AS WSTRING PTR, BYVAL cchBuf AS UINT) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToStringWithDefault|AfxVariantToStringWithDefault(BYVAL varIn AS VARIANT PTR, BYVAL pszDefault AS LPCWSTR) AS PCWSTR
AFX\AFXCOM.INC|AfxVariantToStringAlloc|AfxVariantToStringAlloc(BYVAL pvarIn AS VARIANT PTR, BYVAL ppwszBuf AS WSTRING PTR PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVarToStr|AfxVarToStr OVERLOAD(BYVAL pvarIn AS VARIANT PTR, BYVAL bClear AS BOOLEAN = FALSE) AS CWSTR
AFX\AFXCOM.INC|AfxVarToStr|AfxVarToStr OVERLOAD(BYREF varIn AS VARIANT, BYVAL bClear AS BOOLEAN = FALSE) AS CWSTR
AFX\AFXCOM.INC|AfxVariantFromResource|AfxVariantFromResource(BYVAL hinst AS HINSTANCE, BYVAL id AS UINT, BYVAL pVar AS VARIANT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantFromBuffer|AfxVariantFromBuffer(BYVAL pv AS VOID PTR, BYVAL cb AS UINT, BYVAL pVar AS VARIANT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantFromGUIDAsString|AfxVariantFromGUIDAsString(BYVAL guid AS IID PTR, BYVAL pVar AS VARIANT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantFromFileTime|AfxVariantFromFileTime(BYVAL pft AS FILETIME PTR, BYVAL pVar AS VARIANT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantFromFileTimeArray|AfxVariantFromFileTimeArray(BYVAL prgft AS FILETIME PTR, BYVAL cElems AS ULONG, BYVAL pVar AS VARIANT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantFromStrRet|AfxVariantFromStrRet(BYVAL pstrret AS STRRET PTR, BYVAL pidl AS PCUITEMID_CHILD, BYVAL pVar AS VARIANT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantFromVariantArrayElem|AfxVariantFromVariantArrayElem(BYVAL varIn AS VARIANT PTR, BYVAL iElem AS ULONG, BYVAL pVar AS VARIANT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantFromBooleanArray|AfxVariantFromBooleanArray(BYVAL prgf AS WINBOOL PTR, BYVAL cElems AS ULONG, BYVAL pVar AS VARIANT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantFromInt16Array|AfxVariantFromInt16Array(BYVAL prgf AS SHORT PTR, BYVAL cElems AS ULONG, BYVAL pVar AS VARIANT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantFromUInt16Array|AfxVariantFromUInt16Array(BYVAL prgf AS USHORT PTR, BYVAL cElems AS ULONG, BYVAL pVar AS VARIANT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantFromInt32Array|AfxVariantFromInt32Array(BYVAL prgn AS LONG PTR, BYVAL cElems AS ULONG, BYVAL pVar AS VARIANT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantFromUInt32Array|AfxVariantFromUInt32Array(BYVAL prgn AS ULONG PTR, BYVAL cElems AS ULONG, BYVAL pVar AS VARIANT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantFromInt64Array|AfxVariantFromInt64Array(BYVAL prgn AS LONGINT PTR, BYVAL cElems AS ULONG, BYVAL pVar AS VARIANT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantFromUInt64Array|AfxVariantFromUInt64Array(BYVAL prgn AS ULONGINT PTR, BYVAL cElems AS ULONG, BYVAL pVar AS VARIANT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantFromDoubleArray|AfxVariantFromDoubleArray(BYVAL prgn AS DOUBLE PTR, BYVAL cElems AS ULONG, BYVAL pVar AS VARIANT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantFromStringArray|AfxVariantFromStringArray(BYVAL prgsz AS PCWSTR, BYVAL cElems AS ULONG, BYVAL pVar AS VARIANT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToBoolean|AfxVariantToBoolean(BYVAL varIn AS VARIANT PTR, BYVAL pfRet AS WINBOOL PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToBooleanWithDefault|AfxVariantToBooleanWithDefault(BYVAL varIn AS VARIANT PTR, BYVAL fDefault AS WINBOOL) AS WINBOOL
AFX\AFXCOM.INC|AfxVariantToInt16|AfxVariantToInt16(BYVAL varIn AS VARIANT PTR, BYVAL piRet AS SHORT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToInt16WithDefault|AfxVariantToInt16WithDefault(BYVAL varIn AS VARIANT PTR, BYVAL iDefault AS SHORT) AS SHORT
AFX\AFXCOM.INC|AfxVariantToUInt16|AfxVariantToUInt16(BYVAL varIn AS VARIANT PTR, BYVAL puiRet AS USHORT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToUInt16WithDefault|AfxVariantToUInt16WithDefault(BYVAL varIn AS VARIANT PTR, BYVAL uiDefault AS USHORT) AS USHORT
AFX\AFXCOM.INC|AfxVariantToInt32|AfxVariantToInt32(BYVAL varIn AS VARIANT PTR, BYVAL plRet AS LONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToInt32WithDefault|AfxVariantToInt32WithDefault(BYVAL varIn AS VARIANT PTR, BYVAL lDefault AS LONG) AS LONG
AFX\AFXCOM.INC|AfxVariantToUInt32|AfxVariantToUInt32(BYVAL varIn AS VARIANT PTR, BYVAL pulRet AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToUInt32WithDefault|AfxVariantToUInt32WithDefault(BYVAL varIn AS VARIANT PTR, BYVAL ulDefault AS ULONG) AS ULONG
AFX\AFXCOM.INC|AfxVariantToInt64|AfxVariantToInt64(BYVAL varIn AS VARIANT PTR, BYVAL pllRet AS LONGINT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToInt64WithDefault|AfxVariantToInt64WithDefault(BYVAL varIn AS VARIANT PTR, BYVAL llDefault AS LONGINT) AS LONGINT
AFX\AFXCOM.INC|AfxVariantToUInt64|AfxVariantToUInt64(BYVAL varIn AS VARIANT PTR, BYVAL pullRet AS ULONGINT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToUInt64WithDefault|AfxVariantToUInt64WithDefault(BYVAL varIn AS VARIANT PTR, BYVAL ullDefault AS ULONGINT) AS ULONGINT
AFX\AFXCOM.INC|AfxVariantToDouble|AfxVariantToDouble(BYVAL varIn AS VARIANT PTR, BYVAL pdblRet AS DOUBLE PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToDoubleWithDefault|AfxVariantToDoubleWithDefault(BYVAL varIn AS VARIANT PTR, BYVAL dblDefault AS DOUBLE) AS DOUBLE
AFX\AFXCOM.INC|AfxVariantToGUID|AfxVariantToGUID(BYVAL varIn AS VARIANT PTR, BYVAL pguid AS GUID PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToDosDateTime|AfxVariantToDosDateTime(BYVAL varIn AS VARIANT PTR, BYVAL pwDate AS WORD PTR, BYVAL pwTime AS WORD PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToStrRet|AfxVariantToStrRet(BYVAL varIn AS VARIANT PTR, BYVAL pstrret AS STRRET PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToFileTime|AfxVariantToFileTime(BYVAL varIn AS VARIANT PTR, BYVAL stfOut AS AFX_PSTIME_FLAGS, BYVAL pftOut AS FILETIME PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToBooleanArray|AfxVariantToBooleanArray(BYVAL pvar AS VARIANT PTR, BYVAL prgf AS WINBOOL PTR, BYVAL crgn AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToBooleanArrayAlloc|AfxVariantToBooleanArrayAlloc(BYVAL pvar AS VARIANT PTR, BYVAL pprgf AS WINBOOL PTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToInt16Array|AfxVariantToInt16Array(BYVAL pvar AS VARIANT PTR, BYVAL prgn AS SHORT PTR, BYVAL crgn AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToInt16ArrayAlloc|AfxVariantToInt16ArrayAlloc(BYVAL pvar AS VARIANT PTR, BYVAL pprgn AS SHORT PTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToUInt16Array|AfxVariantToUInt16Array(BYVAL pvar AS VARIANT PTR, BYVAL prgn AS USHORT PTR, BYVAL crgn AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToUInt16ArrayAlloc|AfxVariantToUInt16ArrayAlloc(BYVAL pvar AS VARIANT PTR, BYVAL pprgn AS USHORT PTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToInt32Array|AfxVariantToInt32Array(BYVAL pvar AS VARIANT PTR, BYVAL prgn AS LONG PTR, BYVAL crgn AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToInt32ArrayAlloc|AfxVariantToInt32ArrayAlloc(BYVAL pvar AS VARIANT PTR, BYVAL pprgn AS LONG PTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToUInt32Array|AfxVariantToUInt32Array(BYVAL pvar AS VARIANT PTR, BYVAL prgn AS ULONG PTR, BYVAL crgn AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToUInt32ArrayAlloc|AfxVariantToUInt32ArrayAlloc(BYVAL pvar AS VARIANT PTR, BYVAL pprgn AS ULONG PTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToInt64Array|AfxVariantToInt64Array(BYVAL pvar AS VARIANT PTR, BYVAL prgn AS LONGINT PTR, BYVAL crgn AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToInt64ArrayAlloc|AfxVariantToInt64ArrayAlloc(BYVAL pvar AS VARIANT PTR, BYVAL pprgn AS LONGINT PTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToUInt64Array|AfxVariantToUInt64Array(BYVAL pvar AS VARIANT PTR, BYVAL prgn AS ULONGINT PTR, BYVAL crgn AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToUInt64ArrayAlloc|AfxVariantToUInt64ArrayAlloc(BYVAL pvar AS VARIANT PTR, BYVAL pprgn AS ULONGINT PTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToDoubleArray|AfxVariantToDoubleArray(BYVAL pvar AS VARIANT PTR, BYVAL prgn AS DOUBLE PTR, BYVAL crgn AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToDoubleArrayAlloc|AfxVariantToDoubleArrayAlloc(BYVAL pvar AS VARIANT PTR, BYVAL pprgn AS DOUBLE PTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToStringArray|AfxVariantToStringArray(BYVAL pvar AS VARIANT PTR, BYVAL prgsz AS PWSTR, BYVAL crgsz AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToStringArrayAlloc|AfxVariantToStringArrayAlloc(BYVAL pvar AS VARIANT PTR, BYVAL pprgsz AS PWSTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantGetBooleanElem|AfxVariantGetBooleanElem(BYVAL pvar AS VARIANT PTR, BYVAL iElem AS ULONG, BYVAL pfVal AS WINBOOL PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantGetInt16Elem|AfxVariantGetInt16Elem(BYVAL pvar AS VARIANT PTR, BYVAL iElem AS ULONG, BYVAL pfVal AS SHORT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantGetUInt16Elem|AfxVariantGetUInt16Elem(BYVAL pvar AS VARIANT PTR, BYVAL iElem AS ULONG, BYVAL pnVal AS USHORT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantGetInt32Elem|AfxVariantGetInt32Elem(BYVAL pvar AS VARIANT PTR, BYVAL iElem AS ULONG, BYVAL pnVal AS LONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantGetUInt32Elem|AfxVariantGetUInt32Elem(BYVAL pvar AS VARIANT PTR, BYVAL iElem AS ULONG, BYVAL pnVal AS ULONG PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantGetInt64Elem|AfxVariantGetInt64Elem(BYVAL pvar AS VARIANT PTR, BYVAL iElem AS ULONG, BYVAL pnVal AS LONGINT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantGetUInt64Elem|AfxVariantGetUInt64Elem(BYVAL pvar AS VARIANT PTR, BYVAL iElem AS ULONG, BYVAL pnVal AS ULONGINT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantGetDoubleElem|AfxVariantGetDoubleElem(BYVAL pvar AS VARIANT PTR, BYVAL iElem AS ULONG, BYVAL pnVal AS DOUBLE PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantGetStringElem|AfxVariantGetStringElem(BYVAL pvar AS VARIANT PTR, BYVAL iElem AS ULONG, BYVAL ppszVal AS PWSTR PTR) AS HRESULT
AFX\AFXCOM.INC|AfxClearVariantArray|AfxClearVariantArray(BYVAL pvars AS VARIANT PTR, BYVAL cvars AS UINT)
AFX\AFXCOM.INC|AfxVariantCompare|AfxVariantCompare(BYVAL var1 AS VARIANT PTR, BYVAL var2 AS VARIANT PTR) AS INT_
AFX\AFXCOM.INC|AfxPropVariantToVariant|AfxPropVariantToVariant(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL pVar AS VARIANT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxVariantToPropVariant|AfxVariantToPropVariant(BYVAL pVar AS VARIANT PTR, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\AFXCOM.INC|AfxGetVarType|AfxGetVarType(BYVAL pvar AS VARIANT PTR) AS VARTYPE
AFX\AFXCOM.INC|AfxIsVarTypeFloat|AfxIsVarTypeFloat(BYVAL vt AS VARTYPE) AS BOOLEAN
AFX\AFXCOM.INC|AfxIsVariantArray|AfxIsVariantArray(BYVAL pvar AS VARIANT PTR) AS BOOLEAN
AFX\AFXCOM.INC|AfxIsVariantString|AfxIsVariantString(BYVAL pvar AS VARIANT PTR) AS BOOLEAN
AFX\AFXCOM.INC|AfxIsVarTypeSignedInteger|AfxIsVarTypeSignedInteger(BYVAL vt AS VARTYPE) AS BOOLEAN
AFX\AFXCOM.INC|AfxIsVarTypeUnsignedInteger|AfxIsVarTypeUnsignedInteger(BYVAL vt AS VARTYPE) AS BOOLEAN
AFX\AFXCOM.INC|AfxIsVarTypeInteger|AfxIsVarTypeInteger(BYVAL vt AS VARTYPE) AS BOOLEAN
AFX\AFXCOM.INC|AfxIsVarTypeNumber|AfxIsVarTypeNumber(BYVAL vt AS VARTYPE) AS BOOLEAN
AFX\AFXCOMPLEX.INC|acosh|acosh(BYVAL x AS DOUBLE) AS DOUBLE
AFX\AFXCOMPLEX.INC|asinh|asinh(BYVAL x AS DOUBLE) AS DOUBLE
AFX\AFXCOMPLEX.INC|atanh|atanh(BYVAL x AS DOUBLE) AS DOUBLE
AFX\AFXCOMPLEX.INC|hypot3|hypot3(BYVAL x AS DOUBLE, BYVAL y AS DOUBLE, BYVAL z AS DOUBLE) AS DOUBLE
AFX\AFXCOMPLEX.INC|isinf|isinf(BYVAL x AS DOUBLE) AS LONG
AFX\AFXCOMPLEX.INC|isinfinity|isinfinity(BYVAL x AS DOUBLE) AS LONG
AFX\AFXCOMPLEX.INC|CSet|CSet(BYVAL x AS DOUBLE, BYVAL y AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CRect|CRect(BYVAL x AS DOUBLE, BYVAL y AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CPolar|CPolar(BYVAL r AS DOUBLE, BYVAL theta AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CGetReal|CGetReal(BYREF z AS _complex) AS DOUBLE
AFX\AFXCOMPLEX.INC|CGetImag|CGetImag(BYREF z AS _complex) AS DOUBLE
AFX\AFXCOMPLEX.INC|CSetReal|CSetReal(BYREF z AS _complex, BYVAL x AS DOUBLE)
AFX\AFXCOMPLEX.INC|CSetImag|CSetImag(BYREF z AS _complex, BYVAL y AS DOUBLE)
AFX\AFXCOMPLEX.INC|CSwap|CSwap(BYREF z1 AS _complex, BYREF z2 AS _complex)
AFX\AFXCOMPLEX.INC|CNeg|CNeg(BYREF z AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CNegate|CNegate(BYREF z AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CNegative|CNegative(BYREF z AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CAddReal|CAddReal(BYREF z AS _complex, BYVAL x AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CAddImag|CAddImag(BYREF z AS _complex, BYVAL y AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CSubReal|CSubReal(BYREF z AS _complex, BYVAL x AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CSubImag|CSubImag(BYREF z AS _complex, BYVAL y AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CMulReal|CMulReal(BYREF z AS _complex, BYVAL x AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CMulImag|CMulImag(BYREF z AS _complex, BYVAL y AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CDivReal|CDivReal(BYREF z AS _complex, BYVAL x AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CDivImag|CDivImag(BYREF z AS _complex, BYVAL y AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CConj|CConj(BYREF z AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CConjugate|CConjugate(BYREF z AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CArg|CArg(BYREF z AS _complex) AS DOUBLE
AFX\AFXCOMPLEX.INC|CArgument|CArgument(BYREF z AS _complex) AS DOUBLE
AFX\AFXCOMPLEX.INC|CPhase|CPhase(BYREF z AS _complex) AS DOUBLE
AFX\AFXCOMPLEX.INC|CAbs|CAbs(BYREF z AS _complex) AS DOUBLE
AFX\AFXCOMPLEX.INC|CMagnitude|CMagnitude(BYREF z AS _complex) AS DOUBLE
AFX\AFXCOMPLEX.INC|CLogAbs|CLogAbs(BYREF value AS _complex) AS DOUBLE
AFX\AFXCOMPLEX.INC|CAbs2|CAbs2(BYREF z AS _complex) AS DOUBLE
AFX\AFXCOMPLEX.INC|CNorm|CNorm(BYREF z AS _complex) AS DOUBLE
AFX\AFXCOMPLEX.INC|CReciprocal|CReciprocal(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CInverse|CInverse(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CFromPolarCoordinates|CFromPolarCoordinates(BYVAL magnitude AS DOUBLE, BYVAL phase AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CSqr|CSqr(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CSqrt|CSqrt(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CSqrReal|CSqrReal(BYVAL value AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CExp|CExp(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CLog|CLog OVERLOAD(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CLog|CLog OVERLOAD(BYREF value AS _complex, BYVAL baseValue AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CLog10|CLog10(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CPow|CPow OVERLOAD(BYREF value AS _complex, BYREF power AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CPow|CPow OVERLOAD(BYREF value AS _complex, BYVAL power AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CSin|CSin(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CCos|CCos(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CSec|CSec(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CCsc|CCsc(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CTan|CTan(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CCot|CCot(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CArcSinReal|CArcSinReal(BYVAL value AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CASinReal|CASinReal(BYVAL value AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CArcSin|CArcSin(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CASin|CASin(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CArcCosReal|CArcCosReal(BYVAL value AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CACosReal|CACosReal(BYVAL value AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CArcCos|CArcCos(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CACos|CACos(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CArcSecReal|CArcSecReal(BYVAL value AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CASecReal|CASecReal(BYVAL value AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CArcSec|CArcSec(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CASec|CASec(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CArcCscReal|CArcCscReal(BYVAL value AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CACscReal|CACscReal(BYVAL value AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CArcCsc|CArcCsc(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CACsc|CACsc(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CArcTan|CArcTan(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CATan|CATan(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CArcCot|CArcCot(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CACot|CACot(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CSinH|CSinH(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CCosH|CCosH(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CSecH|CSecH(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CCscH|CCscH(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CTanH|CTanH(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CCotH|CCotH(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CArcSinH|CArcSinH(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CASinH|CASinH(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CArcCoshReal|CArcCoshReal(BYVAL value AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CACoshReal|CACoshReal(BYVAL value AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CArcCosH|CArcCosH(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CACosH|CACosH(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CArcSecH|CArcSecH(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CASecH|CASecH(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CArcCscH|CArcCscH(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CACscH|CACscH(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CArcTanhReal|CArcTanhReal(BYVAL value AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CATanhReal|CATanhReal(BYVAL value AS DOUBLE) AS _complex
AFX\AFXCOMPLEX.INC|CArcTanH|CArcTanH(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CATanH|CATanH(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CArcCotH|CArcCotH(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CACotH|CACotH(BYREF value AS _complex) AS _complex
AFX\AFXCOMPLEX.INC|CSgn|CSgn(BYREF z AS _complex) AS LONG
AFX\AFXCOMPLEX.INC|CStr|CStr(BYREF z AS _complex) AS STRING
AFX\AFXCOMPLEX.INC|CStrPolar|CStrPolar(BYREF z AS _complex) AS STRING
AFX\AFXCTL.INC|Button_Click|Button_Click(BYVAL hButton AS HWND)
AFX\AFXCTL.INC|Button_GetImage|Button_GetImage(BYVAL hButton AS HWND) AS HANDLE
AFX\AFXCTL.INC|Button_SetDontClick|Button_SetDontClick(BYVAL hButton AS HWND, BYVAL bState AS BOOL)
AFX\AFXCTL.INC|Button_SetBitmap|Button_SetBitmap(BYVAL hButton AS HWND, BYVAL hbmp AS HBITMAP) AS HBITMAP
AFX\AFXCTL.INC|Button_SetIcon|Button_SetIcon(BYVAL hButton AS HWND, BYVAL hIcon AS HICON) AS HICON
AFX\AFXCTL.INC|Button_SetImage|Button_SetImage(BYVAL hButton AS HWND, BYVAL ImageType AS DWORD, BYVAL hImage AS HANDLE) AS HANDLE
AFX\AFXCTL.INC|Button_SetImageListXY|Button_SetImageListXY(BYVAL hButton AS HWND, BYVAL himl AS HIMAGELIST, BYVAL nLeft AS LONG, BYVAL nTop AS LONG, BYVAL nRight AS LONG, BYVAL nBottom AS LONG, BYVAL uALign AS DWORD = 0) AS BOOLEAN
AFX\AFXCTL.INC|Button_DeleteBitmap|Button_DeleteBitmap(BYVAL hButton AS HWND) AS BOOLEAN
AFX\AFXCTL.INC|Button_DeleteIcon|Button_DeleteIcon(BYVAL hButton AS HWND) AS BOOLEAN
AFX\AFXCTL.INC|Button_DeleteImage|Button_DeleteImage(BYVAL hButton AS HWND, BYVAL ImageType AS DWORD) AS BOOLEAN
AFX\AFXCTL.INC|AfxGetComboBoxText|AfxGetComboBoxText(BYVAL hComboBox AS HWND, BYVAL nIndex AS LONG) AS CWSTR
AFX\AFXCTL.INC|ComboBox_GetComboBoxInfo|ComboBox_GetComboBoxInfo(BYVAL hComboBox AS HWND, BYVAL pcbi AS COMBOBOXINFO PTR) AS BOOLEAN
AFX\AFXCTL.INC|Combobox_CalcHorizontalExtent|Combobox_CalcHorizontalExtent(BYVAL hComboBox AS HWND) AS LONG
AFX\AFXCTL.INC|ComboBox_GetEditBoxHandle|ComboBox_GetEditBoxHandle(BYVAL hComboBox AS HWND) AS HWND
AFX\AFXCTL.INC|ComboBox_GetListBoxHandle|ComboBox_GetListBoxHandle(BYVAL hComboBox AS HWND) AS HWND
AFX\AFXCTL.INC|ComboBox_GetDroppedWidth|ComboBox_GetDroppedWidth(BYVAL hComboBox AS HWND) AS LONG
AFX\AFXCTL.INC|ComboBox_GetHorizontalExtent|ComboBox_GetHorizontalExtent(BYVAL hComboBox AS HWND) AS LONG
AFX\AFXCTL.INC|ComboBox_GetLocale|ComboBox_GetLocale(BYVAL hComboBox AS HWND) AS LONG
AFX\AFXCTL.INC|ComboBox_GetTopIndex|ComboBox_GetTopIndex(BYVAL hComboBox AS HWND) AS LONG
AFX\AFXCTL.INC|ComboBox_InitStorage|ComboBox_InitStorage(BYVAL hComboBox AS HWND, BYVAL items AS LONG, BYVAL cb AS LONG) AS LONG
AFX\AFXCTL.INC|ComboBox_SetDroppedWidth|ComboBox_SetDroppedWidth(BYVAL hComboBox AS HWND, BYVAL nWidth AS LONG) AS LONG
AFX\AFXCTL.INC|ComboBox_SetHorizontalExtent|ComboBox_SetHorizontalExtent(BYVAL hComboBox AS HWND, BYVAL nWidth AS LONG)
AFX\AFXCTL.INC|ComboBox_SetLocale|ComboBox_SetLocale(BYVAL hComboBox AS HWND, BYVAL lcid AS LONG) AS LONG
AFX\AFXCTL.INC|ComboBox_SetTopIndex|ComboBox_SetTopIndex(BYVAL hComboBox AS HWND, BYVAL index AS DWORD) AS LONG
AFX\AFXCTL.INC|ComboBoxEx_DeleteItem|ComboBoxEx_DeleteItem(BYVAL hComboboxEx AS HWND, BYVAL nIndex AS DWORD) AS INT_
AFX\AFXCTL.INC|ComboBoxEx_GetComboControl|ComboBoxEx_GetComboControl(BYVAL hComboboxEx AS HWND) AS HWND
AFX\AFXCTL.INC|ComboBoxEx_GetEditControl|ComboBoxEx_GetEditControl(BYVAL hComboboxEx AS HWND) AS HWND
AFX\AFXCTL.INC|ComboBoxEx_GetExtendedStyle|ComboBoxEx_GetExtendedStyle(BYVAL hComboboxEx AS HWND) AS DWORD
AFX\AFXCTL.INC|ComboBoxEx_GetImageList|ComboBoxEx_GetImageList(BYVAL hComboboxEx AS HWND) AS HIMAGELIST
AFX\AFXCTL.INC|ComboBoxEx_GetItem|ComboBoxEx_GetItem(BYVAL hComboboxEx AS HWND, BYVAL pCBItem AS COMBOBOXEXITEMW PTR) AS BOOLEAN
AFX\AFXCTL.INC|ComboBoxEx_GetUnicodeFormat|ComboBoxEx_GetUnicodeFormat(BYVAL hComboboxEx AS HWND) AS DWORD
AFX\AFXCTL.INC|ComboBoxEx_HasEditChanged|ComboBoxEx_HasEditChanged(BYVAL hComboboxEx AS HWND) AS BOOLEAN
AFX\AFXCTL.INC|ComboBoxEx_InsertItem|ComboBoxEx_InsertItem(BYVAL hComboboxEx AS HWND, BYVAL lpCBItem AS COMBOBOXEXITEMW PTR) AS LONG
AFX\AFXCTL.INC|ComboBoxEx_SetExtendedStyle|ComboBoxEx_SetExtendedStyle(BYVAL hComboboxEx AS HWND, BYVAL dwExMask AS DWORD, BYVAL dwExStyle AS DWORD) AS DWORD
AFX\AFXCTL.INC|ComboBoxEx_SetImageList|ComboBoxEx_SetImageList(BYVAL hComboboxEx AS HWND, BYVAL himl AS HIMAGELIST) AS HIMAGELIST
AFX\AFXCTL.INC|ComboBoxEx_SetItem|ComboBoxEx_SetItem(BYVAL hComboboxEx AS HWND, BYVAL lpCBItem AS COMBOBOXEXITEMW PTR) AS BOOLEAN
AFX\AFXCTL.INC|ComboBoxEx_SetUnicodeFormat|ComboBoxEx_SetUnicodeFormat(BYVAL hComboboxEx AS HWND, BYVAL fUnicode AS DWORD) AS DWORD
AFX\AFXCTL.INC|ComboBoxEx_SetWindowTheme|ComboBoxEx_SetWindowTheme(BYVAL hComboboxEx AS HWND, BYVAL pwszStyle AS WSTRING PTR)
AFX\AFXCTL.INC|Edit_CharFromPos|Edit_CharFromPos(BYVAL hEdit AS HWND, BYVAL x AS SHORT, BYVAL y AS SHORT) AS LONG
AFX\AFXCTL.INC|Edit_Clear|Edit_Clear(BYVAL hEdit AS HWND)
AFX\AFXCTL.INC|Edit_Copy|Edit_Copy(BYVAL hEdit AS HWND)
AFX\AFXCTL.INC|Edit_Cut|Edit_Cut(BYVAL hEdit AS HWND)
AFX\AFXCTL.INC|Edit_GetIMEStatus|Edit_GetIMEStatus(BYVAL hEdit AS HWND, BYVAL nStatusType AS LONG) AS LONG
AFX\AFXCTL.INC|Edit_GetLimitText|Edit_GetLimitText(BYVAL hEdit AS HWND) AS LONG
AFX\AFXCTL.INC|Edit_GetMargins|Edit_GetMargins(BYVAL hEdit AS HWND) AS DWORD
AFX\AFXCTL.INC|Edit_GetLeftMargin|Edit_GetLeftMargin(BYVAL hEdit AS HWND) AS WORD
AFX\AFXCTL.INC|Edit_GetRightMargin|Edit_GetRightMargin(BYVAL hEdit AS HWND) AS WORD
AFX\AFXCTL.INC|Edit_GetSelStart|Edit_GetSelStart(BYVAL hEdit AS HWND) AS WORD
AFX\AFXCTL.INC|Edit_GetSelEnd|Edit_GetSelEnd(BYVAL hEdit AS HWND) AS WORD
AFX\AFXCTL.INC|Edit_GetThumb|Edit_GetThumb(BYVAL hEdit AS HWND) AS LONG
AFX\AFXCTL.INC|Edit_LineScroll|Edit_LineScroll(BYVAL hEdit AS HWND, BYVAL x AS LONG, BYVAL y AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|Edit_Paste|Edit_Paste(BYVAL hEdit AS HWND)
AFX\AFXCTL.INC|Edit_PosFromChar|Edit_PosFromChar(BYVAL hEdit AS HWND, BYVAL index AS DWORD) AS LONG
AFX\AFXCTL.INC|Edit_SetCueBannerTextFocused|Edit_SetCueBannerTextFocused(BYVAL hEdit AS HWND, BYVAL pwszText AS WSTRING PTR, BYVAL fDrawFocused AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|Edit_SetIMEStatus|Edit_SetIMEStatus(BYVAL hEdit AS HWND, BYVAL nStatusType AS LONG, BYVAL flags AS DWORD) AS DWORD
AFX\AFXCTL.INC|Edit_SetMargins|Edit_SetMargins(BYVAL hEdit AS HWND, BYVAL nMargins AS LONG, BYVAL nWidth AS LONG)
AFX\AFXCTL.INC|Edit_SetLeftMargin|Edit_SetLeftMargin(BYVAL hEdit AS HWND, BYVAL nWidth AS WORD)
AFX\AFXCTL.INC|Edit_SetRightMargin|Edit_SetRightMargin(BYVAL hEdit AS HWND, BYVAL nWidth AS WORD)
AFX\AFXCTL.INC|Header_HitTest|Header_HitTest(BYVAL hwndHD AS HWND, BYVAL phdhti AS HDHITTESTINFO PTR) AS LONG
AFX\AFXCTL.INC|Header_GetItemWidth|Header_GetItemWidth(BYVAL hwndHD AS HWND, BYVAL nItem AS LONG) AS LONG
AFX\AFXCTL.INC|Header_SetItemWidth|Header_SetItemWidth(BYVAL hwndHD AS HWND, BYVAL nItem AS LONG, BYVAL nWidth AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|Header_GetItemOrder|Header_GetItemOrder(BYVAL hwndHD AS HWND, BYVAL nItem AS LONG) AS LONG
AFX\AFXCTL.INC|Header_SetItemOrder|Header_SetItemOrder(BYVAL hwndHD AS HWND, BYVAL nItem AS LONG, BYVAL iOrder AS LONG) AS LONG
AFX\AFXCTL.INC|Header_GetItemText|Header_GetItemText(BYVAL hwndHD AS HWND, BYVAL nItem AS LONG, BYVAL pwszText AS WSTRING PTR, BYVAL cchTextMax AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|Header_SetItemText|Header_SetItemText(BYVAL hwndHD AS HWND, BYVAL nItem AS LONG, BYVAL pwszText AS WSTRING PTR) AS BOOLEAN
AFX\AFXCTL.INC|HotKey_GetHotKey|HotKey_GetHotKey(BYVAL hHotKey AS HWND) AS DWORD
AFX\AFXCTL.INC|HotKey_SetHotKey|HotKey_SetHotKey(BYVAL hHotKey AS HWND, BYVAL vkCode AS SHORT, BYVAL fMods AS SHORT)
AFX\AFXCTL.INC|HotKey_SetRules|HotKey_SetRules(BYVAL hHotKey AS HWND, BYVAL fwCombInv AS WORD, BYVAL fwModInv AS WORD)
AFX\AFXCTL.INC|ScrollBar_SetRangeRedraw|ScrollBar_SetRangeRedraw(BYVAL hScrollBar AS HWND, BYVAL posMin AS LONG, BYVAL posMax AS LONG) AS LONG
AFX\AFXCTL.INC|SysLink_GetIdealHeight|SysLink_GetIdealHeight(BYVAL hLM AS HWND) AS LONG
AFX\AFXCTL.INC|Syslink_GetItem|Syslink_GetItem(BYVAL hLM AS HWND, BYVAL lpItem AS LITEM PTR) AS BOOLEAN
AFX\AFXCTL.INC|SysLink_HitTest|SysLink_HitTest(BYVAL hLM AS HWND, BYVAL lphti AS LHITTESTINFO PTR) AS BOOLEAN
AFX\AFXCTL.INC|SysLink_SetItem|SysLink_SetItem(BYVAL hLM AS HWND, BYVAL lpItem AS LITEM PTR) AS BOOLEAN
AFX\AFXCTL.INC|AfxGetListBoxText|AfxGetListBoxText(BYVAL hListBox AS HWND, BYVAL nIndex AS LONG) AS CWSTR
AFX\AFXCTL.INC|ListBox_AddFile|ListBox_AddFile(BYVAL hListBox AS HWND, BYVAL pwszFileName AS WSTRING PTR) AS LONG
AFX\AFXCTL.INC|ListBox_GetAnchorIndex|ListBox_GetAnchorIndex(BYVAL hListBox AS HWND) AS LONG
AFX\AFXCTL.INC|Listbox_GetListboxInfo|Listbox_GetListboxInfo(BYVAL hListBox AS HWND) AS LONG
AFX\AFXCTL.INC|ListBox_GetLocale|ListBox_GetLocale(BYVAL hListBox AS HWND) AS LONG
AFX\AFXCTL.INC|Listbox_InitStorage|Listbox_InitStorage(BYVAL hListBox AS HWND, BYVAL nItems AS DWORD, BYVAL nBytes AS DWORD) AS LONG
AFX\AFXCTL.INC|Listbox_ItemFromPoint|Listbox_ItemFromPoint(BYVAL hListBox AS HWND, BYVAL x AS SHORT, BYVAL y AS SHORT) AS LONG
AFX\AFXCTL.INC|Listbox_SelItemRangeEx|Listbox_SelItemRangeEx(BYVAL hListBox AS HWND, BYVAL startIndex AS LONG, BYVAL endIndex AS LONG) AS LONG
AFX\AFXCTL.INC|ListBox_SetAnchorIndex|ListBox_SetAnchorIndex(BYVAL hListBox AS HWND, BYVAL index AS LONG) AS LONG
AFX\AFXCTL.INC|Listbox_SetCount|Listbox_SetCount(BYVAL hListBox AS HWND, BYVAL nCount AS DWORD) AS LONG
AFX\AFXCTL.INC|ListBox_SetLocale|ListBox_SetLocale(BYVAL hListBox AS HWND, BYVAL wLocaleID AS DWORD) AS LONG
AFX\AFXCTL.INC|ListBox_ReplaceString|ListBox_ReplaceString(BYVAL hListBox AS HWND, BYVAL index AS LONG, BYVAL pwszNewText AS WSTRING PTR, BYVAL pNewData AS LONG_PTR = 0) AS LONG
AFX\AFXCTL.INC|Listbox_CalcHorizontalExtent|Listbox_CalcHorizontalExtent(BYVAL hListBox AS HWND) AS LONG
AFX\AFXCTL.INC|ListView_FindString|ListView_FindString(BYVAL hwndLV AS HWND, BYVAL pwszText AS WSTRING PTR) AS LONG
AFX\AFXCTL.INC|ListView_GetFocusedItem|ListView_GetFocusedItem(BYVAL hwndLV AS HWND) AS LONG
AFX\AFXCTL.INC|ListView_GetISearchStringLen|ListView_GetISearchStringLen(BYVAL hwndLV AS HWND) AS LONG
AFX\AFXCTL.INC|ListView_HitTestEx|ListView_HitTestEx(BYVAL hwndLV AS HWND, BYVAL pinfo AS LVHITTESTINFO PTR) AS LONG
AFX\AFXCTL.INC|ListView_GetSelection|ListView_GetSelection(BYVAL hwndLV AS HWND) AS LONG
AFX\AFXCTL.INC|ListView_SelectItem|ListView_SelectItem(BYVAL hwndLV AS HWND, BYVAL nIndex AS LONG)
AFX\AFXCTL.INC|ListView_SelectAllItems|ListView_SelectAllItems(BYVAL hwndLV AS HWND)
AFX\AFXCTL.INC|ListView_UnselectItem|ListView_UnselectItem(BYVAL hwndLV AS HWND, BYVAL nIndex AS LONG)
AFX\AFXCTL.INC|ListView_UnselectAllItems|ListView_UnselectAllItems(BYVAL hwndLV AS HWND)
AFX\AFXCTL.INC|ListView_MakeHeaderFlat|ListView_MakeHeaderFlat(BYVAL hwndLV AS HWND)
AFX\AFXCTL.INC|ListView_FitContent|ListView_FitContent(BYVAL hwndLV AS HWND, BYVAL nCol AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|ListView_AutoSizeColumns|ListView_AutoSizeColumns(BYVAL hwndLV AS HWND) AS BOOLEAN
AFX\AFXCTL.INC|ListView_FitHeader|ListView_FitHeader(BYVAL hwndLV AS HWND, BYVAL nCol AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|ListView_AutoSizeHeader|ListView_AutoSizeHeader(BYVAL hwndLV AS HWND) AS BOOLEAN
AFX\AFXCTL.INC|ListView_GetColumnCount|ListView_GetColumnCount(BYVAL hwndLV AS HWND) AS LONG
AFX\AFXCTL.INC|ListView_GetColumnOrder|ListView_GetColumnOrder(BYVAL hwndLV AS HWND, BYVAL nCol AS LONG) AS LONG
AFX\AFXCTL.INC|ListView_GetOrderArray|ListView_GetOrderArray(BYVAL hwndLV AS HWND, BYVAL nSize AS DWORD, BYVAL lpiArray AS LONG PTR) AS LONG
AFX\AFXCTL.INC|ListView_GetTooltipsFont|ListView_GetTooltipsFont(BYVAL hwndLV AS HWND) AS HFONT
AFX\AFXCTL.INC|ListView_SetTooltipsFont|ListView_SetTooltipsFont(BYVAL hwndLV AS HWND, BYVAL hFont AS HFONT = NULL, BYVAL fRedraw AS BOOLEAN = FALSE)
AFX\AFXCTL.INC|ListView_GetColumnText|ListView_GetColumnText(BYVAL hwndLV AS HWND, BYVAL nCol AS LONG, BYVAL pwszText AS WSTRING PTR, BYVAL cchTextMax AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|ListView_GetHeaderText|ListView_GetHeaderText(BYVAL hwndLV AS HWND, BYVAL nCol AS LONG, BYVAL pwszText AS WSTRING PTR, BYVAL cchTextMax AS LONG) AS LONG
AFX\AFXCTL.INC|ListView_AddColumn|ListView_AddColumn(BYVAL hwndLV AS HWND, BYVAL nCol AS LONG, BYVAL pwszText AS WSTRING PTR, BYVAL nWidth AS LONG, BYVAL nFormat AS LONG = 0) AS LONG
AFX\AFXCTL.INC|ListView_AddItem|ListView_AddItem(BYVAL hwndLV AS HWND, BYVAL nItem AS LONG, BYVAL nImage AS LONG, BYVAL pwszText AS WSTRING PTR) AS LONG
AFX\AFXCTL.INC|ListView_AppendItem|ListView_AppendItem(BYVAL hwndLV AS HWND, BYVAL nImage AS LONG, BYVAL pwszText AS WSTRING PTR) AS LONG
AFX\AFXCTL.INC|Rebar_BeginDrag|Rebar_BeginDrag(BYVAL hRebar AS HWND, BYVAL uBand AS DWORD, BYVAL dwPos AS DWORD)
AFX\AFXCTL.INC|Rebar_DeleteBand|Rebar_DeleteBand(BYVAL hRebar AS HWND, BYVAL uBand AS DWORD) AS BOOLEAN
AFX\AFXCTL.INC|Rebar_DragMove|Rebar_DragMove(BYVAL hRebar AS HWND, BYVAL dwPos AS DWORD)
AFX\AFXCTL.INC|Rebar_EndDrag|Rebar_EndDrag(BYVAL hRebar AS HWND)
AFX\AFXCTL.INC|Rebar_GetBandBorders|Rebar_GetBandBorders(BYVAL hRebar AS HWND, BYVAL uBand AS DWORD, BYVAL lprc AS RECT PTR)
AFX\AFXCTL.INC|AfxGetRebarBandRect|AfxGetRebarBandRect(BYVAL hRebar AS HWND, BYVAL nBand AS LONG) AS RECT
AFX\AFXCTL.INC|Rebar_GetBandCount|Rebar_GetBandCount(BYVAL hRebar AS HWND) AS DWORD
AFX\AFXCTL.INC|Rebar_GetBandInfo|Rebar_GetBandInfo(BYVAL hRebar AS HWND, BYVAL uBand AS DWORD, BYVAL lprbbi AS REBARBANDINFOW PTR) AS BOOLEAN
AFX\AFXCTL.INC|AfxGetRebarBandInfo|AfxGetRebarBandInfo(BYVAL hRebar AS HWND, BYVAL nBand AS LONG) AS REBARBANDINFOW
AFX\AFXCTL.INC|Rebar_GetBandMargins|Rebar_GetBandMargins(BYVAL hRebar AS HWND, BYVAL pMargins AS MARGINS PTR)
AFX\AFXCTL.INC|Rebar_GetBarHeight|Rebar_GetBarHeight(BYVAL hRebar AS HWND) AS DWORD
AFX\AFXCTL.INC|Rebar_GetBarInfo|Rebar_GetBarInfo(BYVAL hRebar AS HWND, BYVAL lprbi AS REBARINFO PTR) AS BOOLEAN
AFX\AFXCTL.INC|Rebar_GetBkColor|Rebar_GetBkColor(BYVAL hRebar AS HWND) AS COLORREF
AFX\AFXCTL.INC|Rebar_GetColorScheme|Rebar_GetColorScheme(BYVAL hRebar AS HWND, BYVAL lpcs AS COLORSCHEME PTR) AS BOOLEAN
AFX\AFXCTL.INC|Rebar_GetDropTarget|Rebar_GetDropTarget(BYVAL hRebar AS HWND) AS IDropTarget PTR
AFX\AFXCTL.INC|Rebar_GetExtendedStyle|Rebar_GetExtendedStyle(BYVAL hRebar AS HWND) AS DWORD
AFX\AFXCTL.INC|Rebar_GetPalette|Rebar_GetPalette(BYVAL hRebar AS HWND) AS DWORD
AFX\AFXCTL.INC|Rebar_GetRect|Rebar_GetRect(BYVAL hRebar AS HWND, BYVAL uBand AS DWORD, BYVAL lprc AS RECT PTR) AS BOOLEAN
AFX\AFXCTL.INC|Rebar_GetRowCount|Rebar_GetRowCount(BYVAL hRebar AS HWND) AS DWORD
AFX\AFXCTL.INC|Rebar_GetRowHeight|Rebar_GetRowHeight(BYVAL hRebar AS HWND, BYVAL uRow AS DWORD) AS DWORD
AFX\AFXCTL.INC|Rebar_GetTextColor|Rebar_GetTextColor(BYVAL hRebar AS HWND) AS COLORREF
AFX\AFXCTL.INC|Rebar_GetTooltips|Rebar_GetTooltips(BYVAL hRebar AS HWND) AS HWND
AFX\AFXCTL.INC|Rebar_GetUnicodeFormat|Rebar_GetUnicodeFormat(BYVAL hRebar AS HWND) AS LONG
AFX\AFXCTL.INC|Rebar_HitTest|Rebar_HitTest(BYVAL hRebar AS HWND, BYVAL lprhbt AS RBHITTESTINFO PTR) AS LONG
AFX\AFXCTL.INC|Rebar_IdToIndex|Rebar_IdToIndex(BYVAL hRebar AS HWND, BYVAL uBandID AS DWORD) AS LONG
AFX\AFXCTL.INC|Rebar_InsertBand|Rebar_InsertBand(BYVAL hRebar AS HWND, BYVAL nIndex AS LONG, BYVAL lprbbi AS REBARBANDINFOW PTR) AS BOOLEAN
AFX\AFXCTL.INC|Rebar_MaximizeBand|Rebar_MaximizeBand(BYVAL hRebar AS HWND, BYVAL uBand AS DWORD, BYVAL fIdeal AS DWORD)
AFX\AFXCTL.INC|Rebar_MinimizeBand|Rebar_MinimizeBand(BYVAL hRebar AS HWND, BYVAL uBand AS DWORD)
AFX\AFXCTL.INC|Rebar_MoveBand|Rebar_MoveBand(BYVAL hRebar AS HWND, BYVAL nFrom AS DWORD, BYVAL nTo AS DWORD) AS BOOLEAN
AFX\AFXCTL.INC|Rebar_PushChevron|Rebar_PushChevron(BYVAL hRebar AS HWND, BYVAL uBand AS DWORD, BYVAL iAppValue AS DWORD)
AFX\AFXCTL.INC|Rebar_SetBandInfo|Rebar_SetBandInfo(BYVAL hRebar AS HWND, BYVAL uBand AS DWORD, BYVAL lprbbi AS REBARBANDINFOW PTR) AS BOOLEAN
AFX\AFXCTL.INC|Rebar_SetBandWidth|Rebar_SetBandWidth(BYVAL hRebar AS HWND, BYVAL uBand AS DWORD, BYVAL nWidth AS DWORD) AS BOOLEAN
AFX\AFXCTL.INC|Rebar_SetBarInfo|Rebar_SetBarInfo(BYVAL hRebar AS HWND, BYVAL lprbi AS REBARINFO PTR) AS BOOLEAN
AFX\AFXCTL.INC|Rebar_SetBkColor|Rebar_SetBkColor(BYVAL hRebar AS HWND, BYVAL clrBk AS DWORD) AS DWORD
AFX\AFXCTL.INC|Rebar_SetColorScheme|Rebar_SetColorScheme(BYVAL hRebar AS HWND, BYVAL lpcs AS COLORSCHEME PTR)
AFX\AFXCTL.INC|Rebar_SetPalette|Rebar_SetPalette(BYVAL hRebar AS HWND, BYVAL hpal AS HPALETTE) AS HPALETTE
AFX\AFXCTL.INC|Rebar_SetParent|Rebar_SetParent(BYVAL hRebar AS HWND, BYVAL hwndParent AS hWND) AS HWND
AFX\AFXCTL.INC|Rebar_SetTextColor|Rebar_SetTextColor(BYVAL hRebar AS HWND, BYVAL clrText AS COLORREF) AS COLORREF
AFX\AFXCTL.INC|Rebar_SetTooltips|Rebar_SetTooltips(BYVAL hRebar AS HWND, BYVAL hwndToolTip AS HWND)
AFX\AFXCTL.INC|Rebar_SetUnicodeFormat|Rebar_SetUnicodeFormat(BYVAL hRebar AS HWND, BYVAL fUnicode AS DWORD) AS DWORD
AFX\AFXCTL.INC|Rebar_SetWindowTheme|Rebar_SetWindowTheme(BYVAL hRebar AS HWND, BYVAL pwszTheme AS WSTRING PTR)
AFX\AFXCTL.INC|Rebar_ShowBand|Rebar_ShowBand(BYVAL hRebar AS HWND, BYVAL uBand AS DWORD, BYVAL fShow AS DWORD) AS BOOLEAN
AFX\AFXCTL.INC|Rebar_SizeToRect|Rebar_SizeToRect(BYVAL hRebar AS HWND, BYVAL prc AS RECT PTR) AS BOOLEAN
AFX\AFXCTL.INC|Static_SetImage|Static_SetImage(BYVAL hStatic AS HWND, BYVAL nType AS LONG, BYVAL hImage AS HANDLE) AS HANDLE
AFX\AFXCTL.INC|Static_DeleteImage|Static_DeleteImage(BYVAL hStatic AS HWND, BYVAL nType AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|Static_GetImage|Static_GetImage(BYVAL hStatic AS HWND, BYVAL nType AS LONG) AS HANDLE
AFX\AFXCTL.INC|Static_SetBitmap|Static_SetBitmap(BYVAL hStatic AS HWND, BYVAL hBitmap AS HBITMAP) AS HBITMAP
AFX\AFXCTL.INC|Static_DeleteIcon|Static_DeleteIcon(BYVAL hStatic AS HWND) AS BOOLEAN
AFX\AFXCTL.INC|Static_DeleteBitmap|Static_DeleteBitmap(BYVAL hStatic AS HWND) AS BOOLEAN
AFX\AFXCTL.INC|Static_SetCursor|Static_SetCursor(BYVAL hStatic AS HWND, BYVAL hCursor AS HCURSOR) AS HCURSOR
AFX\AFXCTL.INC|Static_DeleteCursor|Static_DeleteCursor(BYVAL hStatic AS HWND) AS BOOLEAN
AFX\AFXCTL.INC|Static_SetEnhancedMetafile|Static_SetEnhancedMetafile(BYVAL hStatic AS HWND, BYVAL hEnhMetafile AS HENHMETAFILE) AS HENHMETAFILE
AFX\AFXCTL.INC|Static_DeleteEnhancedMetafile|Static_DeleteEnhancedMetafile(BYVAL hStatic AS HWND) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_AddBitmap|Toolbar_AddBitmap(BYVAL hToolBar AS HWND, BYVAL nButtons AS DWORD, BYVAL tabm AS TBADDBITMAP PTR) AS LONG
AFX\AFXCTL.INC|Toolbar_AddButtons|Toolbar_AddButtons(BYVAL hToolBar AS HWND, BYVAL nButtons AS DWORD, BYVAL lpButtons AS TBBUTTON PTR) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_AddButton|Toolbar_AddButton(BYVAL hToolBar AS HWND, BYVAL idxBitmap AS LONG, BYVAL idCommand AS LONG, BYVAL fsState AS UBYTE = 0, BYVAL fsStyle AS UBYTE = 0, BYVAL dwData AS DWORD_PTR = 0, BYVAL pwszText AS WSTRING PTR = NULL) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_AddSeparator|Toolbar_AddSeparator(BYVAL hToolBar AS HWND, BYVAL nWidth AS LONG = 0) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_InsertButton|Toolbar_InsertButton OVERLOAD(BYVAL hToolBar AS HWND, BYVAL idxButton AS LONG, BYVAL lpButton AS TBBUTTON PTR) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_InsertButton|Toolbar_InsertButton OVERLOAD(BYVAL hToolBar AS HWND, BYVAL idxButton AS LONG, BYVAL idxBitmap AS LONG, BYVAL idCommand AS LONG, BYVAL fsState AS UBYTE = 0, BYVAL fsStyle AS UBYTE = 0, BYVAL dwData AS DWORD_PTR = 0, BYVAL pwszText AS WSTRING PTR = NULL) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_InsertSeparator|Toolbar_InsertSeparator(BYVAL hToolBar AS HWND, BYVAL idxButton AS LONG, BYVAL nWidth AS LONG = 0) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_AddString|Toolbar_AddString(BYVAL hToolBar AS HWND, BYVAL hInst AS HINSTANCE, BYVAL idString AS INT_PTR) AS LONG
AFX\AFXCTL.INC|Toolbar_AutoSize|Toolbar_AutoSize(BYVAL hToolBar AS HWND)
AFX\AFXCTL.INC|Toolbar_ButtonCount|Toolbar_ButtonCount(BYVAL hToolBar AS HWND) AS DWORD
AFX\AFXCTL.INC|Toolbar_ButtonStructSize|Toolbar_ButtonStructSize(BYVAL hToolBar AS HWND, BYVAL cb AS LONG)
AFX\AFXCTL.INC|Toolbar_ChangeBitmap|Toolbar_ChangeBitmap(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG, BYVAL iBitmap AS WORD) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_CheckButton|Toolbar_CheckButton(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG, BYVAL fCheck AS SHORT) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_CommandToIndex|Toolbar_CommandToIndex(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG) AS LONG
AFX\AFXCTL.INC|Toolbar_Customize|Toolbar_Customize(BYVAL hToolBar AS HWND)
AFX\AFXCTL.INC|Toolbar_DeleteButton|Toolbar_DeleteButton(BYVAL hToolBar AS HWND, BYVAL nButton AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_EnableButton|Toolbar_EnableButton(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_DisableButton|Toolbar_DisableButton(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_GetAnchorHighlight|Toolbar_GetAnchorHighlight(BYVAL hToolBar AS HWND) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_GetBitmap|Toolbar_GetBitmap(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG) AS LONG
AFX\AFXCTL.INC|Toolbar_GetBitmapFlags|Toolbar_GetBitmapFlags(BYVAL hToolBar AS HWND) AS DWORD
AFX\AFXCTL.INC|Toolbar_GetButton|Toolbar_GetButton(BYVAL hToolBar AS HWND, BYVAL nButton AS LONG, BYVAL ptbb AS TBBUTTON PTR) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_GetButtonSize|Toolbar_GetButtonSize(BYVAL hToolBar AS HWND) AS DWORD
AFX\AFXCTL.INC|Toolbar_GetButtonHeight|Toolbar_GetButtonHeight(BYVAL hToolBar AS HWND) AS DWORD
AFX\AFXCTL.INC|Toolbar_GetButtonWidth|Toolbar_GetButtonWidth(BYVAL hToolBar AS HWND) AS DWORD
AFX\AFXCTL.INC|Toolbar_GetButtonInfo|Toolbar_GetButtonInfo(BYVAL hToolBar AS HWND, BYVAL iID AS LONG, BYVAL lptbbi AS TBBUTTONINFOW PTR) AS LONG
AFX\AFXCTL.INC|Toolbar_GetColorScheme|Toolbar_GetColorScheme(BYVAL hToolBar AS HWND, BYVAL lpcs AS COLORSCHEME PTR) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_GetImageList|Toolbar_GetImageList(BYVAL hToolBar AS HWND) AS HIMAGELIST
AFX\AFXCTL.INC|Toolbar_GetDisabledImageList|Toolbar_GetDisabledImageList(BYVAL hToolBar AS HWND) AS HIMAGELIST
AFX\AFXCTL.INC|Toolbar_GetHotImageList|Toolbar_GetHotImageList(BYVAL hToolBar AS HWND) AS HIMAGELIST
AFX\AFXCTL.INC|Toolbar_GetExtendedStyle|Toolbar_GetExtendedStyle(BYVAL hToolBar AS HWND) AS DWORD
AFX\AFXCTL.INC|Toolbar_GetHorizontalPadding|Toolbar_GetHorizontalPadding(BYVAL hToolBar AS HWND) AS DWORD
AFX\AFXCTL.INC|Toolbar_GetVerticalPadding|Toolbar_GetVerticalPadding(BYVAL hToolBar AS HWND) AS DWORD
AFX\AFXCTL.INC|Toolbar_GetHotItem|Toolbar_GetHotItem(BYVAL hToolBar AS HWND) AS DWORD
AFX\AFXCTL.INC|Toolbar_GetInsertMark|Toolbar_GetInsertMark(BYVAL hToolBar AS HWND, BYVAL ptbim AS TBINSERTMARK PTR) AS LONG
AFX\AFXCTL.INC|Toolbar_GetInsertMarkColor|Toolbar_GetInsertMarkColor(BYVAL hToolBar AS HWND) AS COLORREF
AFX\AFXCTL.INC|Toolbar_GetItemRect|Toolbar_GetItemRect(BYVAL hToolBar AS HWND, BYVAL nButton AS LONG, BYVAL lprc AS RECT PTR) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_GetMaxSize|Toolbar_GetMaxSize(BYVAL hToolBar AS HWND, BYVAL psize AS SIZE PTR) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_GetMetrics|Toolbar_GetMetrics(BYVAL hToolBar AS HWND, BYVAL ptbMetrics AS TBMETRICS PTR)
AFX\AFXCTL.INC|Toolbar_GetPadding|Toolbar_GetPadding(BYVAL hToolBar AS HWND) AS DWORD
AFX\AFXCTL.INC|Toolbar_GetRect|Toolbar_GetRect(BYVAL hToolBar AS HWND, BYVAL iID AS LONG, BYVAL lprc AS RECT PTR) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_GetRows|Toolbar_GetRows(BYVAL hToolBar AS HWND) AS DWORD
AFX\AFXCTL.INC|Toolbar_GetState|Toolbar_GetState(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG) AS DWORD
AFX\AFXCTL.INC|Toolbar_GetString|Toolbar_GetString(BYVAL hToolBar AS HWND, BYVAL iString AS SHORT, BYVAL pBuffer AS WSTRING PTR, BYVAL cchMax AS SHORT) AS LONG
AFX\AFXCTL.INC|Toolbar_GetStyle|Toolbar_GetStyle(BYVAL hToolBar AS HWND) AS DWORD
AFX\AFXCTL.INC|Toolbar_GetTextRows|Toolbar_GetTextRows(BYVAL hToolBar AS HWND) AS DWORD
AFX\AFXCTL.INC|Toolbar_GetTooltips|Toolbar_GetTooltips(BYVAL hToolBar AS HWND) AS HWND
AFX\AFXCTL.INC|Toolbar_GetUnicodeFormat|Toolbar_GetUnicodeFormat(BYVAL hToolBar AS HWND) AS DWORD
AFX\AFXCTL.INC|Toolbar_HideButton|Toolbar_HideButton(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG, BYVAL fShow AS SHORT) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_HitTest|Toolbar_HitTest(BYVAL hToolBar AS HWND, BYVAL pptHitTest AS POINT PTR) AS LONG
AFX\AFXCTL.INC|Toolbar_Indeterminate|Toolbar_Indeterminate(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG, BYVAL fIndeterminate AS SHORT) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_InsertMarkHitTest|Toolbar_InsertMarkHitTest(BYVAL hToolBar AS HWND, BYVAL lppt AS POINT PTR, BYVAL lptbim AS TBINSERTMARK PTR) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_IsButtonChecked|Toolbar_IsButtonChecked(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_IsButtonEnabled|Toolbar_IsButtonEnabled(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_IsButtonHidden|Toolbar_IsButtonHidden(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_IsButtonHighlighted|Toolbar_IsButtonHighlighted(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_IsButtonIndeterminate|Toolbar_IsButtonIndeterminate(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_IsButtonPressed|Toolbar_IsButtonPressed(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_LoadImages|Toolbar_LoadImages(BYVAL hToolBar AS HWND, BYVAL iBitmapID AS DWORD, BYVAL hinst AS HINSTANCE) AS LONG
AFX\AFXCTL.INC|Toolbar_MapAccelerator|Toolbar_MapAccelerator(BYVAL hToolBar AS HWND, BYVAL chAccel AS DWORD, BYVAL pIDBtn AS DWORD PTR) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_MarkButton|Toolbar_MarkButton(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG, BYVAL fHighlight AS SHORT) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_MoveButton|Toolbar_MoveButton(BYVAL hToolBar AS HWND, BYVAL uOldPos AS DWORD, BYVAL uNewPos AS DWORD) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_PressButton|Toolbar_PressButton(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG, BYVAL fPress AS SHORT) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_ReplaceBitmap|Toolbar_ReplaceBitmap(BYVAL hToolBar AS HWND, BYVAL ptbrb AS TBREPLACEBITMAP PTR) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_SaveRestore|Toolbar_SaveRestore(BYVAL hToolBar AS HWND, BYVAL fSave AS LONG, BYVAL ptbsp AS TBSAVEPARAMSW PTR)
AFX\AFXCTL.INC|Toolbar_SetAnchorHighlight|Toolbar_SetAnchorHighlight(BYVAL hToolBar AS HWND, BYVAL fAnchor AS BOOLEAN) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_SetBitmapSize|Toolbar_SetBitmapSize(BYVAL hToolBar AS HWND, BYVAL dxBitmap AS SHORT, BYVAL dyBitmap AS SHORT) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_SetButtonInfo|Toolbar_SetButtonInfo(BYVAL hToolBar AS HWND, BYVAL iID AS LONG, BYVAL lptbbi AS TBBUTTONINFOW PTR) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_SetButtonSize|Toolbar_SetButtonSize(BYVAL hToolBar AS HWND, BYVAL dxButton AS SHORT, BYVAL dyButton AS SHORT) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_SetButtonWidth|Toolbar_SetButtonWidth(BYVAL hToolBar AS HWND, BYVAL cxMin AS SHORT, BYVAL cxMax AS SHORT) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_SetCmdId|Toolbar_SetCmdId(BYVAL hToolBar AS HWND, BYVAL index AS SHORT, BYVAL cmdid AS SHORT) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_SetColorScheme|Toolbar_SetColorScheme(BYVAL hToolBar AS HWND, BYVAL lpcs AS COLORSCHEME PTR)
AFX\AFXCTL.INC|Toolbar_SetImageList|Toolbar_SetImageList(BYVAL hToolBar AS HWND, BYVAL himlNew AS HIMAGELIST) AS HIMAGELIST
AFX\AFXCTL.INC|Toolbar_SetHotImageList|Toolbar_SetHotImageList(BYVAL hToolBar AS HWND, BYVAL himlNewHot AS HIMAGELIST) AS HIMAGELIST
AFX\AFXCTL.INC|Toolbar_SetDisabledImageList|Toolbar_SetDisabledImageList(BYVAL hToolBar AS HWND, BYVAL himlNewDisabled AS HIMAGELIST) AS HIMAGELIST
AFX\AFXCTL.INC|Toolbar_SetPressedImageList|Toolbar_SetPressedImageList(BYVAL hToolBar AS HWND, BYVAL iImageID AS DWORD, BYVAL himlNew AS HIMAGELIST) AS HIMAGELIST
AFX\AFXCTL.INC|Toolbar_SetDrawTextFlags|Toolbar_SetDrawTextFlags(BYVAL hToolBar AS HWND, BYVAL dwMask AS DWORD, BYVAL dwDTFlags AS DWORD) AS DWORD
AFX\AFXCTL.INC|Toolbar_SetExtendedStyle|Toolbar_SetExtendedStyle(BYVAL hToolBar AS HWND, BYVAL dwExStyle AS DWORD) AS DWORD
AFX\AFXCTL.INC|Toolbar_SetHotItem|Toolbar_SetHotItem(BYVAL hToolBar AS HWND, BYVAL iHot AS LONG) AS LONG
AFX\AFXCTL.INC|Toolbar_SetIndent|Toolbar_SetIndent(BYVAL hToolBar AS HWND, BYVAL iIndent AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_SetInsertMark|Toolbar_SetInsertMark(BYVAL hToolBar AS HWND, BYVAL lptbim AS TBINSERTMARK PTR)
AFX\AFXCTL.INC|Toolbar_SetInsertMarkColor|Toolbar_SetInsertMarkColor(BYVAL hToolBar AS HWND, BYVAL clrInsertMark AS COLORREF) AS COLORREF
AFX\AFXCTL.INC|Toolbar_SetListGap|Toolbar_SetListGap(BYVAL hToolBar AS HWND, BYVAL gap AS DWORD)
AFX\AFXCTL.INC|Toolbar_SetMaxTextRows|Toolbar_SetMaxTextRows(BYVAL hToolBar AS HWND, BYVAL iMaxRows AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_SetMetrics|Toolbar_SetMetrics(BYVAL hToolBar AS HWND, BYVAL ptbMetrics AS TBMETRICS PTR)
AFX\AFXCTL.INC|Toolbar_SetPadding|Toolbar_SetPadding(BYVAL hToolBar AS HWND, BYVAL cx AS SHORT, BYVAL cy AS SHORT) AS DWORD
AFX\AFXCTL.INC|Toolbar_SetParent|Toolbar_SetParent(BYVAL hToolBar AS HWND, BYVAL hwndParent AS HWND) AS HWND
AFX\AFXCTL.INC|Toolbar_SetRows|Toolbar_SetRows(BYVAL hToolBar AS HWND, BYVAL cRows AS WORD, BYVAL fLarger AS BOOLEAN, BYVAL lprc AS RECT PTR)
AFX\AFXCTL.INC|Toolbar_SetState|Toolbar_SetState(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG, BYVAL fState AS SHORT) AS BOOLEAN
AFX\AFXCTL.INC|Toolbar_SetStyle|Toolbar_SetStyle(BYVAL hToolBar AS HWND, BYVAL dwStyle AS DWORD)
AFX\AFXCTL.INC|Toolbar_SetToolTips|Toolbar_SetToolTips(BYVAL hToolBar AS HWND, BYVAL hwndToolTip AS HWND)
AFX\AFXCTL.INC|Toolbar_SetUnicodeFormat|Toolbar_SetUnicodeFormat(BYVAL hToolBar AS HWND, BYVAL fUnicode AS DWORD) AS DWORD
AFX\AFXCTL.INC|Toolbar_SetWindowTheme|Toolbar_SetWindowTheme(BYVAL hToolBar AS HWND, BYVAL pwszTheme AS WSTRING PTR)
AFX\AFXCTL.INC|Toolbar_MakeOpaque|Toolbar_MakeOpaque(BYVAL hToolBar AS HWND)
AFX\AFXCTL.INC|Toolbar_GetObject|Toolbar_GetObject(BYVAL hToolBar AS HWND) AS IDropTarget PTR
AFX\AFXCTL.INC|Toolbar_GetButtonText|Toolbar_GetButtonText(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG, BYVAL pBuffer AS WSTRING PTR) AS LONG
AFX\AFXCTL.INC|Toolbar_ButtonGetTextLength|Toolbar_ButtonGetTextLength(BYVAL hToolBar AS HWND, BYVAL idButton AS LONG) AS LONG
AFX\AFXCTL.INC|TreeView_GetItemEx|TreeView_GetItemEx(BYVAL hwndTV AS HWND, BYVAL pitem AS TVITEMEXW PTR) AS BOOLEAN
AFX\AFXCTL.INC|TreeView_AddItem|TreeView_AddItem(BYVAL hwndTV AS HWND, BYVAL hParent AS HTREEITEM, BYVAL hInsertAfter AS HTREEITEM, BYVAL pwszText AS WSTRING PTR, BYVAL lParam AS LPARAM = 0, BYVAL iImage AS LONG = 0, BYVAL iSelectedImage AS LONG = 0) AS HTREEITEM
AFX\AFXCTL.INC|TreeView_AppendItem|TreeView_AppendItem(BYVAL hwndTV AS HWND, BYVAL hParent AS HTREEITEM, BYVAL pwszText AS WSTRING PTR, BYVAL lParam AS LPARAM = 0, BYVAL iImage AS LONG = 0, BYVAL iSelectedImage AS LONG = 0) AS HTREEITEM
AFX\AFXCTL.INC|TreeView_InsertFirstItem|TreeView_InsertFirstItem(BYVAL hwndTV AS HWND, BYVAL hParent AS HTREEITEM, BYVAL pwszText AS WSTRING PTR, BYVAL lParam AS LPARAM = 0, BYVAL iImage AS LONG = 0, BYVAL iSelectedImage AS LONG = 0) AS HTREEITEM
AFX\AFXCTL.INC|TreeView_AddRootItem|TreeView_AddRootItem(BYVAL hwndTV AS HWND, BYVAL pwszText AS WSTRING PTR, BYVAL lParam AS LPARAM = 0, BYVAL iImage AS LONG = 0, BYVAL iSelectedImage AS LONG = 0) AS HTREEITEM
AFX\AFXCTL.INC|TreeView_InsertSortedItem|TreeView_InsertSortedItem(BYVAL hwndTV AS HWND, BYVAL hParent AS HTREEITEM, BYVAL pwszText AS WSTRING PTR, BYVAL lParam AS LPARAM = 0, BYVAL iImage AS LONG = 0, BYVAL iSelectedImage AS LONG = 0) AS HTREEITEM
AFX\AFXCTL.INC|TreeView_GetBold|TreeView_GetBold(BYVAL hwndTV AS HWND, BYVAL hItem AS HTREEITEM) AS BOOLEAN
AFX\AFXCTL.INC|TreeView_IsItemChecked|TreeView_IsItemChecked(BYVAL hwndTV AS HWND, BYVAL hItem AS HTREEITEM) AS BOOLEAN
AFX\AFXCTL.INC|TreeView_GetISearchStringLen|TreeView_GetISearchStringLen(BYVAL hwndTV AS HWND) AS LONG
AFX\AFXCTL.INC|TreeView_GetlParam|TreeView_GetlParam(BYVAL hwndTV AS HWND, BYVAL hItem AS HTREEITEM) AS LPARAM
AFX\AFXCTL.INC|TreeView_SetBold|TreeView_SetBold(BYVAL hwndTV AS HWND, BYVAL hItem AS HTREEITEM, BYVAL fBold AS BOOLEAN)
AFX\AFXCTL.INC|TreeView_SetItemEx|TreeView_SetItemEx(BYVAL hwndTV AS HWND, BYVAL pitem AS TVITEMEXW PTR) AS BOOLEAN
AFX\AFXCTL.INC|TreeView_SetItemText|TreeView_SetItemText(BYVAL hwndTV AS HWND, BYVAL hItem AS HTREEITEM, BYVAL pwszText AS WSTRING PTR) AS BOOLEAN
AFX\AFXCTL.INC|TreeView_ExpandChildItems|TreeView_ExpandChildItems(BYVAL hwndTV AS HWND, BYVAL hNode AS HTREEITEM)
AFX\AFXCTL.INC|TreeView_ExpandSiblings|TreeView_ExpandSiblings(BYVAL hwndTV AS HWND, BYVAL hNode AS HTREEITEM)
AFX\AFXCTL.INC|TreeView_ExpandAllChildItems|TreeView_ExpandAllChildItems(BYVAL hwndTV AS HWND, BYVAL hNode AS HTREEITEM)
AFX\AFXCTL.INC|TreeView_ExpandAllItems|TreeView_ExpandAllItems(BYVAL hwndTV AS HWND)
AFX\AFXCTL.INC|TreeView_CollapseChildItems|TreeView_CollapseChildItems(BYVAL hwndTV AS HWND, BYVAL hNode AS HTREEITEM)
AFX\AFXCTL.INC|TreeView_CollapseSiblings|TreeView_CollapseSiblings(BYVAL hwndTV AS HWND, BYVAL hNode AS HTREEITEM)
AFX\AFXCTL.INC|TreeView_CollapseAllChildItems|TreeView_CollapseAllChildItems(BYVAL hwndTV AS HWND, BYVAL hNode AS HTREEITEM)
AFX\AFXCTL.INC|TreeView_CollapseAllItems|TreeView_CollapseAllItems(BYVAL hwndTV AS HWND)
AFX\AFXCTL.INC|TreeView_GetItemText|TreeView_GetItemText(BYVAL hwndTV AS HWND, BYVAL hItem AS HTREEITEM, BYVAL pwszText AS WSTRING PTR, BYVAL cchtextmax AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|TreeView_GetParentText|TreeView_GetParentText(BYVAL hwndTV AS HWND, BYVAL hItem AS HTREEITEM, BYVAL pwszText AS WSTRING PTR, BYVAL cchTextMax AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|TreeView_ItemExists|TreeView_ItemExists(BYVAL hTreeView AS HWND, BYVAL hNode AS HTREEITEM, BYVAL pwszText AS WSTRING PTR) AS BOOLEAN
AFX\AFXCTL.INC|TreeView_ItemExistsIgnoreCase|TreeView_ItemExistsIgnoreCase(BYVAL hTreeView AS HWND, BYVAL hNode AS HTREEITEM, BYVAL pwszText AS WSTRING PTR) AS BOOLEAN
AFX\AFXCTL.INC|TaskDialog_ClickButton|TaskDialog_ClickButton(BYVAL hTaskDlg AS HWND, BYVAL nButton AS DWORD)
AFX\AFXCTL.INC|TaskDialog_ClickRadioButton|TaskDialog_ClickRadioButton(BYVAL hTaskDlg AS HWND, BYVAL nRadioButton AS DWORD)
AFX\AFXCTL.INC|TaskDialog_ClickVerification|TaskDialog_ClickVerification(BYVAL hTaskDlg AS HWND, BYVAL fChecked AS LONG, BYVAL fFocused AS LONG)
AFX\AFXCTL.INC|TaskDialog_EnableButton|TaskDialog_EnableButton(BYVAL hTaskDlg AS HWND, BYVAL nButton AS LONG, BYVAL fEnable AS LONG)
AFX\AFXCTL.INC|TaskDialog_EnableRadioButton|TaskDialog_EnableRadioButton(BYVAL hTaskDlg AS HWND, BYVAL nRadioButton AS LONG, BYVAL fEnable AS LONG)
AFX\AFXCTL.INC|TaskDialog_NavigatePage|TaskDialog_NavigatePage(BYVAL hTaskDlg AS HWND, BYVAL pTaskConfig AS TASKDIALOGCONFIG PTR)
AFX\AFXCTL.INC|TaskDialog_SetButtonElevationRequiredState|TaskDialog_SetButtonElevationRequiredState(BYVAL hTaskDlg AS HWND, BYVAL nButton AS LONG, BYVAL fElevation AS LONG)
AFX\AFXCTL.INC|TaskDialog_SetElementText|TaskDialog_SetElementText(BYVAL hTaskDlg AS HWND, BYVAL eElement AS LONG, BYVAL pszNewText AS WSTRING PTR)
AFX\AFXCTL.INC|TaskDialog_SetMarqueeProgressBar|TaskDialog_SetMarqueeProgressBar(BYVAL hTaskDlg AS HWND, BYVAL fMarquee AS BOOLEAN)
AFX\AFXCTL.INC|TaskDialog_SetProgressBarMarquee|TaskDialog_SetProgressBarMarquee(BYVAL hTaskDlg AS HWND, BYVAL fMarquee AS LONG, BYVAL nSpeed AS LONG)
AFX\AFXCTL.INC|TaskDialog_SetProgressBarPos|TaskDialog_SetProgressBarPos(BYVAL hTaskDlg AS HWND, BYVAL nNewPos AS LONG) AS LONG
AFX\AFXCTL.INC|TaskDialog_SetProgressBarRange|TaskDialog_SetProgressBarRange(BYVAL hTaskDlg AS HWND, BYVAL nMinRange AS SHORT, BYVAL nMaxRange AS SHORT) AS DWORD
AFX\AFXCTL.INC|TaskDialog_SetProgressBarState|TaskDialog_SetProgressBarState(BYVAL hTaskDlg AS HWND, BYVAL nNewState AS LONG) AS LONG
AFX\AFXCTL.INC|TaskDialog_UpdateElementText|TaskDialog_UpdateElementText(BYVAL hTaskDlg AS HWND, BYVAL eElement AS LONG, BYVAL pszNewText AS WSTRING PTR)
AFX\AFXCTL.INC|TaskDialog_UpdateIcon|TaskDialog_UpdateIcon(BYVAL hTaskDlg AS HWND, BYVAL nIconElement AS LONG, BYVAL idResource AS DWORD)
AFX\AFXCTL.INC|IPAddress_ClearAddress|IPAddress_ClearAddress(BYVAL hIPM AS HWND)
AFX\AFXCTL.INC|IPAddress_GetAddress|IPAddress_GetAddress(BYVAL hIPM AS HWND, BYVAL pdwAddr AS DWORD PTR) AS LONG
AFX\AFXCTL.INC|IPAddress_IsBlank|IPAddress_IsBlank(BYVAL hIPM AS HWND)
AFX\AFXCTL.INC|IPAddress_SetAddress|IPAddress_SetAddress(BYVAL hIPM AS HWND, BYVAL dwAddr AS DWORD)
AFX\AFXCTL.INC|IPAddress_SetFocus|IPAddress_SetFocus(BYVAL hIPM AS HWND, BYVAL nField AS LONG)
AFX\AFXCTL.INC|IPAddress_SetRange|IPAddress_SetRange(BYVAL hIPM AS HWND, BYVAL nField AS LONG, BYVAL loRange AS BYTE, BYVAL hiRange AS BYTE) AS BOOLEAN
AFX\AFXCTL.INC|ProgressBar_DeltaPos|ProgressBar_DeltaPos(BYVAL hProgress AS HWND, BYVAL nIncrement AS LONG) AS LONG
AFX\AFXCTL.INC|ProgressBar_GetHighLimit|ProgressBar_GetHighLimit(BYVAL hProgress AS HWND) AS LONG
AFX\AFXCTL.INC|ProgressBar_GetLowLimit|ProgressBar_GetLowLimit(BYVAL hProgress AS HWND) AS LONG
AFX\AFXCTL.INC|ProgressBar_GetMaxRange|ProgressBar_GetMaxRange(BYVAL hProgress AS HWND) AS LONG
AFX\AFXCTL.INC|ProgressBar_GetMinRange|ProgressBar_GetMinRange(BYVAL hProgress AS HWND) AS LONG
AFX\AFXCTL.INC|ProgressBar_GetPos|ProgressBar_GetPos(BYVAL hProgress AS HWND) AS DWORD
AFX\AFXCTL.INC|ProgressBar_GetRange|ProgressBar_GetRange(BYVAL hProgress AS HWND, BYVAL fWhichLimit AS DWORD, BYVAL ppBRange AS PBRANGE PTR) AS LONG
AFX\AFXCTL.INC|ProgressBar_IncPos|ProgressBar_IncPos(BYVAL hProgress AS HWND, BYVAL nIncVal AS LONG) AS LONG
AFX\AFXCTL.INC|ProgressBar_SetBarColor|ProgressBar_SetBarColor(BYVAL hProgress AS HWND, BYVAL clrBar AS COLORREF) AS COLORREF
AFX\AFXCTL.INC|ProgressBar_SetBkColor|ProgressBar_SetBkColor(BYVAL hProgress AS HWND, BYVAL clrBk AS COLORREF) AS COLORREF
AFX\AFXCTL.INC|ProgressBar_SetMarquee|ProgressBar_SetMarquee(BYVAL hProgress AS HWND, BYVAL fOn AS LONG, BYVAL dwAnimationSpeed AS DWORD) AS LONG
AFX\AFXCTL.INC|ProgressBar_SetMarqueeOff|ProgressBar_SetMarqueeOff(BYVAL hProgress AS HWND) AS LONG
AFX\AFXCTL.INC|ProgressBar_SetMarqueeOn|ProgressBar_SetMarqueeOn(BYVAL hProgress AS HWND, BYVAL dwAnimationSpeed AS DWORD) AS LONG
AFX\AFXCTL.INC|ProgressBar_SetPos|ProgressBar_SetPos(BYVAL hProgress AS HWND, BYVAL nNewPos AS LONG) AS LONG
AFX\AFXCTL.INC|ProgressBar_SetRange|ProgressBar_SetRange(BYVAL hProgress AS HWND, BYVAL nMinRange AS WORD, BYVAL nMaxRange AS WORD) AS DWORD
AFX\AFXCTL.INC|ProgressBar_SetRange32|ProgressBar_SetRange32(BYVAL hProgress AS HWND, BYVAL nMinRange AS LONG, BYVAL nMaxRange AS LONG) AS DWORD
AFX\AFXCTL.INC|ProgressBar_SetStep|ProgressBar_SetStep(BYVAL hProgress AS HWND, BYVAL nStepInc AS LONG) AS LONG
AFX\AFXCTL.INC|ProgressBar_StepIt|ProgressBar_StepIt(BYVAL hProgress AS HWND) AS LONG
AFX\AFXCTL.INC|ProgressBar_GetBarColor|ProgressBar_GetBarColor(BYVAL hProgress AS HWND) AS COLORREF
AFX\AFXCTL.INC|ProgressBar_GetBkColor|ProgressBar_GetBkColor(BYVAL hProgress AS HWND) AS COLORREF
AFX\AFXCTL.INC|ProgressBar_GetState|ProgressBar_GetState(BYVAL hProgress AS HWND) AS LONG
AFX\AFXCTL.INC|ProgressBar_SetState|ProgressBar_SetState(BYVAL hProgress AS HWND, BYVAL iState AS LONG) AS LONG
AFX\AFXCTL.INC|StatusBar_GetBorders|StatusBar_GetBorders(BYVAL hStatusBar AS HWND, BYVAL rgBorders AS LONG PTR) AS LONG
AFX\AFXCTL.INC|StatusBar_GetHeight|StatusBar_GetHeight(BYVAL hStatusBar AS HWND) AS LONG
AFX\AFXCTL.INC|StatusBar_GetIcon|StatusBar_GetIcon(BYVAL hStatusBar AS HWND, BYVAL nPart AS DWORD) AS HICON
AFX\AFXCTL.INC|StatusBar_GetParts|StatusBar_GetParts(BYVAL hStatusBar AS HWND, BYVAL nParts AS DWORD, BYVAL rgRightCoords AS LONG PTR) AS LONG
AFX\AFXCTL.INC|StatusBar_GetPartsCount|StatusBar_GetPartsCount(BYVAL hStatusBar AS HWND) AS DWORD
AFX\AFXCTL.INC|StatusBar_GetRect|StatusBar_GetRect(BYVAL hStatusBar AS HWND, BYVAL nPart AS DWORD, BYVAL lprc AS RECT PTR) AS LONG
AFX\AFXCTL.INC|StatusBar_GetTextDrawingMode|StatusBar_GetTextDrawingMode(BYVAL hStatusBar AS HWND, BYVAL nPart AS DWORD) AS LONG
AFX\AFXCTL.INC|StatusBar_GetTextLength|StatusBar_GetTextLength(BYVAL hStatusBar AS HWND, BYVAL nPart AS DWORD) AS LONG
AFX\AFXCTL.INC|StatusBar_GetTipText|StatusBar_GetTipText(BYVAL hStatusBar AS HWND, BYVAL nPart AS WORD, BYVAL pwszText AS WSTRING PTR, BYVAL wMaxLen AS WORD)
AFX\AFXCTL.INC|StatusBar_GetUnicodeFormat|StatusBar_GetUnicodeFormat(BYVAL hStatusBar AS HWND) AS DWORD
AFX\AFXCTL.INC|StatusBar_IsSimple|StatusBar_IsSimple(BYVAL hStatusBar AS HWND) AS BOOLEAN
AFX\AFXCTL.INC|StatusBar_SetBkColor|StatusBar_SetBkColor(BYVAL hStatusBar AS HWND, BYVAL clrBk AS COLORREF) AS COLORREF
AFX\AFXCTL.INC|StatusBar_SetFont|StatusBar_SetFont(BYVAL hStatusBar AS HWND, BYVAL hFont AS DWORD, BYVAL fRedraw AS LONG = FALSE)
AFX\AFXCTL.INC|StatusBar_SetIcon|StatusBar_SetIcon(BYVAL hStatusBar AS HWND, BYVAL nPart AS LONG, BYVAL hIcon AS HICON) AS BOOLEAN
AFX\AFXCTL.INC|StatusBar_SetMinHeight|StatusBar_SetMinHeight(BYVAL hStatusBar AS HWND, BYVAL minHeight AS DWORD)
AFX\AFXCTL.INC|StatusBar_SetParts|StatusBar_SetParts(BYVAL hStatusBar AS HWND, BYVAL dwParts AS DWORD, BYVAL rgWidths AS LONG PTR) AS BOOLEAN
AFX\AFXCTL.INC|StatusBar_SetText|StatusBar_SetText(BYVAL hStatusBar AS HWND, BYVAL nPart AS LONG, BYVAL pwszText AS WSTRING PTR, BYVAL uType AS DWORD = 0) AS BOOLEAN
AFX\AFXCTL.INC|StatusBar_SetTipText|StatusBar_SetTipText(BYVAL hStatusBar AS HWND, BYVAL nPart AS LONG, BYVAL pwszTipText AS WSTRING PTR)
AFX\AFXCTL.INC|StatusBar_SetUnicodeFormat|StatusBar_SetUnicodeFormat(BYVAL hStatusBar AS HWND, BYVAL fUnicode AS DWORD) AS DWORD
AFX\AFXCTL.INC|StatusBar_Simple|StatusBar_Simple(BYVAL hStatusBar AS HWND, BYVAL fSimple AS BOOLEAN)
AFX\AFXCTL.INC|StatusBar_GetText|StatusBar_GetText(BYVAL hStatusBar AS HWND, BYVAL nPart AS DWORD, BYVAL pwszText AS WSTRING PTR) AS DWORD
AFX\AFXCTL.INC|AfxGetStatusBarRect|AfxGetStatusBarRect(BYVAL hStatusBar AS HWND, BYVAL nPart AS LONG) AS RECT
AFX\AFXCTL.INC|TabCtrl_InsertTab|TabCtrl_InsertTab(BYVAL hwndTab AS HWND, BYVAL nTabIndex AS DWORD, BYVAL iImage AS LONG, BYVAL pwszText AS WSTRING PTR, BYVAL lParam AS LPARAM = 0) AS LONG
AFX\AFXCTL.INC|TabCtrl_AddTab|TabCtrl_AddTab(BYVAL hwndTab AS HWND, BYVAL iImage AS LONG, BYVAL pwszText AS WSTRING PTR, BYVAL lParam AS LPARAM = 0) AS LONG
AFX\AFXCTL.INC|TabCtrl_GetText|TabCtrl_GetText(BYVAL hwndTab AS HWND, BYVAL nTabIndex AS DWORD, BYVAL pwszText AS WSTRING PTR, BYVAL cchTextMax AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|TabCtrl_SetText|TabCtrl_SetText(BYVAL hwndTab AS HWND, BYVAL nTabIndex AS DWORD, BYVAL pwszText AS WSTRING PTR) AS BOOLEAN
AFX\AFXCTL.INC|TabCtrl_GetImageIndex|TabCtrl_GetImageIndex(BYVAL hwndTab AS HWND, BYVAL iItem AS DWORD) AS LONG
AFX\AFXCTL.INC|TabCtrl_SetImageIndex|TabCtrl_SetImageIndex(BYVAL hwndTab AS HWND, BYVAL iItem AS DWORD, BYVAL iImage AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|Trackbar_ClearSel|Trackbar_ClearSel(BYVAL hTrackbar AS HWND, BYVAL fRedraw AS BOOLEAN = FALSE)
AFX\AFXCTL.INC|Trackbar_ClearTics|Trackbar_ClearTics(BYVAL hTrackbar AS HWND, BYVAL fRedraw AS BOOLEAN = FALSE)
AFX\AFXCTL.INC|Trackbar_GetBuddy|Trackbar_GetBuddy(BYVAL hTrackbar AS HWND, BYVAL fLocation AS LONG) AS HWND
AFX\AFXCTL.INC|Trackbar_GetChannelRect|Trackbar_GetChannelRect(BYVAL hTrackbar AS HWND, BYVAL lprc AS RECT PTR)
AFX\AFXCTL.INC|Trackbar_GetLineSize|Trackbar_GetLineSize(BYVAL hTrackbar AS HWND) AS LONG
AFX\AFXCTL.INC|Trackbar_GetNumTics|Trackbar_GetNumTics(BYVAL hTrackbar AS HWND) AS LONG
AFX\AFXCTL.INC|Trackbar_GetPageSize|Trackbar_GetPageSize(BYVAL hTrackbar AS HWND) AS LONG
AFX\AFXCTL.INC|Trackbar_GetPos|Trackbar_GetPos(BYVAL hTrackbar AS HWND) AS LONG
AFX\AFXCTL.INC|Trackbar_GetPTics|Trackbar_GetPTics(BYVAL hTrackbar AS HWND) AS DWORD
AFX\AFXCTL.INC|Trackbar_GetRangeMax|Trackbar_GetRangeMax(BYVAL hTrackbar AS HWND) AS LONG
AFX\AFXCTL.INC|Trackbar_GetRangeMin|Trackbar_GetRangeMin(BYVAL hTrackbar AS HWND) AS LONG
AFX\AFXCTL.INC|Trackbar_GetSelEnd|Trackbar_GetSelEnd(BYVAL hTrackbar AS HWND) AS LONG
AFX\AFXCTL.INC|Trackbar_GetSelStart|Trackbar_GetSelStart(BYVAL hTrackbar AS HWND) AS LONG
AFX\AFXCTL.INC|Trackbar_GetThumbLength|Trackbar_GetThumbLength(BYVAL hTrackbar AS HWND) AS LONG
AFX\AFXCTL.INC|Trackbar_GetThumbRect|Trackbar_GetThumbRect(BYVAL hTrackbar AS HWND, BYVAL lprc AS RECT PTR)
AFX\AFXCTL.INC|Trackbar_GetTic|Trackbar_GetTic(BYVAL hTrackbar AS HWND, BYVAL iTic AS DWORD) AS LONG
AFX\AFXCTL.INC|Trackbar_GetTicPos|Trackbar_GetTicPos(BYVAL hTrackbar AS HWND, BYVAL iTic AS DWORD) AS LONG
AFX\AFXCTL.INC|Trackbar_GetTooltips|Trackbar_GetTooltips(BYVAL hTrackbar AS HWND) AS HWND
AFX\AFXCTL.INC|Trackbar_GetUnicodeFormat|Trackbar_GetUnicodeFormat(BYVAL hTrackbar AS HWND) AS DWORD
AFX\AFXCTL.INC|Trackbar_SetBuddy|Trackbar_SetBuddy(BYVAL hTrackbar AS HWND, BYVAL fLocation AS LONG, BYVAL hwndBuddy AS HWND) AS HWND
AFX\AFXCTL.INC|Trackbar_SetLineSize|Trackbar_SetLineSize(BYVAL hTrackbar AS HWND, BYVAL lLineSize AS LONG) AS LONG
AFX\AFXCTL.INC|Trackbar_SetPageSize|Trackbar_SetPageSize(BYVAL hTrackbar AS HWND, BYVAL lPageSize AS LONG) AS LONG
AFX\AFXCTL.INC|Trackbar_SetPos|Trackbar_SetPos(BYVAL hTrackbar AS HWND, BYVAL fPosition AS LONG, BYVAL lPosition AS LONG)
AFX\AFXCTL.INC|Trackbar_SetRange|Trackbar_SetRange(BYVAL hTrackbar AS HWND, BYVAL lMinimum AS LONG, BYVAL lMaximum AS LONG, BYVAL fRedraw AS BOOLEAN = FALSE)
AFX\AFXCTL.INC|Trackbar_SetRangeMax|Trackbar_SetRangeMax(BYVAL hTrackbar AS HWND, BYVAL lMaximum AS LONG, BYVAL fRedraw AS BOOLEAN = FALSE)
AFX\AFXCTL.INC|Trackbar_SetRangeMin|Trackbar_SetRangeMin(BYVAL hTrackbar AS HWND, BYVAL lMinimum AS LONG, BYVAL fRedraw AS BOOLEAN = FALSE)
AFX\AFXCTL.INC|Trackbar_SetSel|Trackbar_SetSel(BYVAL hTrackbar AS HWND, BYVAL lMinimum AS LONG, BYVAL lMaximum AS LONG, BYVAL fRedraw AS BOOLEAN = FALSE)
AFX\AFXCTL.INC|Trackbar_SetSelEnd|Trackbar_SetSelEnd(BYVAL hTrackbar AS HWND, BYVAL lEnd AS LONG, BYVAL fRedraw AS BOOLEAN = FALSE)
AFX\AFXCTL.INC|Trackbar_SetSelStart|Trackbar_SetSelStart(BYVAL hTrackbar AS HWND, BYVAL lStart AS LONG, BYVAL fRedraw AS BOOLEAN = FALSE)
AFX\AFXCTL.INC|Trackbar_SetThumbLength|Trackbar_SetThumbLength(BYVAL hTrackbar AS HWND, BYVAL iLength AS LONG)
AFX\AFXCTL.INC|Trackbar_SetTic|Trackbar_SetTic(BYVAL hTrackbar AS HWND, BYVAL lPosition AS LONG) AS BOOLEAN
AFX\AFXCTL.INC|Trackbar_SetTicFreq|Trackbar_SetTicFreq(BYVAL hTrackbar AS HWND, BYVAL wFreq AS WORD)
AFX\AFXCTL.INC|Trackbar_SetTipSide|Trackbar_SetTipSide(BYVAL hTrackbar AS HWND, BYVAL fLocation AS LONG) AS LONG
AFX\AFXCTL.INC|Trackbar_SetToolTips|Trackbar_SetToolTips(BYVAL hTrackbar AS HWND, BYVAL hwndTT AS HWND)
AFX\AFXCTL.INC|Trackbar_SetUnicodeFormat|Trackbar_SetUnicodeFormat(BYVAL hTrackbar AS HWND, BYVAL fUnicode AS DWORD) AS DWORD
AFX\AFXCTL.INC|UpDown_GetAccel|UpDown_GetAccel(BYVAL hUDM AS HWND, BYVAL cAccels AS DWORD, BYVAL paAccels AS UDACCEL PTR) AS LONG
AFX\AFXCTL.INC|UpDown_GetBase|UpDown_GetBase(BYVAL hUDM AS HWND) AS LONG
AFX\AFXCTL.INC|UpDown_GetBuddy|UpDown_GetBuddy(BYVAL hUDM AS HWND) AS HWND
AFX\AFXCTL.INC|UpDown_GetPos|UpDown_GetPos(BYVAL hUDM AS HWND) AS LONG
AFX\AFXCTL.INC|UpDown_GetPos32|UpDown_GetPos32(BYVAL hUDM AS HWND, BYVAL pfError AS LONG PTR = NULL) AS LONG
AFX\AFXCTL.INC|UpDown_GetRange|UpDown_GetRange(BYVAL hUDM AS HWND) AS LONG
AFX\AFXCTL.INC|UpDown_GetRange32|UpDown_GetRange32(BYVAL hUDM AS HWND, BYVAL pLow AS WORD PTR, BYVAL pHigh AS WORD PTR)
AFX\AFXCTL.INC|UpDown_GetUnicodeFormat|UpDown_GetUnicodeFormat(BYVAL hUDM AS HWND) AS DWORD
AFX\AFXCTL.INC|UpDown_SetAccel|UpDown_SetAccel(BYVAL hUDM AS HWND, BYVAL cAccels AS DWORD, BYREF paAccels AS UDACCEL PTR) AS BOOLEAN
AFX\AFXCTL.INC|UpDown_SetBase|UpDown_SetBase(BYVAL hUDM AS HWND, BYVAL nBase AS LONG) AS LONG
AFX\AFXCTL.INC|UpDown_SetBuddy|UpDown_SetBuddy(BYVAL hUDM AS HWND, BYVAL hwndBuddy AS HWND) AS HWND
AFX\AFXCTL.INC|UpDown_SetPos|UpDown_SetPos(BYVAL hUDM AS HWND, BYVAL nPos AS SHORT) AS LONG
AFX\AFXCTL.INC|UpDown_SetPos32|UpDown_SetPos32(BYVAL hUDM AS HWND, BYVAL nPos AS LONG) AS LONG
AFX\AFXCTL.INC|UpDown_SetRange|UpDown_SetRange(BYVAL hUDM AS HWND, BYVAL nUpper AS SHORT, BYVAL nLower AS SHORT)
AFX\AFXCTL.INC|UpDown_SetRange32|UpDown_SetRange32(BYVAL hUDM AS HWND, BYVAL iLow AS LONG, BYVAL iHigh AS LONG)
AFX\AFXCTL.INC|UpDown_SetUnicodeFormat|UpDown_SetUnicodeFormat(BYVAL hUDM AS HWND, BYVAL fUnicode AS DWORD) AS DWORD
AFX\AFXCTL.INC|Tooltip_Activate|Tooltip_Activate(BYVAL hTooltip AS HWND, BYVAL fActivate AS BOOLEAN)
AFX\AFXCTL.INC|Tooltip_AddTool|Tooltip_AddTool(BYVAL hTooltip AS HWND, BYVAL lpti AS TOOLINFOW PTR) AS BOOLEAN
AFX\AFXCTL.INC|Tooltip_AdjustRect|Tooltip_AdjustRect(BYVAL hTooltip AS HWND, BYVAL fLarger AS BOOLEAN, BYVAL lprc AS RECT PTR) AS BOOLEAN
AFX\AFXCTL.INC|Tooltip_DelTool|Tooltip_DelTool(BYVAL hTooltip AS HWND, BYVAL lpti AS TOOLINFOW PTR)
AFX\AFXCTL.INC|Tooltip_EnumTools|Tooltip_EnumTools(BYVAL hTooltip AS HWND, BYVAL iTool AS DWORD, BYVAL lpti AS TOOLINFOW PTR) AS BOOLEAN
AFX\AFXCTL.INC|Tooltip_GetBubbleSize|Tooltip_GetBubbleSize(BYVAL hTooltip AS HWND, BYVAL lpTtm AS TOOLINFOW PTR) AS DWORD
AFX\AFXCTL.INC|Tooltip_GetCurrentTool|Tooltip_GetCurrentTool(BYVAL hTooltip AS HWND, BYVAL lpti AS TOOLINFOW PTR) AS BOOLEAN
AFX\AFXCTL.INC|Tooltip_GetDelayTime|Tooltip_GetDelayTime(BYVAL hTooltip AS HWND, BYVAL dwDuration AS DWORD) AS LONG
AFX\AFXCTL.INC|Tooltip_GetFont|Tooltip_GetFont(BYVAL hTooltip AS HWND) AS HFONT
AFX\AFXCTL.INC|Tooltip_GetMargin|Tooltip_GetMargin(BYVAL hTooltip AS HWND, BYVAL lprc AS RECT PTR)
AFX\AFXCTL.INC|Tooltip_GetMaxTipWidth|Tooltip_GetMaxTipWidth(BYVAL hTooltip AS HWND) AS LONG
AFX\AFXCTL.INC|Tooltip_GetText|Tooltip_GetText(BYVAL hTooltip AS HWND, BYVAL numChars AS DWORD, BYVAL lpti AS TOOLINFOW PTR)
AFX\AFXCTL.INC|Tooltip_GetTipBkColor|Tooltip_GetTipBkColor(BYVAL hTooltip AS HWND) AS COLORREF
AFX\AFXCTL.INC|Tooltip_GetTipTextColor|Tooltip_GetTipTextColor(BYVAL hTooltip AS HWND) AS COLORREF
AFX\AFXCTL.INC|Tooltip_GetTitle|Tooltip_GetTitle(BYVAL hTooltip AS HWND, BYVAL pTTGetTitle AS TTGETTITLE PTR)
AFX\AFXCTL.INC|Tooltip_GetToolCount|Tooltip_GetToolCount(BYVAL hTooltip AS HWND) AS LONG
AFX\AFXCTL.INC|Tooltip_GetToolInfo|Tooltip_GetToolInfo(BYVAL hTooltip AS HWND, BYVAL lpti AS TOOLINFOW PTR) AS BOOLEAN
AFX\AFXCTL.INC|Tooltip_HitTest|Tooltip_HitTest(BYVAL hTooltip AS HWND, BYVAL lphti AS TTHITTESTINFO PTR) AS BOOLEAN
AFX\AFXCTL.INC|Tooltip_NewToolRect|Tooltip_NewToolRect(BYVAL hTooltip AS HWND, BYVAL lpti AS TOOLINFOW PTR)
AFX\AFXCTL.INC|Tooltip_Pop|Tooltip_Pop(BYVAL hTooltip AS HWND)
AFX\AFXCTL.INC|Tooltip_Popup|Tooltip_Popup(BYVAL hTooltip AS HWND)
AFX\AFXCTL.INC|Tooltip_RelayEvent|Tooltip_RelayEvent(BYVAL hTooltip AS HWND, BYVAL lpmsg AS tagMSG PTR) AS LONG
AFX\AFXCTL.INC|Tooltip_SetDelayTime|Tooltip_SetDelayTime(BYVAL hTooltip AS HWND, BYVAL dwDuration AS DWORD, BYVAL iTime AS SHORT)
AFX\AFXCTL.INC|Tooltip_SetFont|Tooltip_SetFont(BYVAL hTooltip AS HWND, BYVAL hFont AS HFONT = NULL, BYVAL fRedraw AS BOOLEAN = FALSE)
AFX\AFXCTL.INC|Tooltip_SetMargin|Tooltip_SetMargin(BYVAL hTooltip AS HWND, BYVAL lprc AS RECT PTR)
AFX\AFXCTL.INC|Tooltip_SetMaxTipWidth|Tooltip_SetMaxTipWidth(BYVAL hTooltip AS HWND, BYVAL iWidth AS LONG) AS LONG
AFX\AFXCTL.INC|Tooltip_SetTipBkColor|Tooltip_SetTipBkColor(BYVAL hTooltip AS HWND, BYVAL clr AS COLORREF)
AFX\AFXCTL.INC|Tooltip_SetTipTextColor|Tooltip_SetTipTextColor(BYVAL hTooltip AS HWND, BYVAL clr AS COLORREF)
AFX\AFXCTL.INC|Tooltip_SetTitle|Tooltip_SetTitle(BYVAL hTooltip AS HWND, BYVAL nIcon AS LONG, BYVAL pwszTitle AS WSTRING PTR) AS BOOLEAN
AFX\AFXCTL.INC|Tooltip_SetToolInfo|Tooltip_SetToolInfo(BYVAL hTooltip AS HWND, BYVAL lpti AS TOOLINFOW PTR)
AFX\AFXCTL.INC|Tooltip_SetWindowTheme|Tooltip_SetWindowTheme(BYVAL hTooltip AS HWND, BYVAL pwszTheme AS WSTRING PTR)
AFX\AFXCTL.INC|Tooltip_TrackActivate|Tooltip_TrackActivate(BYVAL hTooltip AS HWND, BYVAL bActivate AS BOOLEAN, BYVAL lpti AS TOOLINFOW PTR)
AFX\AFXCTL.INC|Tooltip_TrackPosition|Tooltip_TrackPosition(BYVAL hTooltip AS HWND, BYVAL xPos AS LONG, BYVAL yPos AS LONG)
AFX\AFXCTL.INC|Tooltip_Update|Tooltip_Update(BYVAL hTooltip AS HWND)
AFX\AFXCTL.INC|Tooltip_UpdateTipText|Tooltip_UpdateTipText(BYVAL hTooltip AS HWND, BYVAL lpti AS TOOLINFOW PTR)
AFX\AFXCTL.INC|Tooltip_WindowFromPoint|Tooltip_WindowFromPoint(BYVAL hTooltip AS HWND, BYVAL lppt AS POINT PTR) AS HWND
AFX\AFXCTL.INC|AfxAddTooltip|AfxAddTooltip(BYVAL hwnd AS HWND, BYREF wszText AS CONST WSTRING = "", BYVAL bBalloon AS BOOLEAN = FALSE, BYVAL bCentered AS BOOLEAN = FALSE) AS HWND
AFX\AFXCTL.INC|AfxSetTooltipText|AfxSetTooltipText(BYVAL hTooltip AS HWND, BYVAL hwnd AS HWND, BYREF wszText AS CONST WSTRING)
AFX\AFXCTL.INC|AfxDeleteTooltip|AfxDeleteTooltip(BYVAL hTooltip AS HWND, BYVAL hwnd AS HWND)
AFX\AFXCTL.INC|PropSheet_SetNextText|PropSheet_SetNextText(BYVAL hDlg AS HWND, BYVAL pwszText AS WSTRING PTR)
AFX\AFXCTL.INC|PropSheet_ShowWizButtons|PropSheet_ShowWizButtons(BYVAL hDlg AS HWND, BYVAL dwFlag AS DWORD, BYVAL dwButton AS DWORD)
AFX\AFXCTL.INC|PropSheet_EnableWizButtons|PropSheet_EnableWizButtons(BYVAL hDlg AS HWND, BYVAL dwState AS DWORD, BYVAL dwMask AS DWORD)
AFX\AFXCTL.INC|PropSheet_SetButtonText|PropSheet_SetButtonText(BYVAL hDlg AS HWND, BYVAL dwButton AS DWORD, BYVAL pwszText AS WSTRING PTR)
AFX\AFXEXDISP.BI|AddUrlToFavorites|AddUrlToFavorites(BYVAL hwnd AS HWND, BYVAL pszUrlW AS WSTRING PTR, BYVAL pszTitleW AS WSTRING PTR, BYVAL fDisplayUI AS LONG) AS HRESULT
AFX\AFXEXDISP.BI|DoAddToFavDlg|DoAddToFavDlg(BYVAL hwnd AS HWND, BYVAL pszInitDir AS ZSTRING PTR, BYVAL cchInitDir AS UINT, BYVAL pszFile AS ZSTRING PTR, BYVAL cchFile AS UINT, BYVAL pidlBrowse AS LPITEMIDLIST) AS LONG
AFX\AFXEXDISP.BI|DoOrganizeFavDlg|DoOrganizeFavDlg(BYVAL hwnd AS HWND, BYVAL pszInitDir AS ZSTRING PTR) AS LONG
AFX\AFXEXDISP.BI|LaunchConnectionDialog|LaunchConnectionDialog(BYVAL hParent AS HWND) AS LONG
AFX\AFXEXDISP.BI|LaunchInternetControlPanel|LaunchInternetControlPanel(BYVAL hParent AS HWND) AS LONG
AFX\AFXEXDISP.BI|LaunchPrivacyDialog|LaunchPrivacyDialog(BYVAL hParent AS HWND) AS LONG
AFX\AFXEXDISP.BI|LaunchSecurityDialog|LaunchSecurityDialog(BYVAL hParent AS HWND) AS LONG
AFX\AFXGDIPLUS.INC|GDIP_ARGB|GDIP_ARGB(BYVAL a AS UBYTE, BYVAL r AS UBYTE, BYVAL g AS UBYTE, BYVAL b AS UBYTE) AS COLORREF
AFX\AFXGDIPLUS.INC|GDIP_COLOR|GDIP_COLOR(BYVAL a AS UBYTE, BYVAL r AS UBYTE, BYVAL g AS UBYTE, BYVAL b AS UBYTE) AS COLORREF
AFX\AFXGDIPLUS.INC|GDIP_XRGB|GDIP_XRGB(BYVAL r AS UBYTE, BYVAL g AS UBYTE, BYVAL b AS UBYTE) AS COLORREF
AFX\AFXGDIPLUS.INC|GDIP_BGRA|GDIP_BGRA(BYVAL b AS UBYTE, BYVAL g AS UBYTE, BYVAL r AS UBYTE, BYVAL a AS UBYTE) AS COLORREF
AFX\AFXGDIPLUS.INC|GDIP_RGBA|GDIP_RGBA(BYVAL r AS UBYTE, BYVAL g AS UBYTE, BYVAL b AS UBYTE, BYVAL a AS UBYTE) AS COLORREF
AFX\AFXGDIPLUS.INC|GDIP_GetAlpha|GDIP_GetAlpha(BYVAL argbcolor AS COLORREF) AS BYTE
AFX\AFXGDIPLUS.INC|GDIP_GetRed|GDIP_GetRed(BYVAL argbcolor AS COLORREF) AS BYTE
AFX\AFXGDIPLUS.INC|GDIP_GetGreen|GDIP_GetGreen(BYVAL argbcolor AS COLORREF) AS BYTE
AFX\AFXGDIPLUS.INC|GDIP_GetBlue|GDIP_GetBlue(BYVAL argbcolor AS COLORREF) AS BYTE
AFX\AFXGDIPLUS.INC|GDIP_RECTF|GDIP_RECTF(BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE) AS GpRectF
AFX\AFXGDIPLUS.INC|GDIP_RECT|GDIP_RECT(BYVAL x AS LONG, BYVAL y AS LONG, BYVAL nWidth AS LONG, BYVAL nHeight AS LONG) AS GpRect
AFX\AFXGDIPLUS.INC|GDIP_POINTF|GDIP_POINTF(BYVAL x AS SINGLE, BYVAL y AS SINGLE) AS GpPointF
AFX\AFXGDIPLUS.INC|GDIP_POINT|GDIP_POINT(BYVAL x AS LONG, BYVAL y AS LONG) AS GpPoint
AFX\AFXGDIPLUS.INC|AfxGdipDllVersion|AfxGdipDllVersion() AS LONG
AFX\AFXGDIPLUS.INC|AfxGdipStatusStr|AfxGdipStatusStr(BYVAL status AS GpStatus) AS CWSTR
AFX\AFXGDIPLUS.INC|AfxGdipInit|AfxGdipInit(BYVAL version AS UINT32 = 1) AS ULONG_PTR
AFX\AFXGDIPLUS.INC|AfxGdipShutdown|AfxGdipShutdown(BYVAL token AS ULONG_PTR)
AFX\AFXGDIPLUS.INC|AfxGdipGetImageSizeFromFile|AfxGdipGetImageSizeFromFile(BYREF wszFileName AS WSTRING, BYVAL nWidth AS DWORD PTR, BYVAL nHeight AS DWORD PTR) AS LONG
AFX\AFXGDIPLUS.INC|AfxGdipImageFromFile2|AfxGdipImageFromFile2(BYREF wszFileName AS WSTRING, BYVAL dimPercent AS LONG = 0, BYVAL bGrayScale AS LONG = FALSE, BYVAL imageType AS LONG = IMAGE_ICON, BYVAL clrBackground AS ARGB = 0) AS HANDLE
AFX\AFXGDIPLUS.INC|AfxGdipImageFromBuffer|AfxGdipImageFromBuffer(BYVAL pBuffer AS ANY PTR, BYVAL bufferSize AS SIZE_T_, BYVAL dimPercent AS LONG = 0, BYVAL bGrayScale AS LONG = FALSE, BYVAL imageType AS LONG = IMAGE_ICON, BYVAL clrBackground AS ARGB = 0) AS HANDLE
AFX\AFXGDIPLUS.INC|AfxGdipIconFromBuffer|AfxGdipIconFromBuffer(BYVAL pBuffer AS ANY PTR, BYVAL bufferSize AS SIZE_T_, BYVAL dimPercent AS LONG = 0, BYVAL bGrayScale AS LONG = FALSE) AS HANDLE
AFX\AFXGDIPLUS.INC|AfxGdipBitmapFromBuffer|AfxGdipBitmapFromBuffer(BYVAL pBuffer AS ANY PTR, BYVAL bufferSize AS SIZE_T_, BYVAL dimPercent AS LONG = 0, BYVAL bGrayScale AS LONG = FALSE, BYVAL clrBackground AS ARGB = 0) AS HANDLE
AFX\AFXGDIPLUS.INC|AfxGdipImageFromFile|AfxGdipImageFromFile(BYREF wszFileName AS WSTRING, BYVAL dimPercent AS LONG = 0, BYVAL bGrayScale AS LONG = FALSE, BYVAL imageType AS LONG = IMAGE_ICON, BYVAL clrBackground AS ARGB = 0) AS HANDLE
AFX\AFXGDIPLUS.INC|AfxGdipIconFromFile|AfxGdipIconFromFile(BYREF wszFileName AS WSTRING, BYVAL dimPercent AS LONG = 0, BYVAL bGrayScale AS LONG = FALSE) AS HANDLE
AFX\AFXGDIPLUS.INC|AfxGdipBitmapFromFile|AfxGdipBitmapFromFile(BYREF wszFileName AS WSTRING, BYVAL dimPercent AS LONG = 0, BYVAL bGrayScale AS LONG = FALSE, BYVAL clrBackground AS ARGB = 0) AS HANDLE
AFX\AFXGDIPLUS.INC|AfxGdipAddIconFromFile|AfxGdipAddIconFromFile(BYVAL hIml AS HIMAGELIST, BYREF wszFileName AS WSTRING, BYVAL dimPercent AS LONG = 0, BYVAL bGrayScale AS LONG = FALSE) AS LONG
AFX\AFXGDIPLUS.INC|AfxGdipImageFromRes|AfxGdipImageFromRes(BYVAL hInstance AS HINSTANCE, BYREF wszImageName AS WSTRING, BYVAL dimPercent AS LONG = 0, BYVAL bGrayScale AS LONG = FALSE, BYVAL imageType AS LONG = IMAGE_ICON, BYVAL clrBackground AS ARGB = 0) AS HANDLE
AFX\AFXGDIPLUS.INC|AfxGdipIconFromRes|AfxGdipIconFromRes(BYVAL hInstance AS HINSTANCE, BYREF wszImageName AS WSTRING, BYVAL dimPercent AS LONG = 0, BYVAL bGrayScale AS LONG = FALSE) AS HANDLE
AFX\AFXGDIPLUS.INC|AfxGdipBitmapFromRes|AfxGdipBitmapFromRes(BYVAL hInstance AS HINSTANCE, BYREF wszImageName AS WSTRING, BYVAL dimPercent AS LONG = 0, BYVAL bGrayScale AS LONG = FALSE, BYVAL clrBackground AS ARGB = 0) AS HANDLE
AFX\AFXGDIPLUS.INC|AfxGdipAddIconFromRes|AfxGdipAddIconFromRes(BYVAL hIml AS HIMAGELIST, BYVAL hInstance AS HINSTANCE, BYREF wszImageName AS WSTRING, BYVAL dimPercent AS LONG = 0, BYVAL bGrayScale AS LONG = FALSE) AS LONG
AFX\AFXGDIPLUS.INC|AfxGdipGetEncoderClsid|AfxGdipGetEncoderClsid(BYREF wszMimeType AS WSTRING) AS GUID
AFX\AFXGDIPLUS.INC|AfxGdipSaveImageToFile|AfxGdipSaveImageToFile(BYVAL pImage AS GpImage PTR, BYREF wszFileName AS WSTRING, BYREF wszMimeType AS WSTRING) AS LONG
AFX\AFXGDIPLUS.INC|AfxGdipSaveImageToBmp|AfxGdipSaveImageToBmp(BYVAL pImage AS GpImage PTR, BYREF wszFileName AS WSTRING) AS LONG
AFX\AFXGDIPLUS.INC|AfxGdipSaveImageToJpeg|AfxGdipSaveImageToJpeg(BYVAL pImage AS GpImage PTR, BYREF wszFileName AS WSTRING) AS LONG
AFX\AFXGDIPLUS.INC|AfxGdipSaveImageToPng|AfxGdipSaveImageToPng(BYVAL pImage AS GpImage PTR, BYREF wszFileName AS WSTRING) AS LONG
AFX\AFXGDIPLUS.INC|AfxGdipSaveImageToGif|AfxGdipSaveImageToGif(BYVAL pImage AS GpImage PTR, BYREF wszFileName AS WSTRING) AS LONG
AFX\AFXGDIPLUS.INC|AfxGdipSaveImageToTiff|AfxGdipSaveImageToTiff(BYVAL pImage AS GpImage PTR, BYREF wszFileName AS WSTRING) AS LONG
AFX\AFXGDIPLUS.INC|AfxGdipSaveHBITMAPToFile|AfxGdipSaveHBITMAPToFile(BYVAL hbmp AS HBITMAP, BYREF wszFileName AS WSTRING, BYREF wszMimeType AS WSTRING = "#########") AS LONG
AFX\AFXGDIPLUS.INC|AfxGdipPrintHBITMAP|AfxGdipPrintHBITMAP(BYVAL hbmp AS HBITMAP, BYVAL bStretch AS BOOLEAN = FALSE, BYVAL nStretchMode AS LONG = InterpolationModeHighQualityBicubic) AS BOOLEAN
AFX\AFXGDIPLUS.INC|AfxGdipLoadTexture|AfxGdipLoadTexture OVERLOAD(BYREF wszFileName AS WSTRING, BYREF TextureWidth AS LONG, BYREF TextureHeight AS LONG, BYREF strTextureData AS STRING) AS LONG
AFX\AFXGDIPLUS.INC|AfxGdipLoadTexture|AfxGdipLoadTexture OVERLOAD(BYVAL hInstance AS HINSTANCE, BYREF wszResourceName AS WSTRING, BYREF TextureWidth AS LONG, BYREF TextureHeight AS LONG, BYREF strTextureData AS STRING) AS LONG
AFX\AFXGLUT.INC|AfxGlutTeapot|AfxGlutTeapot(BYVAL grid AS LONG, BYVAL dbScale AS DOUBLE, BYVAL dwType AS DWORD)
AFX\AFXGLUT.INC|AfxGlutWireTeapot|AfxGlutWireTeapot(BYVAL dbSize AS DOUBLE)
AFX\AFXGLUT.INC|AfxGlutSolidTeapot|AfxGlutSolidTeapot(BYVAL dbSize AS DOUBLE)
AFX\AFXGLUT.INC|AfxGlutWireCube|AfxGlutWireCube(BYVAL dSize AS DOUBLE)
AFX\AFXGLUT.INC|AfxGlutSolidCube|AfxGlutSolidCube(BYVAL dSize AS DOUBLE)
AFX\AFXGLUT.INC|AfxGlutWireOctahedron|
AFX\AFXGLUT.INC|AfxGlutSolidOctahedron|
AFX\AFXGLUT.INC|AfxGlutCircleTable|AfxGlutCircleTable(sint() AS DOUBLE, cost() AS DOUBLE, BYVAL n AS LONG)
AFX\AFXGLUT.INC|AfxGlutSolidSphere|AfxGlutSolidSphere(BYVAL radius AS DOUBLE, BYVAL slices AS LONG, BYVAL stacks AS LONG)
AFX\AFXGLUT.INC|AfxGlutWireSphere|AfxGlutWireSphere(BYVAL radius AS DOUBLE, BYVAL slices AS LONG, BYVAL stacks AS LONG)
AFX\AFXGLUT.INC|AfxGlutSolidCone|AfxGlutSolidCone(BYVAL dbase AS DOUBLE, BYVAL height AS DOUBLE, BYVAL slices AS LONG, BYVAL stacks AS LONG)
AFX\AFXGLUT.INC|AfxGlutWireCone|AfxGlutWireCone(BYVAL dbase AS DOUBLE, BYVAL height AS DOUBLE, BYVAL slices AS LONG, BYVAL stacks AS LONG)
AFX\AFXGLUT.INC|AfxGlutSolidCylinder|AfxGlutSolidCylinder(BYVAL radius AS DOUBLE, BYVAL height AS DOUBLE, BYVAL slices AS LONG, BYVAL stacks AS LONG)
AFX\AFXGLUT.INC|AfxGlutWireCylinder|AfxGlutWireCylinder(BYVAL radius AS DOUBLE, BYVAL height AS DOUBLE, BYVAL slices AS LONG, BYVAL stacks AS LONG)
AFX\AFXGLUT.INC|AfxGlutSolidDodecahedron|
AFX\AFXGLUT.INC|AfxGlutWireDodecahedron|
AFX\AFXGLUT.INC|AfxGlutSolidTetrahedron|
AFX\AFXGLUT.INC|AfxGlutWireTetrahedron|
AFX\AFXGLUT.INC|AfxGlutDoughnut|AfxGlutDoughnut(BYVAL innerRadius AS SINGLE, BYVAL outerRadius AS SINGLE , BYVAL nsides AS LONG, BYVAL rings AS LONG)
AFX\AFXGLUT.INC|AfxGlutWireTorus|AfxGlutWireTorus(BYVAL innerRadius AS DOUBLE, BYVAL outerRadius AS DOUBLE, BYVAL nsides AS LONG, BYVAL rings AS LONG)
AFX\AFXGLUT.INC|AfxGlutSolidTorus|AfxGlutSolidTorus(BYVAL innerRadius AS DOUBLE, BYVAL outerRadius AS DOUBLE, BYVAL nsides AS LONG, BYVAL rings AS LONG)
AFX\AFXGLUT.INC|AfxGlutWireIcosahedron|
AFX\AFXGLUT.INC|AfxGlutSolidIcosahedron|
AFX\AFXGLUT.INC|AfxGlutWireRhombicDodecahedron|
AFX\AFXGLUT.INC|AfxGlutSolidRhombicDodecahedron|
AFX\AFXGSLCOMPLEX.INC|HUGE_VAL|HUGE_VAL() AS DOUBLE
AFX\AFXGSLCOMPLEX.INC|expm1|expm1(BYVAL x AS DOUBLE) AS DOUBLE
AFX\AFXGSLCOMPLEX.INC|acosh|acosh(BYVAL x AS DOUBLE) AS DOUBLE
AFX\AFXGSLCOMPLEX.INC|asinh|asinh(BYVAL x AS DOUBLE) AS DOUBLE
AFX\AFXGSLCOMPLEX.INC|atanh|atanh(BYVAL x AS DOUBLE) AS DOUBLE
AFX\AFXGSLCOMPLEX.INC|hypot3|hypot3(BYVAL x AS DOUBLE, BYVAL y AS DOUBLE, BYVAL z AS DOUBLE) AS DOUBLE
AFX\AFXGSLCOMPLEX.INC|isinf|isinf(BYVAL x AS DOUBLE) AS LONG
AFX\AFXGSLCOMPLEX.INC|fcmp|fcmp(BYVAL x1 AS DOUBLE, BYVAL x2 AS DOUBLE, BYVAL epsilon AS DOUBLE) AS LONG
AFX\AFXGSLCOMPLEX.INC|CSet|CSet(BYVAL x AS DOUBLE, BYVAL y AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CRect|CRect(BYVAL x AS DOUBLE, BYVAL y AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CPolar|CPolar(BYVAL r AS DOUBLE, BYVAL theta AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CGetReal|CGetReal(BYREF z AS gsl_complex) AS DOUBLE
AFX\AFXGSLCOMPLEX.INC|CGetImag|CGetImag(BYREF z AS gsl_complex) AS DOUBLE
AFX\AFXGSLCOMPLEX.INC|CSetReal|CSetReal(BYREF z AS gsl_complex, BYVAL x AS DOUBLE)
AFX\AFXGSLCOMPLEX.INC|CSetImag|CSetImag(BYREF z AS gsl_complex, BYVAL y AS DOUBLE)
AFX\AFXGSLCOMPLEX.INC|CSwap|CSwap(BYREF z1 AS gsl_complex, BYREF z2 AS gsl_complex)
AFX\AFXGSLCOMPLEX.INC|CNeg|CNeg(BYREF z AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CNegate|CNegate(BYREF z AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CNegative|CNegative(BYREF z AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CAddReal|CAddReal(BYREF z AS gsl_complex, BYVAL x AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CAddImag|CAddImag(BYREF z AS gsl_complex, BYVAL y AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CSubReal|CSubReal(BYREF z AS gsl_complex, BYVAL x AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CSubImag|CSubImag(BYREF z AS gsl_complex, BYVAL y AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CMulReal|CMulReal(BYREF z AS gsl_complex, BYVAL x AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CMulImag|CMulImag(BYREF z AS gsl_complex, BYVAL y AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CDivReal|CDivReal(BYREF z AS gsl_complex, BYVAL x AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CDivImag|CDivImag(BYREF z AS gsl_complex, BYVAL y AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CConj|CConj(BYREF z AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CConjugate|CConjugate(BYREF z AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArg|CArg(BYREF z AS gsl_complex) AS DOUBLE
AFX\AFXGSLCOMPLEX.INC|CArgument|CArgument(BYREF z AS gsl_complex) AS DOUBLE
AFX\AFXGSLCOMPLEX.INC|CAbs|CAbs(BYREF z AS gsl_complex) AS DOUBLE
AFX\AFXGSLCOMPLEX.INC|CAbs2|CAbs2(BYREF z AS gsl_complex) AS DOUBLE
AFX\AFXGSLCOMPLEX.INC|CNorm|CNorm(BYREF z AS gsl_complex) AS DOUBLE
AFX\AFXGSLCOMPLEX.INC|CPhase|CPhase(BYREF z AS gsl_complex) AS DOUBLE
AFX\AFXGSLCOMPLEX.INC|CInverse|CInverse(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CReciprocal|CReciprocal(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CLogAbs|CLogAbs(BYREF z AS gsl_complex) AS DOUBLE
AFX\AFXGSLCOMPLEX.INC|CSqr|CSqr(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CSqrReal|CSqrReal(BYVAL x AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CExp|CExp(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CLog|CLog(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CLog10|CLog10(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CLogb|CLogb(BYREF a AS gsl_complex, BYREF b AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CLog_b|CLog_b(BYREF a AS gsl_complex, BYREF b AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CPow|CPow(BYREF a AS gsl_complex, BYREF b AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CPowReal|CPowReal(BYREF a AS gsl_complex, BYVAL b AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CSin|CSin(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CCos|CCos(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CSec|CSec(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CCsc|CCsc(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CTan|CTan(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CCot|CCot(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArcSinReal|CArcSinReal(BYVAL a AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArcSin|CArcSin(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArcCosReal|CArcCosReal(BYVAL a AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArcCos|CArcCos(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArcSec|CArcSec(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArcSecReal|CArcSecReal(BYVAL a AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArcCsc|CArcCsc(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArcCscReal|CArcCscReal(BYVAL a AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArcTan|CArcTan(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArcCot|CArcCot(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CSinH|CSinH(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CCosH|CCosH(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CSecH|CSecH(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CCscH|CCscH(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CTanH|CTanH(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CCotH|CCotH(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArcSinH|CArcSinH(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArcCosH|CArcCosH(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArcCosHReal|CArcCosHReal(BYVAL a AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArcSecH|CArcSecH(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArcCscH|CArcCscH(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArcTanhReal|CArcTanhReal(BYVAL a AS DOUBLE) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArcTanH|CArcTanH(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CArcCotH|CArcCotH(BYREF a AS gsl_complex) AS gsl_complex
AFX\AFXGSLCOMPLEX.INC|CSgn|CSgn(BYREF z AS gsl_complex) AS LONG
AFX\AFXGSLCOMPLEX.INC|CStr|CStr(BYREF z AS gsl_complex) AS STRING
AFX\AFXGSLCOMPLEX.INC|CStrPolar|CStrPolar(BYREF z AS gsl_complex) AS STRING
AFX\AFXMENU.INC|AfxCheckMenuItem|AfxCheckMenuItem(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG = FALSE) AS DWORD
AFX\AFXMENU.INC|AfxUnCheckMenuItem|AfxUnCheckMenuItem(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG = FALSE) AS DWORD
AFX\AFXMENU.INC|AfxToggleMenuItem|AfxToggleMenuItem(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG = FALSE) AS DWORD
AFX\AFXMENU.INC|AfxIsMenuItemChecked|AfxIsMenuItemChecked(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG = FALSE) AS BOOLEAN
AFX\AFXMENU.INC|AfxIsMenuItemEnabled|AfxIsMenuItemEnabled(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG = FALSE) AS BOOLEAN
AFX\AFXMENU.INC|AfxIsMenuItemDisabled|AfxIsMenuItemDisabled(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG = FALSE) AS BOOLEAN
AFX\AFXMENU.INC|AfxIsMenuItemGrayed|AfxIsMenuItemGrayed(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG = FALSE) AS BOOLEAN
AFX\AFXMENU.INC|AfxIsMenuItemHighlighted|AfxIsMenuItemHighlighted(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG = FALSE) AS BOOLEAN
AFX\AFXMENU.INC|AfxIsMenuItemSeparator|AfxIsMenuItemSeparator(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG = FALSE) AS BOOLEAN
AFX\AFXMENU.INC|AfxIsMenuItemPopup|AfxIsMenuItemPopup(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG = FALSE) AS BOOLEAN
AFX\AFXMENU.INC|AfxIsMenuItemOwnerDraw|AfxIsMenuItemOwnerDraw(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG = FALSE) AS BOOLEAN
AFX\AFXMENU.INC|AfxGetMenuItemState|AfxGetMenuItemState(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG = FALSE) AS DWORD
AFX\AFXMENU.INC|AfxSetMenuItemState|AfxSetMenuItemState(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fState AS DWORD, BYVAL fByPosition AS LONG = FALSE) AS BOOLEAN
AFX\AFXMENU.INC|AfxEnableMenuItem|AfxEnableMenuItem(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG = FALSE) AS BOOLEAN
AFX\AFXMENU.INC|AfxDisableMenuItem|AfxDisableMenuItem(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG = FALSE) AS BOOLEAN
AFX\AFXMENU.INC|AfxGrayMenuItem|AfxGrayMenuItem(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG = FALSE) AS BOOLEAN
AFX\AFXMENU.INC|AfxHiliteMenuItem|AfxHiliteMenuItem(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG = FALSE) AS BOOLEAN
AFX\AFXMENU.INC|AfxRemoveCloseMenu|AfxRemoveCloseMenu(BYVAL hwnd AS HWND) AS BOOLEAN
AFX\AFXMENU.INC|AfxRightJustifyMenuItem|AfxRightJustifyMenuItem(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD) AS BOOLEAN
AFX\AFXMENU.INC|AfxSetMenuItemBold|AfxSetMenuItemBold(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD) AS BOOLEAN
AFX\AFXMENU.INC|AfxSetMenuItemText|AfxSetMenuItemText(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYREF wszText AS WSTRING, BYVAL fByPosition AS LONG = FALSE) AS BOOLEAN
AFX\AFXMENU.INC|AfxGetMenuItemTextLen|AfxGetMenuItemTextLen(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG = FALSE) AS LONG
AFX\AFXMENU.INC|AfxGetMenuItemText|AfxGetMenuItemText OVERLOAD(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG, BYVAL pwszText AS WSTRING PTR, BYVAL cchTextMax AS LONG) AS BOOLEAN
AFX\AFXMENU.INC|AfxGetMenuItemText|AfxGetMenuItemText OVERLOAD(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS LONG) AS CWSTR
AFX\AFXMENU.INC|AfxGetMenuFont|AfxGetMenuFont(BYVAL plfw AS LOGFONTW PTR) AS BOOLEAN
AFX\AFXMENU.INC|AfxGetMenuFontPointSize|AfxGetMenuFontPointSize() AS LONG
AFX\AFXMENU.INC|AfxGetMenuRect|AfxGetMenuRect(BYVAL hwnd AS HWND, BYVAL hmenu AS HMENU, BYVAL prcmenu AS RECT PTR) AS LONG
AFX\AFXMENU.INC|AfxInitBitmapInfo|AfxInitBitmapInfo(BYVAL pbmi AS BITMAPINFO PTR, BYVAL cbInfo AS ULONG, BYVAL cx AS LONG, BYVAL cy AS LONG, BYVAL bpp AS WORD) AS BOOLEAN
AFX\AFXMENU.INC|AfxCreate32BitHBITMAP|AfxCreate32BitHBITMAP(BYVAL hDC AS HDC, BYVAL psize AS SIZE PTR, BYVAL ppvBits AS ANY PTR PTR, BYVAL phBmp AS HBITMAP PTR) AS BOOLEAN
AFX\AFXMENU.INC|AfxAddBitmapToMenuItem|AfxAddBitmapToMenuItem(BYVAL hMenu AS HMENU, BYVAL nMenuItem AS LONG, BYVAL fByPosition AS BOOLEAN, BYVAL hbmp AS HBITMAP) AS BOOLEAN
AFX\AFXMENU.INC|AfxConvertToPARGB32|AfxConvertToPARGB32(BYVAL hDC AS HDC, BYVAL pargb AS DWORD PTR, BYVAL hbmp AS HBITMAP, BYVAL sizeImage AS SIZE, BYVAL cxRow AS LONG) AS BOOLEAN
AFX\AFXMENU.INC|AfxHasAlpha|AfxHasAlpha(BYVAL pargb AS DWORD PTR, BYVAL sizeImage AS SIZE, BYVAL cxRow AS LONG) AS BOOLEAN
AFX\AFXMENU.INC|AfxConvertBufferToPARGB32|AfxConvertBufferToPARGB32(BYVAL hPaintBuffer AS HPAINTBUFFER, BYVAL hDC AS HDC, BYVAL hIcon AS HICON, BYVAL sizeIcon AS SIZE) AS BOOLEAN
AFX\AFXMENU.INC|AfxAddIconToMenuItem|AfxAddIconToMenuItem(BYVAL hMenu AS HMENU, BYVAL uItem AS DWORD, BYVAL fByPosition AS BOOLEAN, BYVAL hIcon AS HICON, BYVAL fAutoDestroy AS BOOLEAN = TRUE, BYVAL phbmp AS HBITMAP PTR = NULL) AS BOOLEAN
AFX\AFXNLS.INC|AfxGetLocaleAbbrevDayName|AfxGetLocaleAbbrevDayName(BYVAL nDay AS LONG, BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleAbbrevMonthName|AfxGetLocaleAbbrevMonthName(BYVAL nMonth AS LONG, BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleCountryName|AfxGetLocaleCountryName(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleCurrencySymbol|AfxGetLocaleCurrencySymbol(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleDayName|AfxGetLocaleDayName(BYVAL nDay AS LONG, BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleDecimalSeparator|AfxGetLocaleDecimalSeparator(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleDigitsGrouping|AfxGetLocaleDigitsGrouping(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleDisplayName|AfxGetLocaleDisplayName(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleEnglishCountryName|AfxGetLocaleEnglishCountryName(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleEnglishCurrencyName|AfxGetLocaleEnglishCurrencyName(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleEnglishDisplayName|AfxGetLocaleEnglishDisplayName(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleEnglishLanguageName|AfxGetLocaleEnglishLanguageName(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleInternationalMonetarySymbol|AfxGetLocaleInternationalMonetarySymbol(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleISO639LanguageName|AfxGetLocaleISO639LanguageName(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleISO639LanguageName2|AfxGetLocaleISO639LanguageName2(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleISO3166CountryName|AfxGetLocaleISO3166CountryName(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleISO3166CountryName2|AfxGetLocaleISO3166CountryName2(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleLanguageName|AfxGetLocaleLanguageName(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleListItemsSeparator|AfxGetLocaleListItemsSeparator(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleLongDateFormatString|AfxGetLocaleLongDateFormatString(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleMonetaryDecimalSeparator|AfxGetLocaleMonetaryDecimalSeparator(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleMonetaryGrouping|AfxGetLocaleMonetaryGrouping(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleMonetaryThousandsSeparator|AfxGetLocaleMonetaryThousandsSeparator(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleMonthDayFormatString|AfxGetLocaleMonthDayFormatString(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleMonthName|AfxGetLocaleMonthName(BYVAL nMonth AS LONG, BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleName|AfxGetLocaleName(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleNanString|AfxGetLocaleNanString(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleNativeCountryName|AfxGetLocaleNativeCountryName(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleNativeCurrencyName|AfxGetLocaleNativeCurrencyName(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleNativeDigits|AfxGetLocaleNativeDigits(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleNativeDisplayName|AfxGetLocaleNativeDisplayName(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleNativeLanguageName|AfxGetLocaleNativeLanguageName(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleNegativeInfinityString|AfxGetLocaleNegativeInfinityString(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleNegativeSign|AfxGetLocaleNegativeSign(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleOpenTypeLanguageTag|AfxGetLocaleOpenTypeLanguageTag(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocalePermilleSymbol|AfxGetLocalePermilleSymbol(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocalePositiveInfinityString|AfxGetLocalePositiveInfinityString(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocalePositiveSign|AfxGetLocalePositiveSign(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleScriptsList|AfxGetLocaleScriptsList(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleShortDateFormatString|AfxGetLocaleShortDateFormatString(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleShortestDayName|AfxGetLocaleShortestDayName(BYVAL nDay AS LONG, BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleShortTimeFormatString|AfxGetLocaleShortTimeFormatString(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleSortName|AfxGetLocaleSortName(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleThousandsSeparator|AfxGetLocaleThousandsSeparator(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleDateSeparator|AfxGetLocaleDateSeparator(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleTimeFormatString|AfxGetLocaleTimeFormatString(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleTimeSeparator|AfxGetLocaleTimeSeparator(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocaleYearMonthFormatString|AfxGetLocaleYearMonthFormatString(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocalizedCountryName|AfxGetLocalizedCountryName(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocalizedDisplayName|AfxGetLocalizedDisplayName(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetLocalizedLanguageName|AfxGetLocalizedLanguageName(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXNLS.INC|AfxGetSortLocale|AfxGetSortLocale(BYVAL nLocale AS LONG = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXPATH.INC|AfxPathAddBackSlash|AfxPathAddBackSlash(BYREF wszPath AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathRemoveBackslash|AfxPathRemoveBackslash(BYREF wszPath AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathAddExtension|AfxPathAddExtension(BYREF wszPath AS CONST WSTRING, BYVAL pwszExt AS WSTRING PTR = NULL) AS CWSTR
AFX\AFXPATH.INC|AfxPathRemoveExtension|AfxPathRemoveExtension(BYREF wszPath AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathRenameExtension|AfxPathRenameExtension(BYREF wszPath AS CONST WSTRING, BYREF wszExt AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathAppend|AfxPathAppend(BYREF wszPath AS CONST WSTRING, BYREF wszMore AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathBuildRoot|AfxPathBuildRoot(BYVAL nDrive AS LONG) AS CWSTR
AFX\AFXPATH.INC|AfxPathCanonicalize|AfxPathCanonicalize(BYREF wszPath AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathCombine|AfxPathCombine(BYREF wszDir AS CONST WSTRING, BYREF wszFile AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathCommonPrefix|AfxPathCommonPrefix(BYREF wszPath1 AS CONST WSTRING, BYREF wszPath2 AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathCompactPath|AfxPathCompactPath(BYVAL hDC AS HDC, BYREF wszPath AS CONST WSTRING, BYVAL dx AS DWORD) AS CWSTR
AFX\AFXPATH.INC|AfxPathCompactPathEx|AfxPathCompactPathEx(BYREF wszPath AS CONST WSTRING, BYVAL cchMax AS DWORD) AS CWSTR
AFX\AFXPATH.INC|AfxPathCreateFromUrl|AfxPathCreateFromUrl(BYREF wszUrl AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathMakePretty|AfxPathMakePretty(BYREF wszPath AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathQuoteSpaces|AfxPathQuoteSpaces(BYREF wszPath AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathUnquoteSpaces|AfxPathUnquoteSpaces(BYREF wszPath AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathFileExists|AfxPathFileExists(BYREF wszPath AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathFindExtension|AfxPathFindExtension(BYREF wszPath AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathFindFileName|AfxPathFindFileName(BYREF wszPath AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathFindNextComponent|AfxPathFindNextComponent(BYREF wszPath AS WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathSkipRoot|AfxPathSkipRoot(BYREF wszPath AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathFindSuffixArray|AfxPathFindSuffixArray(BYREF wszPath AS WSTRING, BYVAL apwszSuffix AS WSTRING PTR PTR, BYVAL iArraySize AS LONG) AS CWSTR
AFX\AFXPATH.INC|AfxPathGetArgs|AfxPathGetArgs(BYREF wszPath AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathGetCharType|AfxPathGetCharType(BYREF wszCh AS CONST WSTRING) AS UINT
AFX\AFXPATH.INC|AfxPathGetDriveNumber|AfxPathGetDriveNumber(BYREF wszPath AS CONST WSTRING) AS LONG
AFX\AFXPATH.INC|AfxPathIsContentType|AfxPathIsContentType(BYREF wszPath AS CONST WSTRING, BYREF wszContentType AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathIsDirectory|AfxPathIsDirectory(BYREF wszPath AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathIsDirectoryEmpty|AfxPathIsDirectoryEmpty(BYREF wszPath AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathIsFileSpec|AfxPathIsFileSpec(BYREF wszPath AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathIsHTMLFile|AfxPathIsHTMLFile(BYREF wszFile AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathIsLFNFileSpec|AfxPathIsLFNFileSpec(BYREF wszName AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathIsNetworkPath|AfxPathIsNetworkPath(BYREF wszPath AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathIsPrefix|AfxPathIsPrefix(BYREF wszPrefix AS CONST WSTRING, BYREF wszPath AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathIsRelative|AfxPathIsRelative(BYREF wszPath AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathIsRoot|AfxPathIsRoot(BYREF wszPath AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathIsSameRoot|AfxPathIsSameRoot(BYREF wszPath1 AS CONST WSTRING, BYREF wszPath2 AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathIsSystemFolder|AfxPathIsSystemFolder(BYREF wszPath AS CONST WSTRING, BYVAL dwAttrb AS DWORD) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathIsUNC|AfxPathIsUNC(BYREF wszPath AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathIsUNCServer|AfxPathIsUNCServer(BYREF wszPath AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathIsUNCServerShare|AfxPathIsUNCServerShare(BYREF wszPath AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathIsURL|AfxPathIsURL(BYREF wszPath AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathMakeSystemFolder|AfxPathMakeSystemFolder(BYREF wszPath AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathUnmakeSystemFolder|AfxPathUnmakeSystemFolder(BYREF wszPath AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathFindOnPath|AfxPathFindOnPath(BYREF wszFile AS CONST WSTRING, BYVAL ppwszOtherDirs AS WSTRING PTR PTR = NULL) AS CWSTR
AFX\AFXPATH.INC|AfxPathMatchSpec|AfxPathMatchSpec(BYREF wszFile AS CONST WSTRING, BYREF wszSpec AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathRemoveArgs|AfxPathRemoveArgs(BYREF wszPath AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathRemoveBlanks|AfxPathRemoveBlanks(BYREF wszPath AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathRemoveFileSpec|AfxPathRemoveFileSpec(BYREF wszPath AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathSearchAndQualify|AfxPathSearchAndQualify(BYREF wszPath AS CONST WSTRING, BYREF wszFullyQualifiedPath AS CONST WSTRING, BYVAL cchFullyQualifiedPath AS DWORD) AS BOOLEAN
AFX\AFXPATH.INC|AfxPathSetDlgItemPath|AfxPathSetDlgItemPath(BYVAL hDlg AS HWND, BYVAL cID AS LONG, BYREF wszPath AS CONST WSTRING)
AFX\AFXPATH.INC|AfxPathStripPath|AfxPathStripPath(BYREF wszPath AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathStripToRoot|AfxPathStripToRoot(BYREF wszPath AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathUndecorate|AfxPathUndecorate(BYREF wszPath AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathUnExpandEnvStrings|AfxPathUnExpandEnvStrings(BYREF wszPath AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathParseIconLocation|AfxPathParseIconLocation(BYREF wszIconFile AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxPathRelativePathTo|AfxPathRelativePathTo(BYREF wszFrom AS CONST WSTRING, BYVAL dwAttrFrom AS DWORD, BYREF wszTo AS CONST WSTRING, BYVAL dwAttrTo AS DWORD) AS CWSTR
AFX\AFXPATH.INC|AfxUrlApplyScheme|AfxUrlApplyScheme(BYREF wszUrl AS WSTRING, BYVAL dwFlags AS DWORD) AS CWSTR
AFX\AFXPATH.INC|AfxUrlCanonicalize|AfxUrlCanonicalize(BYREF wszUrl AS WSTRING, BYVAL dwFlags AS DWORD) AS CWSTR
AFX\AFXPATH.INC|AfxUrlCombine|AfxUrlCombine(BYREF wszBase AS WSTRING, BYREF wszRelative AS WSTRING, BYVAL dwFlags AS DWORD) AS CWSTR
AFX\AFXPATH.INC|AfxUrlCompare|AfxUrlCompare(BYREF wszURL1 AS CONST WSTRING, BYREF wszURL2 AS CONST WSTRING, BYVAL fIgnoreSlash AS LONG) AS BOOLEAN
AFX\AFXPATH.INC|AfxUrlCreateFromPath|AfxUrlCreateFromPath(BYREF wszPath AS WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxUrlEscape|AfxUrlEscape(BYREF wszURL AS WSTRING, BYVAL dwFlags AS DWORD) AS CWSTR
AFX\AFXPATH.INC|AfxUrlEscapeSpaces|AfxUrlEscapeSpaces(BYREF wszURL AS WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxUrlGetLocation|AfxUrlGetLocation(BYREF wszUrl AS CONST WSTRING) AS CWSTR
AFX\AFXPATH.INC|AfxUrlGetPart|AfxUrlGetPart(BYREF wszUrl AS CONST WSTRING, BYVAL dwPart AS DWORD, BYVAL dwFlags AS DWORD) AS CWSTR
AFX\AFXPATH.INC|AfxUrlHash|AfxUrlHash(BYREF wszURL AS CONST WSTRING, BYVAL pbHash AS BYTE PTR, BYVAL cbHash AS DWORD) AS HRESULT
AFX\AFXPATH.INC|AfxUrlIs|AfxUrlIs(BYREF wszURL AS CONST WSTRING, BYVAL nUrlIs AS URLIS) AS BOOLEAN
AFX\AFXPATH.INC|AfxUrlIsFileUrl|AfxUrlIsFileUrl(BYREF wszURL AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxUrlIsNoHistory|AfxUrlIsNoHistory(BYREF wszURL AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxUrlIsOpaque|AfxUrlIsOpaque(BYREF wszURL AS CONST WSTRING) AS BOOLEAN
AFX\AFXPATH.INC|AfxUrlUnescape|AfxUrlUnescape(BYREF wszURL AS WSTRING, BYVAL dwFlags AS DWORD) AS CWSTR
AFX\AFXPATH.INC|AfxUrlUnescapeInPlace|AfxUrlUnescapeInPlace(BYREF wszURL AS WSTRING, BYVAL dwFlags AS DWORD) AS HRESULT
AFX\AFXPATH.INC|AfxPathMatchSpecEx|AfxPathMatchSpecEx(BYREF wszFile AS CONST WSTRING, BYREF wszSpec AS CONST WSTRING, BYVAL dwFlags AS DWORD = 0) AS BOOLEAN
AFX\AFXPATH.INC|AfxUrlFixup|AfxUrlFixup(BYREF wszUrl AS CONST WSTRING) AS CWSTR
AFX\AFXPRINTER.INC|AfxGetDefaultPrinter|AfxGetDefaultPrinter() AS CWSTR
AFX\AFXPRINTER.INC|AfxGetDefaultPrinterDriver|AfxGetDefaultPrinterDriver() AS CWSTR
AFX\AFXPRINTER.INC|AfxGetDefaultPrinterPort|AfxGetDefaultPrinterPort() AS CWSTR
AFX\AFXPRINTER.INC|AfxGetPrinterDC|AfxGetPrinterDC() AS HDC
AFX\AFXPRINTER.INC|AfxPrinterDialog|AfxPrinterDialog(BYVAL hwndOwner AS HWND, BYREF flags AS DWORD, BYREF hdc AS HDC, BYREF nCopies AS WORD, BYREF nFromPage AS WORD, BYREF nToPage AS WORD, BYREF nMinPage AS WORD, BYREF nMaxPage AS WORD) AS BOOLEAN
AFX\AFXPRINTER.INC|AfxOpenPrintersFolder|AfxOpenPrintersFolder() AS HINSTANCE
AFX\AFXPRINTER.INC|AfxEnumPrinterPorts|AfxEnumPrinterPorts(BYVAL pwszServerName AS WSTRING PTR = NULL) AS CWSTR
AFX\AFXPRINTER.INC|AfxEnumLocalPrinterPorts|AfxEnumLocalPrinterPorts() AS CWSTR
AFX\AFXPRINTER.INC|AfxEnumPrinterNames|AfxEnumPrinterNames() AS CWSTR
AFX\AFXPRINTER.INC|AfxGetPrinterPort|AfxGetPrinterPort(BYREF wszPrinterName AS WSTRING) AS CWSTR
AFX\AFXPRINTER.INC|AfxGetPrinterFromPort|AfxGetPrinterFromPort(BYREF wszPortName AS WSTRING) AS CWSTR
AFX\AFXPRINTER.INC|AfxGetPrinterCollate|AfxGetPrinterCollate(BYREF wszPrinterName AS WSTRING) AS BOOLEAN
AFX\AFXPRINTER.INC|AfxGetPrinterColorMode|AfxGetPrinterColorMode(BYREF wszPrinterName AS WSTRING) AS BOOLEAN
AFX\AFXPRINTER.INC|AfxGetPrinterDriverVersion|AfxGetPrinterDriverVersion(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterDuplexMode|AfxGetPrinterDuplexMode(BYREF wszPrinterName AS WSTRING) AS BOOLEAN
AFX\AFXPRINTER.INC|AfxGetPrinterMaxCopies|AfxGetPrinterMaxCopies(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterMediaReady|AfxGetPrinterMediaReady(BYREF wszPrinterName AS WSTRING) AS CWSTR
AFX\AFXPRINTER.INC|AfxGetPrinterMaxPaperHeight|AfxGetPrinterMaxPaperHeight(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterMaxPaperWidth|AfxGetPrinterMaxPaperWidth(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterMinPaperHeight|AfxGetPrinterMinPaperHeight(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterMinPaperWidth|AfxGetPrinterMinPaperWidth(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterOrientationDegrees|AfxGetPrinterOrientationDegrees(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterPaperNames|AfxGetPrinterPaperNames(BYREF wszPrinterName AS WSTRING) AS CWSTR
AFX\AFXPRINTER.INC|AfxGetPrinterTrayNames|AfxGetPrinterTrayNames(BYREF wszPrinterName AS WSTRING) AS CWSTR
AFX\AFXPRINTER.INC|AfxGetPrinterPaperSizes|AfxGetPrinterPaperSizes(BYREF wszPrinterName AS WSTRING) AS CWSTR
AFX\AFXPRINTER.INC|AfxGetPrinterRate|AfxGetPrinterRate(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterRatePPM|AfxGetPrinterRatePPM(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterRateUnit|AfxGetPrinterRateUnit(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterTrueType|AfxGetPrinterTrueType(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetDocumentProperties|AfxGetDocumentProperties(BYREF wszPrinterName AS WSTRING, BYVAL dmField AS DWORD) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterCollateStatus|AfxGetPrinterCollateStatus(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterCopies|AfxGetPrinterCopies(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterOrientation|AfxGetPrinterOrientation(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterPaperSize|AfxGetPrinterPaperSize(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterQuality|AfxGetPrinterQuality(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterScale|AfxGetPrinterScale(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterTray|AfxGetPrinterTray(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterPaperLength|AfxGetPrinterPaperLength(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterPaperWidth|AfxGetPrinterPaperWidth(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterHorizontalResolution|AfxGetPrinterHorizontalResolution(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterVerticalResolution|AfxGetPrinterVerticalResolution(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterPhysicalHeight|AfxGetPrinterPhysicalHeight(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterPhysicalOffsetX|AfxGetPrinterPhysicalOffsetX(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterPhysicalOffsetY|AfxGetPrinterPhysicalOffsetY(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterPhysicalWidth|AfxGetPrinterPhysicalWidth(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterScalingFactorX|AfxGetPrinterScalingFactorX(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxGetPrinterScalingFactorY|AfxGetPrinterScalingFactorY(BYREF wszPrinterName AS WSTRING) AS LONG
AFX\AFXPRINTER.INC|AfxSetPrinterInfo|AfxSetPrinterInfo(BYREF wszPrinterName AS WSTRING, BYVAL dmField AS DWORD, BYVAL nValue AS LONG) AS BOOLEAN
AFX\AFXPRINTER.INC|AfxSetPrinterColorMode|AfxSetPrinterColorMode(BYREF wszPrinterName AS WSTRING, BYVAL nMode AS LONG) AS BOOLEAN
AFX\AFXPRINTER.INC|AfxSetPrinterCopies|AfxSetPrinterCopies(BYREF wszPrinterName AS WSTRING, BYVAL nCopies AS LONG) AS BOOLEAN
AFX\AFXPRINTER.INC|AfxSetPrinterDuplexMode|AfxSetPrinterDuplexMode(BYREF wszPrinterName AS WSTRING, BYVAL nDuplexMode AS LONG) AS BOOLEAN
AFX\AFXPRINTER.INC|AfxSetPrinterOrientation|AfxSetPrinterOrientation(BYREF wszPrinterName AS WSTRING, BYVAL nOrientation AS LONG) AS BOOLEAN
AFX\AFXPRINTER.INC|AfxSetPrinterPaperSize|AfxSetPrinterPaperSize(BYREF wszPrinterName AS WSTRING, BYVAL nSize AS LONG) AS BOOLEAN
AFX\AFXPRINTER.INC|AfxSetPrinterQuality|AfxSetPrinterQuality(BYREF wszPrinterName AS WSTRING, BYVAL nMode AS LONG) AS BOOLEAN
AFX\AFXPRINTER.INC|AfxSetPrinterTray|AfxSetPrinterTray(BYREF wszPrinterName AS WSTRING, BYVAL nTray AS LONG) AS BOOLEAN
AFX\AFXPRINTER.INC|AfxSetPrinterCollateStatus|AfxSetPrinterCollateStatus(BYREF wszPrinterName AS WSTRING, BYVAL nMode AS LONG) AS BOOLEAN
AFX\AFXPRINTER.INC|AfxSetPrinterScale|AfxSetPrinterScale(BYREF wszPrinterName AS WSTRING, BYVAL nScale AS LONG) AS BOOLEAN
AFX\AFXRICHEDIT.INC|RichEdit_AutoUrlDetect|RichEdit_AutoUrlDetect(BYVAL hRichEdit AS HWND, BYVAL fUrlDetect AS LONG) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_CanPaste|RichEdit_CanPaste(BYVAL hRichEdit AS HWND, BYVAL clipformat AS LONG) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_CanRedo|RichEdit_CanRedo(BYVAL hRichEdit AS HWND) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_CanUndo|RichEdit_CanUndo(BYVAL hRichEdit AS HWND) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_CharFromPos|RichEdit_CharFromPos(BYVAL hRichEdit AS HWND, BYVAL lppl AS POINTL PTR) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_DisplayBand|RichEdit_DisplayBand(BYVAL hRichEdit AS HWND, BYVAL lprc AS RECT PTR) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_EmptyUndoBuffer|RichEdit_EmptyUndoBuffer(BYVAL hRichEdit AS HWND)
AFX\AFXRICHEDIT.INC|RichEdit_ExGetSel|RichEdit_ExGetSel(BYVAL hRichEdit AS HWND, BYVAL lpchr AS CHARRANGE PTR)
AFX\AFXRICHEDIT.INC|RichEdit_ExLimitText|RichEdit_ExLimitText(BYVAL hRichEdit AS HWND, BYVAL dwLimit AS DWORD)
AFX\AFXRICHEDIT.INC|RichEdit_ExLineFromChar|RichEdit_ExLineFromChar(BYVAL hRichEdit AS HWND, BYVAL iIndex AS LONG) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_ExSetSel|RichEdit_ExSetSel(BYVAL hRichEdit AS HWND, BYVAL lpcr AS CHARRANGE PTR) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_FindText|RichEdit_FindText(BYVAL hRichEdit AS HWND, BYVAL fOptions AS DWORD, BYVAL lpft AS FINDTEXTW PTR) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_FindTextEx|RichEdit_FindTextEx(BYVAL hRichEdit AS HWND, BYVAL fOptions AS DWORD, BYVAL lpftexw AS FINDTEXTEXW PTR) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_FindWordBreak|RichEdit_FindWordBreak(BYVAL hRichEdit AS HWND, BYVAL fOperation AS DWORD, BYVAL dwStartPos AS DWORD) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_FormatRange|RichEdit_FormatRange(BYVAL hRichEdit AS HWND, BYVAL fRender AS LONG, BYVAL lpfr AS FORMATRANGE PTR) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetAutoUrlDetect|RichEdit_GetAutoUrlDetect(BYVAL hRichEdit AS HWND) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_GetBidiOptions|RichEdit_GetBidiOptions(BYVAL hRichEdit AS HWND, BYVAL lpbo AS BIDIOPTIONS PTR)
AFX\AFXRICHEDIT.INC|RichEdit_GetCharFormat|RichEdit_GetCharFormat(BYVAL hRichEdit AS HWND, BYVAL fOption AS DWORD, BYVAL lpcf AS CHARFORMATW PTR) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetCTFModeBias|RichEdit_GetCTFModeBias(BYVAL hRichEdit AS HWND) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_GetCTFOpenStatus|RichEdit_GetCTFOpenStatus(BYVAL hRichEdit AS HWND) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_GetEditStyle|RichEdit_GetEditStyle(BYVAL hRichEdit AS HWND) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetEventMask|RichEdit_GetEventMask(BYVAL hRichEdit AS HWND) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetFirstVisibleLine|RichEdit_GetFirstVisibleLine(BYVAL hRichEdit AS HWND) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_GetHyphenateInfo|RichEdit_GetHyphenateInfo(BYVAL hRichEdit AS HWND, BYVAL lphi AS HYPHENATEINFO PTR)
AFX\AFXRICHEDIT.INC|RichEdit_GetIMEColor|RichEdit_GetIMEColor(BYVAL hRichEdit AS HWND, BYVAL rgCmpclr AS COMPCOLOR PTR) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_GetIMECompMode|RichEdit_GetIMECompMode(BYVAL hRichEdit AS HWND) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetIMECompText|RichEdit_GetIMECompText(BYVAL hRichEdit AS HWND, BYVAL lpict AS IMECOMPTEXT PTR, BYVAL buffer AS ANY PTR) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetIMEModeBias|RichEdit_GetIMEModeBias(BYVAL hRichEdit AS HWND) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetIMEOptions|RichEdit_GetIMEOptions(BYVAL hRichEdit AS HWND) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetIMEProperty|RichEdit_GetIMEProperty(BYVAL hRichEdit AS HWND, BYVAL figp AS DWORD) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetLangOptions|RichEdit_GetLangOptions(BYVAL hRichEdit AS HWND) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetLimitText|RichEdit_GetLimitText(BYVAL hRichEdit AS HWND) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_GetLine|RichEdit_GetLine(BYVAL hRichEdit AS HWND, BYVAL which AS DWORD) AS CWSTR
AFX\AFXRICHEDIT.INC|RichEdit_GetLineCount|RichEdit_GetLineCount(BYVAL hRichEdit AS HWND) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_GetModify|RichEdit_GetModify(BYVAL hRichEdit AS HWND) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_GetOleInterface|RichEdit_GetOleInterface(BYVAL hRichEdit AS HWND, BYVAL ppObject AS IUnknown PTR PTR) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_GetOptions|RichEdit_GetOptions(BYVAL hRichEdit AS HWND) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetPageRotate|RichEdit_GetPageRotate(BYVAL hRichEdit AS HWND) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetParaFormat|RichEdit_GetParaFormat(BYVAL hRichEdit AS HWND, BYVAL pParaFmt AS PARAFORMAT PTR) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetPasswordChar|RichEdit_GetPasswordChar(BYVAL hRichEdit AS HWND) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_GetPunctuation|RichEdit_GetPunctuation(BYVAL hRichEdit AS HWND, BYVAL punctp AS DWORD, BYVAL lppunct AS PUNCTUATION PTR) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_GetRect|RichEdit_GetRect(BYVAL hRichEdit AS HWND, BYVAL prc AS RECT PTR)
AFX\AFXRICHEDIT.INC|RichEdit_GetRedoName|RichEdit_GetRedoName(BYVAL hRichEdit AS HWND) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_GetScrollPos|RichEdit_GetScrollPos(BYVAL hRichEdit AS HWND, BYVAL lppt AS POINT PTR) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetSel|RichEdit_GetSel(BYVAL hRichEdit AS HWND, BYVAL pdwStartPos AS DWORD PTR, BYVAL pdwEndPos AS DWORD PTR) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_GetSelText|RichEdit_GetSelText(BYVAL hRichEdit AS HWND) AS CWSTR
AFX\AFXRICHEDIT.INC|RichEdit_GetText|RichEdit_GetText(BYVAL hRichEdit AS HWND) AS CWSTR
AFX\AFXRICHEDIT.INC|RichEdit_GetTextEx|RichEdit_GetTextEx(BYVAL hRichEdit AS HWND, BYVAL lpgtex AS GETTEXTEX PTR, BYVAL buffer AS ANY PTR) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetTextLength|RichEdit_GetTextLength(BYVAL hRichEdit AS HWND) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_GetTextLengthEx|RichEdit_GetTextLengthEx(BYVAL hRichEdit AS HWND, BYVAL lpgtex AS GETTEXTLENGTHEX PTR) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_GetTextMode|RichEdit_GetTextMode(BYVAL hRichEdit AS HWND) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetTextRange|RichEdit_GetTextRange(BYVAL hRichEdit AS HWND, BYVAL lptrg AS TEXTRANGE PTR) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetThumb|RichEdit_GetThumb(BYVAL hRichEdit AS HWND) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_GetTypographyOptions|RichEdit_GetTypographyOptions(BYVAL hRichEdit AS HWND) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetUndoName|RichEdit_GetUndoName(BYVAL hRichEdit AS HWND) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetWordBreakProc|RichEdit_GetWordBreakProc(BYVAL hRichEdit AS HWND) AS LONG_PTR
AFX\AFXRICHEDIT.INC|RichEdit_GetWordBreakProcEx|RichEdit_GetWordBreakProcEx(BYVAL hRichEdit AS HWND) AS LONG_PTR
AFX\AFXRICHEDIT.INC|RichEdit_GetWordWrapMode|RichEdit_GetWordWrapMode(BYVAL hRichEdit AS HWND) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetZoom|RichEdit_GetZoom(BYVAL hRichEdit AS HWND, BYVAL pzNum AS DWORD PTR, BYVAL pzDen AS DWORD PTR) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_HideSelection|RichEdit_HideSelection(BYVAL hRichEdit AS HWND, BYVAL fHide AS DWORD)
AFX\AFXRICHEDIT.INC|RichEdit_IsIME|RichEdit_IsIME(BYVAL hRichEdit AS HWND) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_LimitText|RichEdit_LimitText(BYVAL hRichEdit AS HWND, BYVAL chMax AS DWORD)
AFX\AFXRICHEDIT.INC|RichEdit_LineFromChar|RichEdit_LineFromChar(BYVAL hRichEdit AS HWND, BYVAL index AS DWORD) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_LineIndex|RichEdit_LineIndex(BYVAL hRichEdit AS HWND, BYVAL nLine AS LONG) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_LineLength|RichEdit_LineLength(BYVAL hRichEdit AS HWND, BYVAL index AS DWORD) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_LineScroll|RichEdit_LineScroll(BYVAL hRichEdit AS HWND, BYVAL y AS LONG) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_PasteSpecial|RichEdit_PasteSpecial(BYVAL hRichEdit AS HWND, BYVAL clpfmt AS DWORD, BYVAL lprps AS REPASTESPECIAL PTR)
AFX\AFXRICHEDIT.INC|RichEdit_PosFromChar|RichEdit_PosFromChar(BYVAL hRichEdit AS HWND, BYVAL pt AS POINTL PTR, BYVAL index as DWORD) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_Reconversion|RichEdit_Reconversion(BYVAL hRichEdit AS HWND) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_Redo|RichEdit_Redo(BYVAL hRichEdit AS HWND) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_ReplaceSel|RichEdit_ReplaceSel(BYVAL hRichEdit AS HWND, BYVAL bCanBeUndone AS LONG, BYVAL pwszText AS WSTRING PTR)
AFX\AFXRICHEDIT.INC|RichEdit_RequestResize|RichEdit_RequestResize(BYVAL hRichEdit AS HWND)
AFX\AFXRICHEDIT.INC|RichEdit_Scroll|RichEdit_Scroll(BYVAL hRichEdit AS HWND, BYVAL nAction AS LONG) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_ScrollCaret|RichEdit_ScrollCaret(BYVAL hRichEdit AS HWND)
AFX\AFXRICHEDIT.INC|RichEdit_SelectionType|RichEdit_SelectionType(BYVAL hRichEdit AS HWND) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetBidiOptions|RichEdit_SetBidiOptions(BYVAL hRichEdit AS HWND, BYVAL pOptions AS BIDIOPTIONS PTR) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetBkgndColor|RichEdit_SetBkgndColor(BYVAL hRichEdit AS HWND, BYVAL pSysColor AS DWORD, BYVAL pBkColor AS DWORD) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_SetCharFormat|RichEdit_SetCharFormat(BYVAL hRichEdit AS HWND, BYVAL chfmt AS DWORD, BYVAL pchfmt AS DWORD) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetCTFModeBias|RichEdit_SetCTFModeBias(BYVAL hRichEdit AS HWND, BYVAL nModeBias AS LONG) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetCTFOpenStatus|RichEdit_SetCTFOpenStatus(BYVAL hRichEdit AS HWND, BYVAL fTSFkbd AS LONG) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_SetEditStyle|RichEdit_SetEditStyle(BYVAL hRichEdit AS HWND, BYVAL fStyle AS LONG, BYVAL fMask AS LONG) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_SetEventMask|RichEdit_SetEventMask(BYVAL hRichEdit AS HWND, BYVAL fMask AS LONG) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetFontSize|RichEdit_SetFontSize(BYVAL hRichEdit AS HWND, BYVAL ptsize AS LONG) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetHyphenateInfo|RichEdit_SetHyphenateInfo(BYVAL hRichEdit AS HWND, BYVAL phinfo AS HYPHENATEINFO PTR)
AFX\AFXRICHEDIT.INC|RichEdit_SetIMEColor|RichEdit_SetIMEColor(BYVAL hRichEdit AS HWND, BYVAL pcompcolor AS COMPCOLOR PTR) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetIMEModeBias|RichEdit_SetIMEModeBias(BYVAL hRichEdit AS HWND, BYVAL nModeBias AS LONG) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetIMEOptions|RichEdit_SetIMEOptions(BYVAL hRichEdit AS HWND, BYVAL fCoop AS LONG, BYVAL fOptions AS LONG) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetLangOptions|RichEdit_SetLangOptions(BYVAL hRichEdit AS HWND, BYVAL lgoptions AS LONG) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_SetLimitText|RichEdit_SetLimitText(BYVAL hRichEdit AS HWND, BYVAL chMax AS DWORD)
AFX\AFXRICHEDIT.INC|RichEdit_SetMargins|RichEdit_SetMargins(BYVAL hRichEdit AS HWND, BYVAL nMargins AS LONG, BYVAL nWidth AS LONG)
AFX\AFXRICHEDIT.INC|RichEdit_SetModify|RichEdit_SetModify(BYVAL hRichEdit AS HWND, BYVAL fModify AS LONG)
AFX\AFXRICHEDIT.INC|RichEdit_SetOleCallback|RichEdit_SetOleCallback(BYVAL hRichEdit AS HWND, BYVAL pCallback AS ANY PTR) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetOptions|RichEdit_SetOptions(BYVAL hRichEdit AS HWND, BYVAL fCoop AS LONG, BYVAL fOptions AS LONG) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetPageRotate|RichEdit_SetPageRotate(BYVAL hRichEdit AS HWND, BYVAL txtlayout AS LONG) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetPalette|RichEdit_SetPalette(BYVAL hRichEdit AS HWND, BYVAL newPalette AS HPALETTE)
AFX\AFXRICHEDIT.INC|RichEdit_SetParaFormat|RichEdit_SetParaFormat(BYVAL hRichEdit AS HWND, BYVAL pfmt AS PARAFORMAT PTR) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetPasswordChar|RichEdit_SetPasswordChar(BYVAL hRichEdit AS HWND, BYVAL dwchar AS DWORD)
AFX\AFXRICHEDIT.INC|RichEdit_SetPunctuation|RichEdit_SetPunctuation(BYVAL hRichEdit AS HWND, BYVAL ptype AS LONG, BYVAL ppunct AS PUNCTUATION PTR) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetReadOnly|RichEdit_SetReadOnly(BYVAL hRichEdit AS HWND, BYVAL fReadOnly AS LONG) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetRect|RichEdit_SetRect(BYVAL hRichEdit AS HWND, BYVAL fCoord AS LONG, BYVAL prect AS RECT PTR)
AFX\AFXRICHEDIT.INC|RichEdit_SetRectNP|RichEdit_SetRectNP(BYVAL hRichEdit AS HWND, BYVAL fCoord AS LONG, BYVAL prect AS RECT PTR)
AFX\AFXRICHEDIT.INC|RichEdit_SetScrollPos|RichEdit_SetScrollPos(BYVAL hRichEdit AS HWND, BYVAL pt AS POINT PTR) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_SetSel|RichEdit_SetSel(BYVAL hRichEdit AS HWND, BYVAL nStart AS LONG, BYVAL nEnd AS LONG)
AFX\AFXRICHEDIT.INC|RichEdit_SetTabStops|RichEdit_SetTabStops(BYVAL hRichEdit AS HWND, BYVAL nTabs AS LONG, BYVAL rgTabStops AS LONG_PTR) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetTargetDevice|RichEdit_SetTargetDevice(BYVAL hRichEdit AS HWND, BYVAL hDC AS HDC, BYVAL lnwidth AS LONG) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetText|RichEdit_SetText(BYVAL hRichEdit AS HWND, BYVAL pwszText AS WSTRING PTR) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetTextExW|RichEdit_SetTextExW(BYVAL hRichEdit AS HWND, BYVAL pstex AS SETTEXTEX PTR, BYVAL pwszText AS WSTRING PTR) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_SetTextMode|RichEdit_SetTextMode(BYVAL hRichEdit AS HWND, BYVAL pvalues AS LONG) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetTypographyOptions|RichEdit_SetTypographyOptions(BYVAL hRichEdit AS HWND, BYVAL pto AS LONG, BYVAL fMask AS LONG) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetUndoLimit|RichEdit_SetUndoLimit(BYVAL hRichEdit AS HWND, BYVAL maxactions AS DWORD) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_SetWordBreakProc|RichEdit_SetWordBreakProc(BYVAL hRichEdit AS HWND, BYVAL pfn AS EDITWORDBREAKPROC)
AFX\AFXRICHEDIT.INC|RichEdit_SetWordBreakProcEx|RichEdit_SetWordBreakProcEx(BYVAL hRichEdit AS HWND, BYVAL pfn AS EDITWORDBREAKPROC) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_SetWordWrapMode|RichEdit_SetWordWrapMode(BYVAL hRichEdit AS HWND, BYVAL pvalues AS LONG) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetZoom|RichEdit_SetZoom(BYVAL hRichEdit AS HWND, BYVAL zNum AS DWORD, BYVAL zDen AS DWORD) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_ShowScrollBar|RichEdit_ShowScrollBar(BYVAL hRichEdit AS HWND, BYVAL nScrollBar AS DWORD, BYVAL fShow AS LONG)
AFX\AFXRICHEDIT.INC|RichEdit_StopGroupTyping|RichEdit_StopGroupTyping(BYVAL hRichEdit AS HWND) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_StreamIn|RichEdit_StreamIn(BYVAL hRichEdit AS HWND, BYVAL psf AS LONG, BYVAL pedst AS EDITSTREAM PTR) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_StreamOut|RichEdit_StreamOut(BYVAL hRichEdit AS HWND, BYVAL psf AS LONG, BYVAL pedst AS EDITSTREAM PTR) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_Undo|RichEdit_Undo(BYVAL hRichEdit AS HWND) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_EnumFontFamProcW|RichEdit_EnumFontFamProcW( BYVAL lpelf AS ENUMLOGFONTW PTR, BYVAL lpntm AS NEWTEXTMETRICW PTR, BYVAL FontType AS LONG, BYVAL lplf AS LOGFONTW PTR ) AS LONG
AFX\AFXRICHEDIT.INC|RichEdit_SetFontW|RichEdit_SetFontW( BYVAL hRichEdit AS HWND, BYREF wszFaceName AS WSTRING, BYVAL ptsize AS LONG ) AS LRESULT
AFX\AFXRICHEDIT.INC|RichEdit_LoadRtfFromFileCallback|RichEdit_LoadRtfFromFileCallback( BYVAL hFile AS HANDLE , BYVAL lpBuff AS BYTE PTR , BYVAL cb AS LONG , BYVAL pcb AS LONG PTR ) AS UINT
AFX\AFXRICHEDIT.INC|RichEdit_LoadRtfFromFileW|RichEdit_LoadRtfFromFileW( BYVAL hRichEdit AS HWND , BYREF wszFileName AS WSTRING ) AS BOOLEAN
AFX\AFXRICHEDIT.INC|RichEdit_LoadRtfFromResourceCallback|RichEdit_LoadRtfFromResourceCallback( BYVAL pCustData AS AFX_RICHEDIT_CUSTOMDATA PTR , BYVAL lpBuff AS BYTE PTR , BYVAL cb AS LONG , BYVAL pcb AS LONG PTR ) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_LoadRtfFromResourceW|RichEdit_LoadRtfFromResourceW( BYVAL hRichEdit AS HWND , BYVAL hInstance AS HINSTANCE , BYREF wszResourceName AS WSTRING ) AS BOOLEAN
AFX\AFXRICHEDIT.INC|RichEdit_GetTextCallback|RichEdit_GetTextCallback( BYVAL dwCookie AS DWORD_PTR , BYVAL pbBuff AS BYTE PTR , BYVAL cb AS LONG , BYVAL pcb AS LONG PTR ) AS DWORD
AFX\AFXRICHEDIT.INC|RichEdit_GetRtfText|RichEdit_GetRtfText(BYVAL hRichEdit AS HWND) AS STRING
AFX\AFXSAPI.INC|AfxSpGetVoices|AfxSpGetVoices() AS CWSTR
AFX\AFXSAPI.INC|AfxSpSetVoice|AfxSpSetVoice(BYREF wszVoice AS WSTRING) AS HRESULT
AFX\AFXSTR.INC|AfxStrUCase|AfxStrUCase(BYVAL pwszStr AS WSTRING PTR, BYVAL pwszLocaleName AS WSTRING PTR = LOCALE_NAME_USER_DEFAULT, BYVAL dwMapFlags AS DWORD = 0) AS CWSTR
AFX\AFXSTR.INC|AfxStrLCase|AfxStrLCase(BYVAL pwszStr AS WSTRING PTR, BYVAL pwszLocaleName AS WSTRING PTR = LOCALE_NAME_USER_DEFAULT, BYVAL dwMapFlags AS DWORD = 0) AS CWSTR
AFX\AFXSTR.INC|AfxUcode|AfxUcode(BYREF ansiStr AS CONST STRING, BYVAL nCodePage AS LONG = 0) AS CWSTR
AFX\AFXSTR.INC|AfxAcode|AfxAcode(BYVAL pwszStr AS WSTRING PTR, BYVAL nCodePage AS LONG = 0) AS STRING
AFX\AFXSTR.INC|AfxStrRemove|AfxStrRemove OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrRemoveI|AfxStrRemoveI(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrRemove|AfxStrRemove OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYREF wszDelim1 AS CONST WSTRING, BYREF wszDelim2 AS CONST WSTRING, BYVAL fRemoveAll AS BOOLEAN = FALSE) AS CWSTR
AFX\AFXSTR.INC|AfxStrRemove|AfxStrRemove OVERLOAD(BYVAL nStart AS LONG = 1, BYREF wszMainStr AS CONST WSTRING, BYREF wszDelim1 AS CONST WSTRING, BYREF wszDelim2 AS CONST WSTRING, BYVAL fRemoveAll AS BOOLEAN = FALSE) AS CWSTR
AFX\AFXSTR.INC|AfxStrRemoveAny|AfxStrRemoveAny(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrRemoveAnyI|AfxStrRemoveAnyI(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrReplace|AfxStrReplace OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING, BYREF wszReplaceWith AS WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrReplaceI|AfxStrReplaceI(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING, BYREF wszReplaceWith AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrReplaceAny|AfxStrReplaceAny(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING, BYREF wszReplaceWith AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrReplaceAnyI|AfxStrReplaceAnyI(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING, BYREF wszReplaceWith AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrReverse|AfxStrReverse(BYREF wszMainStr AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrExtract|AfxStrExtract OVERLOAD(BYVAL nStart AS LONG = 1, BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrExtractI|AfxStrExtractI(BYVAL nStart AS LONG = 1, BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrExtract|AfxStrExtract OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYREF wszDelim1 AS CONST WSTRING, BYREF wszDelim2 AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrExtract|AfxStrExtract OVERLOAD(BYVAL nStart AS LONG = 1, BYREF wszMainStr AS CONST WSTRING, BYREF wszDelim1 AS CONST WSTRING, BYREF wszDelim2 AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrExtractAny|AfxStrExtractAny(BYVAL nStart AS LONG = 1, BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrExtractAnyI|AfxStrExtractAnyI(BYVAL nStart AS LONG = 1, BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrRemain|AfxStrRemain(BYREF wszMainStr AS WSTRING, BYREF wszMatchStr AS CONST WSTRING, BYVAL nStart AS LONG = 1) AS CWSTR
AFX\AFXSTR.INC|AfxStrRemainI|AfxStrRemainI(BYREF wszMainStr AS WSTRING, BYREF wszMatchStr AS CONST WSTRING, BYVAL nStart AS LONG = 1) AS CWSTR
AFX\AFXSTR.INC|AfxStrRemainAny|AfxStrRemainAny(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS WSTRING, BYVAL nStart AS LONG = 1) AS CWSTR
AFX\AFXSTR.INC|AfxStrRemainAnyI|AfxStrRemainAnyI(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING, BYVAL nStart AS LONG = 1) AS CWSTR
AFX\AFXSTR.INC|AfxStrTally|AfxStrTally(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS LONG
AFX\AFXSTR.INC|AfxStrTallyI|AfxStrTallyI(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS LONG
AFX\AFXSTR.INC|AfxStrTallyAny|AfxStrTallyAny(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS LONG
AFX\AFXSTR.INC|AfxStrTallyAnyI|AfxStrTallyAnyI(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS LONG
AFX\AFXSTR.INC|AfxStrVerify|AfxStrVerify(BYVAL nStart AS LONG, BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS LONG
AFX\AFXSTR.INC|AfxStrVerifyI|AfxStrVerifyI(BYVAL nStart AS LONG, BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS LONG
AFX\AFXSTR.INC|AfxStrLSet|AfxStrLSet(BYREF wszMainStr AS CONST WSTRING, BYVAL nStringLength AS LONG, BYREF wszPadCharacter AS CONST WSTRING = "#") AS CWSTR
AFX\AFXSTR.INC|AfxStrRSet|AfxStrRSet(BYREF wszMainStr AS CONST WSTRING, BYVAL nStringLength AS LONG, BYREF wszPadCharacter AS CONST WSTRING = "#") AS CWSTR
AFX\AFXSTR.INC|AfxStrCSet|AfxStrCSet(BYREF wszMainStr AS CONST WSTRING, BYVAL nStringLength AS LONG, BYREF wszPadCharacter AS CONST WSTRING = "#") AS CWSTR
AFX\AFXSTR.INC|AfxStrPathName|AfxStrPathName(BYREF wszOption AS CONST WSTRING, BYREF wszFileSpec AS WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrRepeat|AfxStrRepeat(BYVAL nCount AS LONG, BYREF wszMainStr AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrClipLeft|AfxStrClipLeft(BYREF wszMainStr AS CONST WSTRING, BYVAL nCount AS LONG) AS CWSTR
AFX\AFXSTR.INC|AfxStrClipRight|AfxStrClipRight(BYREF wszMainStr AS CONST WSTRING, BYVAL nCount AS LONG) AS CWSTR
AFX\AFXSTR.INC|AfxStrClipMid|AfxStrClipMid(BYREF wszMainStr AS CONST WSTRING, BYVAL nStart AS LONG, BYVAL nCount AS LONG) AS CWSTR
AFX\AFXSTR.INC|AfxStrWrap|AfxStrWrap OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYREF wszLeftChar AS CONST WSTRING, BYREF wszRightChar AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrWrap|AfxStrWrap OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYREF wszChar AS CONST WSTRING = CHR(34)) AS CWSTR
AFX\AFXSTR.INC|AfxStrUnWrap|AfxStrUnWrap OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYREF wszLeftChar AS CONST WSTRING, BYREF wszRightChar AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrUnWrap|AfxStrUnWrap OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYREF wszChar AS CONST WSTRING = CHR(34)) AS CWSTR
AFX\AFXSTR.INC|AfxStrDelete|AfxStrDelete(BYREF wszMainStr AS CONST WSTRING, BYVAL nStart AS LONG, BYVAL nCount AS LONG) AS CWSTR
AFX\AFXSTR.INC|AfxStrInsert|AfxStrInsert(BYREF wszMainStr AS CONST WSTRING, BYREF wszInsertString AS WSTRING, BYVAL nPosition AS LONG) AS CWSTR
AFX\AFXSTR.INC|AfxStrRetain|AfxStrRetain(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrRetainI|AfxStrRetainI(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrRetainAny|AfxStrRetainAny(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxStrRetainAnyI|AfxStrRetainAnyI(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS CWSTR
AFX\AFXSTR.INC|AfxIsNumeric|AfxIsNumeric(BYREF c AS CONST WSTRING) AS BOOLEAN
AFX\AFXSTR.INC|AfxStrShrink|AfxStrShrink(BYREF wszMainStr AS CONST WSTRING, BYREF wszMask AS CONST WSTRING = "#") AS CWSTR
AFX\AFXSTR.INC|AfxStrParseCount|AfxStrParseCount(BYREF wszMainStr AS CONST WSTRING, BYREF wszDelimiter AS CONST WSTRING = "#") AS LONG
AFX\AFXSTR.INC|AfxStrParseCountAny|AfxStrParseCountAny(BYREF wszMainStr AS CONST WSTRING, BYREF wszDelimiter AS CONST WSTRING = "#") AS LONG
AFX\AFXSTR.INC|AfxStrParse|AfxStrParse OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYREF wszDelimiter AS CONST WSTRING, BYVAL nPosition AS LONG, BYVAL bIsAny AS BOOLEAN, BYVAL nLenDelimiter AS LONG) AS CWSTR
AFX\AFXSTR.INC|AfxStrParse|AfxStrParse OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYVAL nPosition AS LONG = 1, BYREF wszDelimiter AS CONST WSTRING = "#") AS CWSTR
AFX\AFXSTR.INC|AfxStrParseAny|AfxStrParseAny(BYREF wszMainStr AS CONST WSTRING, BYVAL nPosition AS LONG = 1, BYREF wszDelimiter AS CONST WSTRING = "#") AS CWSTR
AFX\AFXSTR.INC|AfxStrSpn|AfxStrSpn(BYREF wszText AS CONST WSTRING, BYREF wszSet AS CONST WSTRING) AS LONG
AFX\AFXSTR.INC|AfxStrFormatByteSize|AfxStrFormatByteSize(BYVAL ull AS ULONGLONG) AS CWSTR
AFX\AFXSTR.INC|AfxStrFormatKBSize|AfxStrFormatKBSize(BYVAL ull AS ULONGLONG) AS CWSTR
AFX\AFXSTR.INC|AfxStrFromTimeInterval|AfxStrFromTimeInterval(BYVAL dwTimeMS AS DWORD, BYVAL digits AS LONG) AS CWSTR
AFX\AFXSTR.INC|AfxCryptBinaryToStringA|AfxCryptBinaryToStringA(BYVAL pbBinary AS CONST UBYTE PTR, BYVAL cbBinary AS DWORD, BYVAL dwFlags AS DWORD, BYVAL pszString AS LPSTR, BYVAL pcchString AS DWORD PTR) AS WINBOOL
AFX\AFXSTR.INC|AfxCryptBinaryToStringW|AfxCryptBinaryToStringW(BYVAL pbBinary AS CONST UBYTE PTR, BYVAL cbBinary AS DWORD, BYVAL dwFlags AS DWORD, BYVAL pszString AS LPWSTR, BYVAL pcchString AS DWORD PTR) AS WINBOOL
AFX\AFXSTR.INC|AfxBase64Encode|AfxBase64Encode(BYREF strData AS STRING) AS STRING
AFX\AFXSTR.INC|AfxCryptStringToBinaryA|AfxCryptStringToBinaryA(BYVAL pszString AS LPCSTR, BYVAL cchString AS DWORD, BYVAL dwFlags AS DWORD, BYVAL pbBinary AS UBYTE PTR, BYVAL pcbBinary AS DWORD PTR, BYVAL pdwSkip AS DWORD PTR, BYVAL pdwFlags AS DWORD PTR) AS WINBOOL
AFX\AFXSTR.INC|AfxCryptStringToBinaryW|AfxCryptStringToBinaryW(BYVAL pwszString AS LPCWSTR, BYVAL cchString AS DWORD, BYVAL dwFlags AS DWORD, BYVAL pbBinary AS UBYTE PTR, BYVAL pcbBinary AS DWORD PTR, BYVAL pdwSkip AS DWORD PTR, BYVAL pdwFlags AS DWORD PTR) AS WINBOOL
AFX\AFXSTR.INC|AfxBase64Decode|AfxBase64Decode(BYREF strData AS STRING) AS STRING
AFX\AFXTIME.INC|AfxLocalFileTime|AfxLocalFileTime() AS FILETIME
AFX\AFXTIME.INC|AfxSystemFileTime|AfxSystemFileTime() AS FILETIME
AFX\AFXTIME.INC|AfxLocalSystemTime|AfxLocalSystemTime() AS SYSTEMTIME
AFX\AFXTIME.INC|AfxSystemSystemTime|AfxSystemSystemTime() AS SYSTEMTIME
AFX\AFXTIME.INC|AfxLocalYear|AfxLocalYear() AS WORD
AFX\AFXTIME.INC|AfxSystemYear|AfxSystemYear() AS WORD
AFX\AFXTIME.INC|AfxLocalMonth|AfxLocalMonth() AS WORD
AFX\AFXTIME.INC|AfxSystemMonth|AfxSystemMonth() AS WORD
AFX\AFXTIME.INC|AfxLocalDay|AfxLocalDay() AS WORD
AFX\AFXTIME.INC|AfxSystemDay|AfxSystemDay() AS WORD
AFX\AFXTIME.INC|AfxLocalHour|AfxLocalHour() AS WORD
AFX\AFXTIME.INC|AfxSystemHour|AfxSystemHour() AS WORD
AFX\AFXTIME.INC|AfxMonthName|AfxMonthName(BYVAL nMonth AS LONG, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxLocalMonthName|AfxLocalMonthName(BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxSystemMonthName|AfxSystemMonthName(BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxShortMonthName|AfxShortMonthName(BYVAL nMonth AS LONG, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxLocalShortMonthName|AfxLocalShortMonthName(BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxSystemShortMonthName|AfxSystemShortMonthName(BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxLocalDayName|AfxLocalDayName(BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxSystemDayName|AfxSystemDayName(BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxLocalDayShortName|AfxLocalDayShortName(BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxSystemDayShortName|AfxSystemDayShortName(BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxLocalDayOfWeek|AfxLocalDayOfWeek() AS WORD
AFX\AFXTIME.INC|AfxSystemDayOfWeek|AfxSystemDayOfWeek() AS WORD
AFX\AFXTIME.INC|AfxLocalDayOfWeekName|AfxLocalDayOfWeekName(BYVAL nDay AS LONG, BYVAL nMonth AS LONG, BYVAL nYear AS LONG, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxLocalDayOfWeekShortName|AfxLocalDayOfWeekShortName(BYVAL nDay AS LONG, BYVAL nMonth AS LONG, BYVAL nYear AS LONG, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxLocalDateStr|AfxLocalDateStr(BYREF wszMask AS WSTRING, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxLocalTimeStr|AfxLocalTimeStr(BYREF wszMask AS WSTRING, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxAstroDay|AfxAstroDay(BYVAL nDay AS LONG, BYVAL nMonth AS LONG, BYVAL nYear AS LONG) AS LONG
AFX\AFXTIME.INC|AfxAstroDayOfWeek|AfxAstroDayOfWeek(BYVAL nDay AS LONG, BYVAL nMonth AS LONG, BYVAL nYear AS LONG) AS LONG
AFX\AFXTIME.INC|AfxGregorianToJulian|AfxGregorianToJulian(BYVAL nDay AS LONG, BYVAL nMonth AS LONG, BYVAL nYear AS LONG) AS LONG
AFX\AFXTIME.INC|AfxDateDiff|AfxDateDiff(BYVAL nDay1 AS LONG, BYVAL nMonth1 AS LONG, BYVAL nYear1 AS LONG, BYVAL nDay2 AS LONG, BYVAL nMonth2 AS LONG, BYVAL nYear2 AS LONG) AS LONG
AFX\AFXTIME.INC|AfxDateAddDays|AfxDateAddDays(BYVAL nDay AS LONG, BYVAL nMonth AS LONG, BYVAL nYear AS LONG, BYVAL nDays AS LONG) AS LONG
AFX\AFXTIME.INC|AfxWeekOne|AfxWeekOne(BYVAL nYear AS LONG) AS LONG
AFX\AFXTIME.INC|AfxWeekNumber|AfxWeekNumber(BYVAL nDay AS LONG, BYVAL nMonth AS LONG, BYVAL nYear AS LONG) AS LONG
AFX\AFXTIME.INC|AfxWeeksInYear|AfxWeeksInYear(BYVAL nYear AS LONG) AS LONG
AFX\AFXTIME.INC|AfxIsLeapYear|AfxIsLeapYear(BYVAL nYear AS LONG) AS BOOLEAN
AFX\AFXTIME.INC|AfxDaysInMonth|AfxDaysInMonth(BYVAL nMonth AS LONG, BYVAL nYear AS LONG) AS LONG
AFX\AFXTIME.INC|AfxWeeksInMonth|AfxWeeksInMonth(BYVAL nMonth AS LONG, BYVAL nYear AS LONG) AS LONG
AFX\AFXTIME.INC|AfxDaysInYear|AfxDaysInYear(BYVAL nYear AS LONG) AS LONG
AFX\AFXTIME.INC|AfxIsFirstDayOfMonth|AfxIsFirstDayOfMonth() AS BOOLEAN
AFX\AFXTIME.INC|AfxIsLastDayOfMonth|AfxIsLastDayOfMonth() AS BOOLEAN
AFX\AFXTIME.INC|AfxJulianDayOfWeek|AfxJulianDayOfWeek(BYVAL nJulian AS LONG) AS LONG
AFX\AFXTIME.INC|AfxJulianToGregorian|AfxJulianToGregorian(BYVAL nJulian AS LONG, BYREF wDay AS WORD, BYREF wMonth AS WORD, BYREF wYear AS WORD)
AFX\AFXTIME.INC|AfxJulianToGregorianStr|AfxJulianToGregorianStr(BYREF wszMask AS WSTRING, BYVAL nJulian AS LONG, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxDayOfYear|AfxDayOfYear(BYVAL nDay AS LONG, BYVAL nMonth AS LONG, BYVAL nYear AS LONG) AS LONG
AFX\AFXTIME.INC|AfxDaysBetween|AfxDaysBetween(BYVAL nDay1 AS LONG, BYVAL nMonth1 AS LONG, BYVAL nYear1 AS LONG, BYVAL nDay2 AS LONG, BYVAL nMonth2 AS LONG, BYVAL nYear2 AS LONG) AS LONG
AFX\AFXTIME.INC|AfxLongDate|AfxLongDate(BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxShortDate|AfxShortDate(BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxQuadDateTime|AfxQuadDateTime() AS ULONGLONG
AFX\AFXTIME.INC|AfxQuadDateToStr|AfxQuadDateToStr(BYREF wszMask AS WSTRING, BYVAL ullTime AS ULONGLONG, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxQuadTimeToStr|AfxQuadTimeToStr(BYREF wszMask AS WSTRING, BYVAL ullTime AS ULONGLONG, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxTimeZoneIsDaylightSavingTime|AfxTimeZoneIsDaylightSavingTime() AS BOOLEAN
AFX\AFXTIME.INC|AfxTimeZoneBias|AfxTimeZoneBias() AS DWORD
AFX\AFXTIME.INC|AfxTimeZoneDaylightBias|AfxTimeZoneDaylightBias() AS DWORD
AFX\AFXTIME.INC|AfxTimeZoneStandardName|AfxTimeZoneStandardName() AS CWSTR
AFX\AFXTIME.INC|AfxTimeZoneDaylightName|AfxTimeZoneDaylightName() AS CWSTR
AFX\AFXTIME.INC|AfxTimeZoneDaylightDay|AfxTimeZoneDaylightDay() AS WORD
AFX\AFXTIME.INC|AfxTimeZoneDaylightDayOfWeek|AfxTimeZoneDaylightDayOfWeek() AS WORD
AFX\AFXTIME.INC|AfxTimeZoneDaylightHour|AfxTimeZoneDaylightHour() AS WORD
AFX\AFXTIME.INC|AfxTimeZoneDaylightMonth|AfxTimeZoneDaylightMonth() AS WORD
AFX\AFXTIME.INC|AfxLocalVariantTime|AfxLocalVariantTime() AS DATE_
AFX\AFXTIME.INC|AfxSystemTimeToVariantTime|AfxSystemTimeToVariantTime(BYREF ST AS SYSTEMTIME) AS DATE_
AFX\AFXTIME.INC|AfxVariantTimeToSystemTime|AfxVariantTimeToSystemTime(BYVAL dt AS DATE_) AS SYSTEMTIME
AFX\AFXTIME.INC|AfxFileTimeToVariantTime|AfxFileTimeToVariantTime(BYREF FT AS FILETIME) AS DATE_
AFX\AFXTIME.INC|AfxVariantDateTimeToStr|AfxVariantDateTimeToStr(BYVAL vbDate AS DATE_, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT, BYVAL dwFlags AS DWORD = 0) AS CWSTR
AFX\AFXTIME.INC|AfxVariantDateToStr|AfxVariantDateToStr(BYVAL vbDate AS DATE_, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxVariantTimeToStr|AfxVariantTimeToStr(BYVAL vbDate AS DATE_, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxFileTimeToDateStr|AfxFileTimeToDateStr(BYREF FT AS FILETIME, BYREF wszMask AS WSTRING, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxFileTimeToTimeStr|AfxFileTimeToTimeStr(BYREF FT AS FILETIME, BYREF wszMask AS WSTRING, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxSystemTimeToDateStr|AfxSystemTimeToDateStr(BYREF ST AS SYSTEMTIME, BYREF wszMask AS WSTRING, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxSystemTimeToTimeStr|AfxSystemTimeToTimeStr(BYREF ST AS SYSTEMTIME, BYREF wszMask AS WSTRING, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CWSTR
AFX\AFXTIME.INC|AfxTime64ToFileTime|AfxTime64ToFileTime(BYVAL t64 AS LONGLONG) AS FILETIME
AFX\AFXTIME.INC|AfxFileTimeToTime64|AfxFileTimeToTime64(BYREF ft AS FILETIME) AS LONGLONG
AFX\AFXTIME.INC|AfxSystemTimeToTime64|AfxSystemTimeToTime64(BYREF st AS SYSTEMTIME) AS LONGLONG
AFX\AFXTIME.INC|AfxTime64ToSystemTime|AfxTime64ToSystemTime(BYVAL t64 AS LONGLONG) AS SYSTEMTIME
AFX\AFXTIME.INC|AfxGmtTime64|AfxGmtTime64(BYVAL t64 AS LONGLONG) AS tm
AFX\AFXTIME.INC|AfxLocalTime64|AfxLocalTime64(BYVAL t64 AS LONGLONG) AS tm
AFX\AFXTIME.INC|AfxMakeTime64|AfxMakeTime64(BYREF _tm AS tm) AS LONGLONG
AFX\AFXTIME.INC|AfxTime64|AfxTime64() AS LONGLONG
AFX\AFXTIME.INC|AfxIsValidFILETIME|AfxIsValidFILETIME(BYREF ft AS FILETIME) AS BOOLEAN
AFX\AFXWIN.INC|AfxMsg|AfxMsg OVERLOAD(BYVAL pwszText AS WSTRING PTR, BYREF wszCaption AS WSTRING = "#######", BYVAL uType AS DWORD = 0) AS LONG
AFX\AFXWIN.INC|AfxMsg|AfxMsg OVERLOAD(BYREF cws AS CWSTR, BYREF wszCaption AS WSTRING = "#######", BYVAL uType AS DWORD = 0) AS LONG
AFX\AFXWIN.INC|AfxMsg|AfxMsg OVERLOAD(BYREF cbs AS CBSTR, BYREF wszCaption AS WSTRING = "#######", BYVAL uType AS DWORD = 0) AS LONG
AFX\AFXWIN.INC|AfxMsg|AfxMsg OVERLOAD(BYVAL nValue AS DOUBLE, BYREF wszCaption AS WSTRING = "#######", BYVAL uType AS DWORD = 0) AS LONG
AFX\AFXWIN.INC|AfxCommand|AfxCommand(BYVAL nIndex AS LONG = -1) AS CWSTR
AFX\AFXWIN.INC|AfxGetWinErrMsg|AfxGetWinErrMsg(BYVAL dwError AS DWORD) AS CWSTR
AFX\AFXWIN.INC|AfxDoEvents|AfxDoEvents(BYVAL hwnd AS HWND = NULL)
AFX\AFXWIN.INC|AfxPumpMessages|
AFX\AFXWIN.INC|AfxWindowsVersion|AfxWindowsVersion() AS LONG
AFX\AFXWIN.INC|AfxWindowsPlatform|AfxWindowsPlatform() AS LONG
AFX\AFXWIN.INC|AfxWindowsBuild|AfxWindowsBuild() AS LONG
AFX\AFXWIN.INC|AfxIsPlatformNT|AfxIsPlatformNT() AS BOOLEAN
AFX\AFXWIN.INC|AfxGetFileVersion|AfxGetFileVersion(BYVAL pwszFileName AS WSTRING PTR) AS LONG
AFX\AFXWIN.INC|AfxComCtlVersion|AfxComCtlVersion() AS LONG
AFX\AFXWIN.INC|AfxGetWinDir|AfxGetWinDir() AS CWSTR
AFX\AFXWIN.INC|AfxGetUserName|AfxGetUserName() AS CWSTR
AFX\AFXWIN.INC|AfxGetComputerName|AfxGetComputerName() AS CWSTR
AFX\AFXWIN.INC|AfxGetExePath|AfxGetExePath() AS CWSTR
AFX\AFXWIN.INC|AfxGetExePathName|AfxGetExePathName() AS CWSTR
AFX\AFXWIN.INC|AfxGetExeFileName|AfxGetExeFileName() AS CWSTR
AFX\AFXWIN.INC|AfxGetExeFileNameX|AfxGetExeFileNameX() AS CWSTR
AFX\AFXWIN.INC|AfxGetExeFileExt|AfxGetExeFileExt() AS CWSTR
AFX\AFXWIN.INC|AfxGetExeFullPath|AfxGetExeFullPath() AS CWSTR
AFX\AFXWIN.INC|AfxGetFileName|AfxGetFileName(BYREF wszPath AS WSTRING) AS CWSTR
AFX\AFXWIN.INC|AfxGetFileNameX|AfxGetFileNameX(BYREF wszPath AS WSTRING) AS CWSTR
AFX\AFXWIN.INC|AfxGetFileExt|AfxGetFileExt(BYREF wszPath AS WSTRING) AS CWSTR
AFX\AFXWIN.INC|AfxGetCurDir|AfxGetCurDir() AS CWSTR
AFX\AFXWIN.INC|AfxGetLongPathName|AfxGetLongPathName(BYREF wszPath AS WSTRING) AS CWSTR
AFX\AFXWIN.INC|AfxGetShortPathName|AfxGetShortPathName(BYREF wszPath AS WSTRING) AS CWSTR
AFX\AFXWIN.INC|AfxGetPathName|AfxGetPathName(BYREF wszPath AS WSTRING) AS CWSTR
AFX\AFXWIN.INC|AfxGetFolderName|AfxGetFolderName(BYREF wszPath AS WSTRING) AS CWSTR
AFX\AFXWIN.INC|AfxGetSystemDllPath|AfxGetSystemDllPath(BYREF wszDllName AS WSTRING) AS CWSTR
AFX\AFXWIN.INC|AfxGetPathFromProcessId|AfxGetPathFromProcessId(BYVAL dwProcessId AS DWORD) AS CWSTR
AFX\AFXWIN.INC|AfxGetPathFromWindowHandle|AfxGetPathFromWindowHandle(BYVAL hwnd AS HWND) AS CWSTR
AFX\AFXWIN.INC|AfxGetKnowFolderPath|AfxGetKnowFolderPath(BYVAL rfid AS CONST KNOWNFOLDERID CONST PTR, BYVAL dwFlags AS DWORD = 0, BYVAL hToken AS HANDLE = NULL) AS CWSTR
AFX\AFXWIN.INC|AfxGetSpecialFolderLocation|AfxGetSpecialFolderLocation(BYVAL nFolder AS LONG) AS CWSTR
AFX\AFXWIN.INC|AfxControlRunDLL|AfxControlRunDLL(BYVAL hwnd AS HWND, BYVAL hInst AS HINSTANCE, BYVAL cmd AS WSTRING PTR, BYVAL nCmdShow AS LONG) AS BOOLEAN
AFX\AFXWIN.INC|AfxSaveTempFile|AfxSaveTempFile(BYVAL pwszBuffer AS WSTRING PTR, BYREF wszExtension AS WSTRING) AS CWSTR
AFX\AFXWIN.INC|AfxGetInternetExplorerVersion|AfxGetInternetExplorerVersion() AS SINGLE
AFX\AFXWIN.INC|AfxGetDefaultBrowserPath|AfxGetDefaultBrowserPath() AS CWSTR
AFX\AFXWIN.INC|AfxGetDefaultBrowserName|AfxGetDefaultBrowserName() AS CWSTR
AFX\AFXWIN.INC|AfxEnumThreadWndProc|AfxEnumThreadWndProc(BYVAL hwnd AS HWND, BYVAL lParam AS LPARAM) AS WINBOOL
AFX\AFXWIN.INC|AfxGetBrowserHandle|AfxGetBrowserHandle(BYVAL pwszClassName AS WSTRING PTR) AS HWND
AFX\AFXWIN.INC|AfxGetInternetExplorerHandle|AfxGetInternetExplorerHandle() AS HWND
AFX\AFXWIN.INC|AfxGetFireFoxHandle|AfxGetFireFoxHandle() AS HWND
AFX\AFXWIN.INC|AfxGetGoogleChromeHandle|AfxGetGoogleChromeHandle() AS HWND
AFX\AFXWIN.INC|AfxGetDefaultMailClientPath|AfxGetDefaultMailClientPath() AS CWSTR
AFX\AFXWIN.INC|AfxGetDefaultMailClientName|AfxGetDefaultMailClientName() AS CWSTR
AFX\AFXWIN.INC|AfxBrowseForFolderProc|AfxBrowseForFolderProc(BYVAL hwnd AS HWND, BYVAL uMsg AS UINT, BYVAL wParam AS WPARAM, BYVAL lParam AS LPARAM) AS LRESULT
AFX\AFXWIN.INC|AfxBrowseForFolder|AfxBrowseForFolder(BYVAL hwnd AS HWND, BYVAL pwszTitle AS WSTRING PTR = NULL, BYVAL pwszStartFolder AS WSTRING PTR = NULL, BYVAL nFlags AS LONG = 0) AS CWSTR
AFX\AFXWIN.INC|AfxOpenFileDialog|AfxOpenFileDialog( BYVAL hwndOwner AS HWND , BYREF wszTitle AS WSTRING , BYREF wszFile AS WSTRING , BYREF wszInitialDir AS WSTRING , BYREF wszFilter AS WSTRING , BYREF wszDefExt AS WSTRING , BYVAL pdwFlags AS DWORD PTR = NULL , BYVAL pdwBufLen AS DWORD PTR = NULL ) AS CWSTR
AFX\AFXWIN.INC|AfxSaveFileDialog|AfxSaveFileDialog( BYVAL hwndOwner AS HWND , BYREF wszTitle AS WSTRING , BYREF wszFileName AS WSTRING , BYREF wszInitialDir AS WSTRING , BYREF wszFilter AS WSTRING , BYREF wszDefExt AS WSTRING , BYVAL pdwFlags AS DWORD PTR = NULL ) AS CWSTR
AFX\AFXWIN.INC|AfxShowSysInfo|AfxShowSysInfo(BYVAL hwnd AS HWND) AS BOOLEAN
AFX\AFXWIN.INC|AfxChooseColorDialog|AfxChooseColorDialog(BYVAL hParent AS HWND, BYVAL rgbDefaultColor AS COLORREF = 0, BYVAL lpCustColors AS COLORREF PTR = NULL) AS LONG
AFX\AFXWIN.INC|AfxGetMACAddress|AfxGetMACAddress() AS STRING
AFX\AFXWIN.INC|AfxGetWindowClassName|AfxGetWindowClassName(BYVAL hwnd AS HWND) AS CWSTR
AFX\AFXWIN.INC|AfxGetWindowText|AfxGetWindowText(BYVAL hwnd AS HWND) AS CWSTR
AFX\AFXWIN.INC|AfxGetWindowTextLength|AfxGetWindowTextLength(BYVAL hwnd AS HWND) AS LONG
AFX\AFXWIN.INC|AfxSetWindowText|AfxSetWindowText(BYVAL hwnd AS HWND, BYVAL pwszText AS WSTRING PTR) AS BOOLEAN
AFX\AFXWIN.INC|AfxGetWindowStyle|AfxGetWindowStyle(BYVAL hwnd AS HWND) AS DWORD
AFX\AFXWIN.INC|AfxGetWindowExStyle|AfxGetWindowExStyle(BYVAL hwnd AS HWND) AS DWORD
AFX\AFXWIN.INC|AfxSetWindowStyle|AfxSetWindowStyle(BYVAL hwnd AS HWND, BYVAL dwStyle AS DWORD) AS DWORD
AFX\AFXWIN.INC|AfxSetWindowExStyle|AfxSetWindowExStyle(BYVAL hwnd AS HWND, BYVAL dwExStyle AS DWORD) AS DWORD
AFX\AFXWIN.INC|AfxAddWindowStyle|AfxAddWindowStyle(BYVAL hwnd AS HWND, BYVAL dwStyle AS DWORD) AS DWORD
AFX\AFXWIN.INC|AfxAddWindowExStyle|AfxAddWindowExStyle(BYVAL hwnd AS HWND, BYVAL dwExStyle AS DWORD) AS DWORD
AFX\AFXWIN.INC|AfxRemoveWindowStyle|AfxRemoveWindowStyle(BYVAL hwnd AS HWND, BYVAL dwStyle AS DWORD) AS DWORD
AFX\AFXWIN.INC|AfxRemoveWindowExStyle|AfxRemoveWindowExStyle(BYVAL hwnd AS HWND, BYVAL dwExStyle AS DWORD) AS DWORD
AFX\AFXWIN.INC|AfxGetWindowRect|AfxGetWindowRect(BYVAL hwnd AS HWND) AS RECT
AFX\AFXWIN.INC|AfxGetWindowWidth|AfxGetWindowWidth(BYVAL hwnd AS HWND) AS LONG
AFX\AFXWIN.INC|AfxGetWindowHeight|AfxGetWindowHeight(BYVAL hwnd AS HWND) AS LONG
AFX\AFXWIN.INC|AfxGetWindowClientRect|AfxGetWindowClientRect(BYVAL hwnd AS HWND) AS RECT
AFX\AFXWIN.INC|AfxGetWindowClientWidth|AfxGetWindowClientWidth(BYVAL hwnd AS HWND) AS LONG
AFX\AFXWIN.INC|AfxGetWindowClientHeight|AfxGetWindowClientHeight(BYVAL hwnd AS HWND) AS LONG
AFX\AFXWIN.INC|AfxGetWorkAreaRect|AfxGetWorkAreaRect() AS RECT
AFX\AFXWIN.INC|AfxGetWorkAreaWidth|AfxGetWorkAreaWidth() AS LONG
AFX\AFXWIN.INC|AfxGetWorkAreaHeight|AfxGetWorkAreaHeight() AS LONG
AFX\AFXWIN.INC|AfxCenterWindow|AfxCenterWindow(BYVAL hwnd AS HWND = NULL, BYVAL hwndParent AS HWND = NULL)
AFX\AFXWIN.INC|AfxSetWindowClientSize|AfxSetWindowClientSize(BYVAL hwnd AS HWND, BYVAL nWidth AS LONG, BYVAL nHeight AS LONG, BYVAL rxRatio AS SINGLE = 1, BYVAL ryRatio AS SINGLE = 1)
AFX\AFXWIN.INC|AfxCenterControlH|AfxCenterControlH(BYVAL hCtrl AS HWND)
AFX\AFXWIN.INC|AfxCenterControlV|AfxCenterControlV(BYVAL hCtrl AS HWND)
AFX\AFXWIN.INC|AfxRedrawWindow|AfxRedrawWindow(BYVAL hwnd AS HWND)
AFX\AFXWIN.INC|AfxRedrawNonClientArea|AfxRedrawNonClientArea(BYVAL hwnd AS HWND) AS BOOLEAN
AFX\AFXWIN.INC|AfxForwardSizeMessage|AfxForwardSizeMessage(BYVAL hwnd AS HWND, BYVAL nResizeType AS DWORD, BYVAL nWidth AS LONG, BYVAL nHeight AS LONG) AS LRESULT
AFX\AFXWIN.INC|AfxSetWindowLocation|AfxSetWindowLocation(BYVAL hwnd AS HWND, BYVAL nLeft AS LONG, BYVAL nTop AS LONG) AS BOOLEAN
AFX\AFXWIN.INC|AfxSetWindowSize|AfxSetWindowSize(BYVAL hwnd AS HWND, BYVAL nWidth AS LONG, BYVAL nHeight AS LONG) AS BOOLEAN
AFX\AFXWIN.INC|AfxShowWindowState|AfxShowWindowState(BYVAL hwnd AS HWND, BYVAL nShowState AS LONG) AS BOOLEAN
AFX\AFXWIN.INC|AfxSetWindowIcon|AfxSetWindowIcon(BYVAL hwnd AS HWND, BYVAL nIconType AS LONG, BYVAL hIcon AS HICON) AS HICON
AFX\AFXWIN.INC|AfxForceVisibleDisplay|AfxForceVisibleDisplay(BYVAL hwnd AS HWND)
AFX\AFXWIN.INC|AfxGetTopLevelWindow|AfxGetTopLevelWindow(BYVAL hwnd AS HWND) AS HWND
AFX\AFXWIN.INC|AfxGetTopLevelParent|AfxGetTopLevelParent(BYVAL hwnd AS HWND) AS HWND
AFX\AFXWIN.INC|AfxGetFormHandle|AfxGetFormHandle(BYVAL hwnd AS HWND) AS HWND
AFX\AFXWIN.INC|AfxGetControlHandle_ChildEnumProc|AfxGetControlHandle_ChildEnumProc(BYVAL hwnd AS HWND, BYVAL lParam AS LPARAM) AS LONG
AFX\AFXWIN.INC|AfxGetControlHandle|AfxGetControlHandle(BYVAL hwnd AS HWND, BYVAL wCtrlID AS WORD) AS HWND
AFX\AFXWIN.INC|AfxGetTopEnabledWindow_EnumWindowsProc|AfxGetTopEnabledWindow_EnumWindowsProc(BYVAL hWnd AS HWND, BYVAL lParam AS LPARAM) AS LONG
AFX\AFXWIN.INC|AfxGetTopEnabledWindow|AfxGetTopEnabledWindow() AS HWND
AFX\AFXWIN.INC|AfxGethWndFromPID|AfxGethWndFromPID(BYVAL PID AS DWORD) AS HWND
AFX\AFXWIN.INC|AfxGetWindowLocation|AfxGetWindowLocation(BYVAL hwnd AS HWND, BYREF nLeft AS LONG, BYREF nTop AS LONG)
AFX\AFXWIN.INC|AfxSetDlgMsgResult|AfxSetDlgMsgResult(BYVAL hwnd AS HWND, BYVAL uMsg AS UINT, BYVAL result AS LONG) AS BOOLEAN
AFX\AFXWIN.INC|AfxGetDisplayPixelsWidth|AfxGetDisplayPixelsWidth() AS DWORD
AFX\AFXWIN.INC|AfxGetDisplayPixelsHeight|AfxGetDisplayPixelsHeight() AS DWORD
AFX\AFXWIN.INC|AfxGetDisplayBitsPerPixel|AfxGetDisplayBitsPerPixel() AS DWORD
AFX\AFXWIN.INC|AfxGetDisplayFrequency|AfxGetDisplayFrequency() AS DWORD
AFX\AFXWIN.INC|AfxSetProcessDPIAware|AfxSetProcessDPIAware() AS BOOLEAN
AFX\AFXWIN.INC|AfxIsProcessDPIAware|AfxIsProcessDPIAware() AS BOOLEAN
AFX\AFXWIN.INC|AfxUseDpiScaling|AfxUseDpiScaling() AS BOOLEAN
AFX\AFXWIN.INC|AfxLogPixelsX|AfxLogPixelsX() AS LONG
AFX\AFXWIN.INC|AfxLogPixelsY|AfxLogPixelsY() AS LONG
AFX\AFXWIN.INC|AfxScaleRatioX|AfxScaleRatioX() AS SINGLE
AFX\AFXWIN.INC|AfxScaleRatioY|AfxScaleRatioY() AS SINGLE
AFX\AFXWIN.INC|AfxScaleX|AfxScaleX(BYVAL cx AS SINGLE) AS SINGLE
AFX\AFXWIN.INC|AfxScaleY|AfxScaleY(BYVAL cy AS SINGLE) AS SINGLE
AFX\AFXWIN.INC|AfxUnscaleX|AfxUnscaleX(BYVAL cx AS SINGLE) AS SINGLE
AFX\AFXWIN.INC|AfxUnscaleY|AfxUnscaleY(BYVAL cy AS SINGLE) AS SINGLE
AFX\AFXWIN.INC|AfxIsResolutionAtLeast|AfxIsResolutionAtLeast(BYVAL cxMin AS LONG, BYVAL cyMin AS LONG) AS BOOLEAN
AFX\AFXWIN.INC|AfxIsDPIResolutionAtLeast|AfxIsDPIResolutionAtLeast(BYVAL cxMin AS LONG, BYVAL cyMin AS LONG) AS BOOLEAN
AFX\AFXWIN.INC|AfxGetMonitorLogicalWidth|AfxGetMonitorLogicalWidth(BYVAL hwnd AS HWND = NULL) AS DWORD
AFX\AFXWIN.INC|AfxGetMonitorLogicalHeight|AfxGetMonitorLogicalHeight(BYVAL hwnd AS HWND = NULL) AS DWORD
AFX\AFXWIN.INC|AfxGetMonitorHorizontalScaling|AfxGetMonitorHorizontalScaling(BYVAL hwnd AS HWND = NULL) AS DWORD
AFX\AFXWIN.INC|AfxGetMonitorVerticalScaling|AfxGetMonitorVerticalScaling(BYVAL hwnd AS HWND = NULL) AS DWORD
AFX\AFXWIN.INC|AfxLoadIconMetric|AfxLoadIconMetric(BYVAL hinst AS HINSTANCE, BYVAL pszName AS PCWSTR, BYVAL lims AS LONG, BYVAL phico AS HICON PTR) AS HRESULT
AFX\AFXWIN.INC|AfxHiMetricToPixelsX|AfxHiMetricToPixelsX(BYVAL hm AS LONG) AS LONG
AFX\AFXWIN.INC|AfxHiMetricToPixelsY|AfxHiMetricToPixelsY(BYVAL hm AS LONG) AS LONG
AFX\AFXWIN.INC|AfxPixelsToHiMetricX|AfxPixelsToHiMetricX(BYVAL cx AS LONG) AS LONG
AFX\AFXWIN.INC|AfxPixelsToHiMetricY|AfxPixelsToHiMetricY(BYVAL cy AS LONG) AS LONG
AFX\AFXWIN.INC|AfxPixelsToPointsX|AfxPixelsToPointsX(BYVAL pix AS LONG) AS LONG
AFX\AFXWIN.INC|AfxPixelsToPointsY|AfxPixelsToPointsY(BYVAL pix AS LONG) AS LONG
AFX\AFXWIN.INC|AfxPointsToPixelsX|AfxPointsToPixelsX(BYVAL pts AS LONG) AS LONG
AFX\AFXWIN.INC|AfxPointsToPixelsY|AfxPointsToPixelsY(BYVAL pts AS LONG) AS LONG
AFX\AFXWIN.INC|AfxPixelsToTwipsX|AfxPixelsToTwipsX(BYVAL nPixels AS LONG) AS LONG
AFX\AFXWIN.INC|AfxPixelsToTwipsY|AfxPixelsToTwipsY(BYVAL nPixels AS LONG) AS LONG
AFX\AFXWIN.INC|AfxTwipsToPixelsX|AfxTwipsToPixelsX(BYVAL nTwips AS LONG) AS LONG
AFX\AFXWIN.INC|AfxTwipsToPixelsY|AfxTwipsToPixelsY(BYVAL nTwips AS LONG) AS LONG
AFX\AFXWIN.INC|AfxTwipsPerPixelX|AfxTwipsPerPixelX() AS LONG
AFX\AFXWIN.INC|AfxTwipsPerPixelY|AfxTwipsPerPixelY() AS LONG
AFX\AFXWIN.INC|AfxPointSizeToDip|AfxPointSizeToDip(BYVAL ptsize AS SINGLE) AS SINGLE
AFX\AFXWIN.INC|AfxClearClipboard|AfxClearClipboard() AS LONG
AFX\AFXWIN.INC|AfxGetClipboardData|AfxGetClipboardData(BYVAL cfFormat AS DWORD) AS HGLOBAL
AFX\AFXWIN.INC|AfxSetClipboardData|AfxSetClipboardData(BYVAL cfFormat AS DWORD, BYVAL hData AS HANDLE) AS HANDLE
AFX\AFXWIN.INC|AfxGetClipboardText|AfxGetClipboardText() AS CWSTR
AFX\AFXWIN.INC|AfxSetClipboardText|AfxSetClipboardText(BYREF wszText AS WSTRING) AS HANDLE
AFX\AFXWIN.INC|AfxGetWindowFont|AfxGetWindowFont(BYVAL hwnd AS HWND) AS HFONT
AFX\AFXWIN.INC|AfxSetWindowFont|AfxSetWindowFont(BYVAL hwnd AS HWND, BYVAL hFont AS HFONT, BYVAL fRedraw AS LONG = CTRUE)
AFX\AFXWIN.INC|AfxGetWindowsFontInfo|AfxGetWindowsFontInfo(BYVAL nType AS LONG, BYVAL plfw AS LOGFONTW PTR) AS BOOLEAN
AFX\AFXWIN.INC|AfxGetWindowsFontPointSize|AfxGetWindowsFontPointSize(BYVAL nType AS LONG) AS LONG
AFX\AFXWIN.INC|AfxGetFontPointSize|AfxGetFontPointSize(BYVAL nHeight AS LONG) AS LONG
AFX\AFXWIN.INC|AfxGetFontHeight|AfxGetFontHeight(BYVAL nPointSize AS LONG) AS LONG
AFX\AFXWIN.INC|AfxModifyFontFaceName|AfxModifyFontFaceName(BYVAL hwnd AS HWND, BYREF wszNewFaceName AS WSTRING) AS HFONT
AFX\AFXWIN.INC|AfxModifyFontSettings|AfxModifyFontSettings(BYVAL hwnd AS HWND, BYVAL nSetting AS LONG, BYVAL nValue AS LONG) AS HFONT
AFX\AFXWIN.INC|AfxModifyFontHeight|AfxModifyFontHeight(BYVAL hwnd AS HWND, BYVAL nValue AS LONG) AS HFONT
AFX\AFXWIN.INC|AfxCreateFont|AfxCreateFont(BYREF wszFaceName AS WSTRING, BYVAL lPointSize AS LONG, BYVAL DPI AS LONG = 96, BYVAL lWeight AS LONG = 0, BYVAL bItalic AS UBYTE = FALSE, BYVAL bUnderline AS UBYTE = FALSE, BYVAL bStrikeOut AS UBYTE = FALSE, BYVAL bCharSet AS UBYTE = DEFAULT_CHARSET) AS HFONT
AFX\AFXWIN.INC|AfxCreateDIBSection|AfxCreateDIBSection(BYVAL hDC AS HDC, BYVAL nWidth AS DWORD, BYVAL nHeight AS DWORD, BYVAL bpp AS LONG = 0, BYVAL ppvBits AS ANY PTR PTR = NULL) AS HBITMAP
AFX\AFXWIN.INC|AfxDibLoadImage|AfxDibLoadImage(BYVAL pwszFileName AS WSTRING PTR) AS BITMAPFILEHEADER PTR
AFX\AFXWIN.INC|AfxDibSaveImage|AfxDibSaveImage(BYVAL pwszFileName AS WSTRING PTR, BYVAL pbmfh AS BITMAPFILEHEADER PTR) AS BOOLEAN
AFX\AFXWIN.INC|AfxGetBitmapWidth|AfxGetBitmapWidth(BYVAL hBitmap AS HBITMAP) AS LONG
AFX\AFXWIN.INC|AfxGetBitmapHeight|AfxGetBitmapHeight(BYVAL hBitmap AS HBITMAP) AS LONG
AFX\AFXWIN.INC|AfxCaptureDisplay|AfxCaptureDisplay() AS HBITMAP
AFX\AFXWIN.INC|AfxDrawBitmap|AfxDrawBitmap(BYVAL hDC AS HDC, BYVAL xStart AS LONG, BYVAL yStart AS LONG, BYVAL hBitmap AS HBITMAP) AS BOOLEAN
AFX\AFXWIN.INC|AfxFileExists|AfxFileExists(BYVAL pwszFileSpec AS WSTRING PTR) AS BOOLEAN
AFX\AFXWIN.INC|AfxDeleteFile|AfxDeleteFile(BYVAL pwszFileSpec AS WSTRING PTR) AS LONG
AFX\AFXWIN.INC|AfxFolderExists|AfxFolderExists(BYVAL pwszFileSpec AS WSTRING PTR) AS BOOLEAN
AFX\AFXWIN.INC|AfxIsFile|AfxIsFile(BYREF wszFileSpec AS WSTRING) AS BOOLEAN
AFX\AFXWIN.INC|AfxIsFolder|AfxIsFolder(BYREF wszFileSpec AS WSTRING) AS BOOLEAN
AFX\AFXWIN.INC|AfxIsSystemFile|AfxIsSystemFile(BYREF wszFileSpec AS WSTRING) AS BOOLEAN
AFX\AFXWIN.INC|AfxIsHiddenFile|AfxIsHiddenFile(BYREF wszFileSpec AS WSTRING) AS BOOLEAN
AFX\AFXWIN.INC|AfxIsReadOnlyFile|AfxIsReadOnlyFile(BYREF wszFileSpec AS WSTRING) AS BOOLEAN
AFX\AFXWIN.INC|AfxIsTemporaryFile|AfxIsTemporaryFile(BYREF wszFileSpec AS WSTRING) AS BOOLEAN
AFX\AFXWIN.INC|AfxIsNormalFile|AfxIsNormalFile(BYREF wszFileSpec AS WSTRING) AS BOOLEAN
AFX\AFXWIN.INC|AfxIsCompressedFile|AfxIsCompressedFile(BYREF wszFileSpec AS WSTRING) AS BOOLEAN
AFX\AFXWIN.INC|AfxIsEncryptedFile|AfxIsEncryptedFile(BYREF wszFileSpec AS WSTRING) AS BOOLEAN
AFX\AFXWIN.INC|AfxIsNotContentIndexedFile|AfxIsNotContentIndexedFile(BYREF wszFileSpec AS WSTRING) AS BOOLEAN
AFX\AFXWIN.INC|AfxIsOffLineFile|AfxIsOffLineFile(BYREF wszFileSpec AS WSTRING) AS BOOLEAN
AFX\AFXWIN.INC|AfxIsReparsePointFile|AfxIsReparsePointFile(BYREF wszFileSpec AS WSTRING) AS BOOLEAN
AFX\AFXWIN.INC|AfxIsSparseFile|AfxIsSparseFile(BYREF wszFileSpec AS WSTRING) AS BOOLEAN
AFX\AFXWIN.INC|AfxGetFileSize|AfxGetFileSize(BYREF wszFileSpec AS WSTRING) AS ULONGLONG
AFX\AFXWIN.INC|AfxGetFileCreationTime|AfxGetFileCreationTime(BYREF wszFileSpec AS WSTRING, BYVAL bUTC AS BOOLEAN = TRUE) AS FILETIME
AFX\AFXWIN.INC|AfxGetFileLastAccessTime|AfxGetFileLastAccessTime(BYREF wszFileSpec AS WSTRING, BYVAL bUTC AS BOOLEAN = TRUE) AS FILETIME
AFX\AFXWIN.INC|AfxGetFileLastWriteTime|AfxGetFileLastWriteTime(BYREF wszFileSpec AS WSTRING, BYVAL bUTC AS BOOLEAN = TRUE) AS FILETIME
AFX\AFXWIN.INC|AfxFileScanA|AfxFileScanA(BYREF wszFileName AS WSTRING, BYREF szDelimiter AS ZSTRING = CHR(13, 10)) AS DWORD
AFX\AFXWIN.INC|AfxFileScanW|AfxFileScanW(BYREF wszFileName AS WSTRING, BYREF wszDelimiter AS WSTRING = CHR(13, 10)) AS DWORD
AFX\AFXWIN.INC|AfxIsUserAnAdmin|AfxIsUserAnAdmin() AS BOOLEAN
AFX\AFXWMIPROCS.INC|AfxGetBaseBoardSerialNumber|AfxGetBaseBoardSerialNumber(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetBiosSerialNumber|AfxGetBiosSerialNumber(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetManufacturerSerialNumber|AfxGetManufacturerSerialNumber(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetDiskDriveSerialNumber|AfxGetDiskDriveSerialNumber(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetAddressWidth|AfxGetAddressWidth(BYREF wszServerName AS WSTRING = "#") AS USHORT
AFX\AFXWMIPROCS.INC|AfxGetSystemType|AfxGetSystemType(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetOSArchitecture|AfxGetOSArchitecture(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetPCSystemType|AfxGetPCSystemType(BYREF wszServerName AS WSTRING = "#") AS USHORT
AFX\AFXWMIPROCS.INC|AfxGetBootDevice|AfxGetBootDevice(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetOSBuildNumber|AfxGetOSBuildNumber(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetOSBuildType|AfxGetOSBuildType(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetOSCaption|AfxGetOSCaption(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetOSCodeSet|AfxGetOSCodeSet(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetOSCountryCode|AfxGetOSCountryCode(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetOSCSDVersion|AfxGetOSCSDVersion(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetOSCSName|AfxGetOSCSName(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetOSCurrentTimeZone|AfxGetOSCurrentTimeZone(BYREF wszServerName AS WSTRING = "#") AS USHORT
AFX\AFXWMIPROCS.INC|AfxGetOSLocale|AfxGetOSLocale(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetOSRegisteredUser|AfxGetOSRegisteredUser(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetOSSystemDirectory|AfxGetOSSystemDirectory(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetOSSystemDrive|AfxGetOSSystemDrive(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetOSVersion|AfxGetOSVersion(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetOSOrganization|AfxGetOSOrganization(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetOSInstallDate|AfxGetOSInstallDate(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetOSLastBootUpTime|AfxGetOSLastBootUpTime(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetOSLocalDateTime|AfxGetOSLocalDateTime(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\AFXWMIPROCS.INC|AfxGetOSEncryptionLevel|AfxGetOSEncryptionLevel(BYREF wszServerName AS WSTRING = "#") AS ULONG
AFX\AFXWMIPROCS.INC|AfxGetOSFreePhysicalMemory|AfxGetOSFreePhysicalMemory(BYREF wszServerName AS WSTRING = "#") AS ULONGLONG
AFX\AFXWMIPROCS.INC|AfxGetOSFreeSpaceInPagingFiles|AfxGetOSFreeSpaceInPagingFiles(BYREF wszServerName AS WSTRING = "#") AS ULONGLONG
AFX\AFXWMIPROCS.INC|AfxGetOSFreeVirtualMemory|AfxGetOSFreeVirtualMemory(BYREF wszServerName AS WSTRING = "#") AS ULONGLONG
AFX\AFXWMIPROCS.INC|AfxGetOSMaxNumberOfProcesses|AfxGetOSMaxNumberOfProcesses(BYREF wszServerName AS WSTRING = "#") AS ULONG
AFX\AFXWMIPROCS.INC|AfxGetOSMaxProcessMemorySize|AfxGetOSMaxProcessMemorySize(BYREF wszServerName AS WSTRING = "#") AS ULONGLONG
AFX\AFXWMIPROCS.INC|AfxGetOSNumberOfProcesses|AfxGetOSNumberOfProcesses(BYREF wszServerName AS WSTRING = "#") AS ULONG
AFX\AFXWMIPROCS.INC|AfxGetOSNumberOfUsers|AfxGetOSNumberOfUsers(BYREF wszServerName AS WSTRING = "#") AS ULONG
AFX\AFXWMIPROCS.INC|AfxGetOSLanguage|AfxGetOSLanguage(BYREF wszServerName AS WSTRING = "#") AS ULONG
AFX\AFXWMIPROCS.INC|AfxGetOSTotalVirtualMemorySize|AfxGetOSTotalVirtualMemorySize(BYREF wszServerName AS WSTRING = "#") AS ULONGLONG
AFX\AFXWMIPROCS.INC|AfxGetOSTotalVisibleMemorySize|AfxGetOSTotalVisibleMemorySize(BYREF wszServerName AS WSTRING = "#") AS ULONGLONG
AFX\AFXWMIPROCS.INC|AfxGetNetworkAdapterMACAddress|AfxGetNetworkAdapterMACAddress(BYREF wszServerName AS WSTRING = "#") AS CWSTR
AFX\BSTRING.BI|DWStrIsBstr|DWStrIsBstr(BYVAL pv aS ANY PTR) AS BOOLEAN
AFX\BSTRING.BI|BSTRING.Append|BSTRING.Append(BYVAL pwszStr AS WSTRING PTR)
AFX\BSTRING.BI|BSTRING.Clear|
AFX\BSTRING.BI|BSTRING.Attach|BSTRING.Attach(BYVAL pbstrSrc AS BSTR)
AFX\BSTRING.BI|BSTRING.Detach|BSTRING.Detach() AS BSTR
AFX\BSTRING.BI|BSTRING.Copy|BSTRING.Copy() AS BSTR
AFX\BSTRING.BI|BSTRING.bptr|BSTRING.bptr() AS BSTR
AFX\BSTRING.BI|BSTRING.vptr|BSTRING.vptr() AS ANY PTR
AFX\BSTRING.BI|BSTRING.sptr|BSTRING.sptr() AS WSTRING PTR
AFX\BSTRING.BI|BSTRING.wstr|BSTRING.wstr() BYREF AS CONST WSTRING
AFX\BSTRING.BI|BSTRING.wchar|BSTRING.wchar() AS WSTRING PTR
AFX\BSTRING.BI|Left|Left OVERLOAD(BYREF bs AS BSTRING, BYVAL nChars AS INTEGER) AS BSTRING
AFX\BSTRING.BI|Right|Right OVERLOAD(BYREF bs AS BSTRING, BYVAL nChars AS INTEGER) AS BSTRING
AFX\BSTRING.BI|Val|Val OVERLOAD(BYREF bs AS BSTRING) AS DOUBLE
AFX\BSTRING.BI|ValLng|ValLng OVERLOAD(BYREF bs AS BSTRING) AS LONG
AFX\BSTRING.BI|ValInt|ValInt OVERLOAD(BYREF bs AS BSTRING) AS LONG
AFX\BSTRING.BI|ValULng|ValULng OVERLOAD(BYREF bs AS BSTRING) AS ULONG
AFX\BSTRING.BI|ValUInt|ValUInt OVERLOAD(BYREF bs AS BSTRING) AS ULONG
AFX\BSTRING.BI|ValLongInt|ValLongInt OVERLOAD(BYREF bs AS BSTRING) AS LONGINT
AFX\BSTRING.BI|ValULongInt|ValULongInt OVERLOAD(BYREF bs AS BSTRING) AS ULONGINT
AFX\CADODB\CADOCOMMAND.INC|CAdoCommand.vptr|CAdoCommand.vptr() AS Afx_ADOCommand PTR PTR
AFX\CADODB\CADOCOMMAND.INC|CAdoCommand.Attach|CAdoCommand.Attach(BYVAL pCommand AS Afx_ADOCommand PTR, BYVAL fAddRef AS BOOLEAN = FALSE)
AFX\CADODB\CADOCOMMAND.INC|CAdoCommand.Execute|CAdoCommand.Execute(BYVAL RecordsAffected AS LONG PTR = NULL, BYREF cvParameters AS CVAR = TYPE<VARIANT>(VT_ERROR,0,0,0,DISP_E_PARAMNOTFOUND), BYVAL Options AS LONG = adCmdUnspecified) AS Afx_ADORecordset PTR
AFX\CADODB\CADOCOMMAND.INC|CAdoCommand.Cancel|CAdoCommand.Cancel() AS HRESULT
AFX\CADODB\CADOCOMMAND.INC|CAdoCommand.CreateParameter|CAdoCommand.CreateParameter(BYREF cbsName AS CBSTR = "", BYVAL nType AS DataTypeEnum = 0, BYVAL Direction AS ParameterDirectionEnum = adParamInput, BYVAL Size AS LONG = 0, BYREF cvValue AS CVAR = TYPE<VARIANT>(VT_ERROR,0,0,0,DISP_E_PARAMNOTFOUND)) AS Afx_ADOParameter PTR
AFX\CADODB\CADOCOMMAND.INC|CAdoCommand.GetErrorInfo|CAdoCommand.GetErrorInfo(BYVAL nError AS HRESULT = 0) AS CBSTR
AFX\CADODB\CADOCONNECTION.INC|CAdoConnection.vptr|CAdoConnection.vptr() AS Afx_ADOConnection PTR PTR
AFX\CADODB\CADOCONNECTION.INC|CAdoConnection.Attach|CAdoConnection.Attach(BYVAL pCommand AS Afx_ADOConnection PTR, BYVAL fAddRef AS BOOLEAN = FALSE)
AFX\CADODB\CADOCONNECTION.INC|CAdoConnection.Open|CAdoConnection.Open(BYREF cbsConStr AS CBSTR = "", BYREF cbsUserID AS CBSTR = "", BYREF cbsPassword AS CBSTR = "", BYVAL Options AS LONG = adOptionUnspecified) AS HRESULT
AFX\CADODB\CADOCONNECTION.INC|CAdoConnection.Close|CAdoConnection.Close() AS HRESULT
AFX\CADODB\CADOCONNECTION.INC|CAdoConnection.Execute|CAdoConnection.Execute(BYREF cbsCommandText AS CBSTR, BYVAL RecordsAffected AS LONG PTR = NULL, BYVAL Options AS LONG = -1) AS Afx_ADORecordset PTR
AFX\CADODB\CADOCONNECTION.INC|CAdoConnection.BeginTrans|CAdoConnection.BeginTrans() AS LONG
AFX\CADODB\CADOCONNECTION.INC|CAdoConnection.CommitTrans|CAdoConnection.CommitTrans() AS HRESULT
AFX\CADODB\CADOCONNECTION.INC|CAdoConnection.RollbackTrans|CAdoConnection.RollbackTrans() AS HRESULT
AFX\CADODB\CADOCONNECTION.INC|CAdoConnection.Cancel|CAdoConnection.Cancel() AS HRESULT
AFX\CADODB\CADOCONNECTION.INC|CAdoConnection.OpenSchema|CAdoConnection.OpenSchema(BYVAL Schema AS SchemaEnum, BYREF Restrictions AS CVAR = TYPE<VARIANT>(VT_ERROR,0,0,0,DISP_E_PARAMNOTFOUND), BYREF SchemaID AS CVAR = TYPE<VARIANT>(VT_ERROR,0,0,0,DISP_E_PARAMNOTFOUND)) AS Afx_ADORecordset PTR
AFX\CADODB\CADOCONNECTION.INC|CAdoConnection.GetErrorInfo|CAdoConnection.GetErrorInfo(BYVAL nError AS HRESULT = 0) AS CBSTR
AFX\CADODB\CADODB.INC|CAdoBase.GetLastResult|CAdoBase.GetLastResult() AS HRESULT
AFX\CADODB\CADODB.INC|CAdoBase.SetResult|CAdoBase.SetResult(BYVAL Result AS HRESULT) AS HRESULT
AFX\CADODB\CADODB.INC|AfxAdoGetRuntimeErrorInfo|AfxAdoGetRuntimeErrorInfo(BYVAL wError AS WORD) AS CBSTR
AFX\CADODB\CADODB.INC|AfxAdoGetErrorInfo|AfxAdoGetErrorInfo(BYVAL pConnection AS AFX_ADOConnection PTR, BYVAL nError AS HRESULT = 0) AS CBSTR
AFX\CADODB\CADOERRORS.INC|CAdoError.vptr|CAdoError.vptr() AS Afx_ADOError PTR PTR
AFX\CADODB\CADOERRORS.INC|CAdoError.Attach|CAdoError.Attach(BYVAL pError AS Afx_ADOError PTR, BYVAL fAddRef AS BOOLEAN = FALSE)
AFX\CADODB\CADOERRORS.INC|CAdoErrors.vptr|CAdoErrors.vptr() AS Afx_ADOErrors PTR PTR
AFX\CADODB\CADOERRORS.INC|CAdoErrors.Attach|CAdoErrors.Attach(BYVAL pErrors AS Afx_ADOErrors PTR, BYVAL fAddRef AS BOOLEAN = FALSE)
AFX\CADODB\CADOERRORS.INC|CAdoErrors.NewEnum|CAdoErrors.NewEnum() AS Afx_IUnknown PTR
AFX\CADODB\CADOERRORS.INC|CAdoErrors.Refresh|CAdoErrors.Refresh() AS HRESULT
AFX\CADODB\CADOERRORS.INC|CAdoErrors.Clear|CAdoErrors.Clear() AS HRESULT
AFX\CADODB\CADOFIELDS.INC|CAdoField.vptr|CAdoField.vptr() AS Afx_ADOField PTR PTR
AFX\CADODB\CADOFIELDS.INC|CAdoField.Attach|CAdoField.Attach(BYVAL pField AS Afx_ADOField PTR, BYVAL fAddRef AS BOOLEAN = FALSE)
AFX\CADODB\CADOFIELDS.INC|CAdoField.AppendChunk|CAdoField.AppendChunk(BYREF cvData AS CVAR) AS HRESULT
AFX\CADODB\CADOFIELDS.INC|CAdoField.GetChunk|CAdoField.GetChunk(BYVAL nLen AS LONG) AS CVAR
AFX\CADODB\CADOFIELDS.INC|CAdoFields.vptr|CAdoFields.vptr() AS Afx_ADOFields PTR PTR
AFX\CADODB\CADOFIELDS.INC|CAdoFields.Attach|CAdoFields.Attach(BYVAL pFields AS Afx_ADOFields PTR, BYVAL fAddRef AS BOOLEAN = FALSE)
AFX\CADODB\CADOFIELDS.INC|CAdoFields.Append|CAdoFields.Append(BYREF cbsName AS CBSTR, BYVAL nType AS DataTypeEnum, BYVAL DefinedSize AS ADO_LONGPTR = 0, BYVAL Attrib AS FieldAttributeEnum = 0, BYREF cvFieldValue AS CVAR = TYPE<VARIANT>(VT_ERROR,0,0,0,DISP_E_PARAMNOTFOUND)) AS HRESULT
AFX\CADODB\CADOFIELDS.INC|CAdoFields.Delete_|CAdoFields.Delete_(BYREF cvIndex AS CVAR) AS HRESULT
AFX\CADODB\CADOFIELDS.INC|CAdoFields.NewEnum|CAdoFields.NewEnum() AS Afx_IUnknown PTR
AFX\CADODB\CADOFIELDS.INC|CAdoFields.Refresh|CAdoFields.Refresh() AS HRESULT
AFX\CADODB\CADOFIELDS.INC|CAdoFields.Resync|CAdoFields.Resync(BYVAL ResyncValues AS ResyncEnum = adResyncAllValues) AS HRESULT
AFX\CADODB\CADOFIELDS.INC|CAdoFields.Update|CAdoFields.Update() AS HRESULT
AFX\CADODB\CADOFIELDS.INC|CAdoFields.CancelUpdate|CAdoFields.CancelUpdate() AS HRESULT
AFX\CADODB\CADOPARAMETERS.INC|CAdoParameter.vptr|CAdoParameter.vptr() AS Afx_ADOParameter PTR PTR
AFX\CADODB\CADOPARAMETERS.INC|CAdoParameter.Attach|CAdoParameter.Attach(BYVAL pParameter AS Afx_ADOParameter PTR, BYVAL fAddRef AS BOOLEAN = FALSE)
AFX\CADODB\CADOPARAMETERS.INC|CAdoParameter.AppendChunk|CAdoParameter.AppendChunk(BYREF cvData AS CVAR) AS HRESULT
AFX\CADODB\CADOPARAMETERS.INC|CAdoParameters.vptr|CAdoParameters.vptr() AS Afx_ADOParameters PTR PTR
AFX\CADODB\CADOPARAMETERS.INC|CAdoParameters.Attach|CAdoParameters.Attach(BYVAL pParameters AS Afx_ADOParameters PTR, BYVAL fAddRef AS BOOLEAN = FALSE)
AFX\CADODB\CADOPARAMETERS.INC|CAdoParameters.NewEnum|CAdoParameters.NewEnum() AS Afx_IUnknown PTR
AFX\CADODB\CADOPARAMETERS.INC|CAdoParameters.Refresh|CAdoParameters.Refresh() AS HRESULT
AFX\CADODB\CADOPARAMETERS.INC|CAdoParameters.Append|CAdoParameters.Append(BYVAL pObject AS Afx_IDispatch PTR) AS HRESULT
AFX\CADODB\CADOPARAMETERS.INC|CAdoParameters.Append|CAdoParameters.Append(BYREF pParam AS CAdoParameter) AS HRESULT
AFX\CADODB\CADOPARAMETERS.INC|CAdoParameters.Delete_|CAdoParameters.Delete_(BYREF cvIndex AS CVAR) AS HRESULT
AFX\CADODB\CADOPROPERTIES.INC|CAdoProperty.vptr|CAdoProperty.vptr() AS Afx_ADOProperty PTR PTR
AFX\CADODB\CADOPROPERTIES.INC|CAdoProperty.Attach|CAdoProperty.Attach(BYVAL pProperty AS Afx_ADOProperty PTR, BYVAL fAddRef AS BOOLEAN = FALSE)
AFX\CADODB\CADOPROPERTIES.INC|CAdoProperties.vptr|CAdoProperties.vptr() AS Afx_ADOProperties PTR PTR
AFX\CADODB\CADOPROPERTIES.INC|CAdoProperties.Attach|CAdoProperties.Attach(BYVAL pProperties AS Afx_ADOProperties PTR, BYVAL fAddRef AS BOOLEAN = FALSE)
AFX\CADODB\CADOPROPERTIES.INC|CAdoProperties.Refresh|CAdoProperties.Refresh() AS HRESULT
AFX\CADODB\CADOPROPERTIES.INC|CAdoProperties.NewEnum|CAdoProperties.NewEnum() AS Afx_IUnknown PTR
AFX\CADODB\CADORECORD.INC|CAdoRecord.vptr|CAdoRecord.vptr() AS Afx_ADORecord PTR PTR
AFX\CADODB\CADORECORD.INC|CAdoRecord.Attach|CAdoRecord.Attach(BYVAL pRecord AS Afx_ADORecord PTR, BYVAL fAddRef AS BOOLEAN = FALSE)
AFX\CADODB\CADORECORD.INC|CAdoRecord.Close|CAdoRecord.Close() AS HRESULT
AFX\CADODB\CADORECORD.INC|CAdoRecord.Cancel|CAdoRecord.Cancel() AS HRESULT
AFX\CADODB\CADORECORD.INC|CAdoRecord.GetChildren|CAdoRecord.GetChildren() AS Afx_ADORecordset PTR
AFX\CADODB\CADORECORD.INC|CAdoRecord.Open|CAdoRecord.Open(BYREF cvSource AS CVAR = TYPE<VARIANT>(VT_ERROR,0,0,0,DISP_E_PARAMNOTFOUND), BYREF cvActiveConnection AS CVAR = TYPE<VARIANT>(VT_ERROR,0,0,0,DISP_E_PARAMNOTFOUND), BYVAL nMode AS ConnectModeEnum = adModeUnknown, BYVAL CreateOptions AS RecordCreateOptionsEnum = adFailIfNotExists, BYREF cbsUserName AS CBSTR = "", BYREF cbsPassword AS CBSTR = "") AS HRESULT
AFX\CADODB\CADORECORD.INC|CAdoRecord.MoveRecord|CAdoRecord.MoveRecord(BYREF cbsSource AS CBSTR = "", BYREF cbsDestination AS CBSTR = "", BYREF cbsUserName AS CBSTR = "", BYREF cbsPassword AS CBSTR = "", BYVAL Options AS MoveRecordOptionsEnum = adMoveUnspecified, BYVAL Async AS BOOLEAN = FALSE) AS CBSTR
AFX\CADODB\CADORECORD.INC|CAdoRecord.CopyRecord|CAdoRecord.CopyRecord(BYREF cbsSource AS CBSTR = "", BYREF cbsDestination AS CBSTR = "", BYREF cbsUserName AS CBSTR = "", BYREF cbsPassword AS CBSTR = "", BYVAL Options AS MoveRecordOptionsEnum = adMoveUnspecified, BYVAL Async AS BOOLEAN = FALSE) AS CBSTR
AFX\CADODB\CADORECORD.INC|CAdoRecord.DeleteRecord|CAdoRecord.DeleteRecord(BYREF cbsSource AS CBSTR = "", BYVAL Async AS BOOLEAN = FALSE) AS HRESULT
AFX\CADODB\CADORECORD.INC|CAdoRecord.GetErrorInfo|CAdoRecord.GetErrorInfo(BYVAL nError AS HRESULT = 0) AS CBSTR
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.vptr|CAdoRecordset.vptr() AS Afx_ADORecordset PTR PTR
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Open|CAdoRecordset.Open(BYREF cvSource AS CVAR, BYREF cActiveConnection AS CAdoConnection, BYVAL nCursorType AS CursorTypeEnum = adOpenUnspecified, BYVAL nLockType AS LockTypeEnum = adLockUnspecified, BYVAL nOptions AS LONG = adCmdUnspecified) AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Open|CAdoRecordset.Open(BYREF cvSource AS CVAR, BYREF cvActiveConnection AS CVAR = TYPE<VARIANT>(VT_ERROR,0,0,0,DISP_E_PARAMNOTFOUND), BYVAL nCursorType AS CursorTypeEnum = adOpenUnspecified, BYVAL nLockType AS LockTypeEnum = adLockUnspecified, BYVAL nOptions AS LONG = adCmdUnspecified) AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Open|CAdoRecordset.Open(BYREF cvSource AS CVAR, BYVAL pActiveConnection AS CAdoConnection PTR, BYVAL nCursorType AS CursorTypeEnum = adOpenUnspecified, BYVAL nLockType AS LockTypeEnum = adLockUnspecified, BYVAL nOptions AS LONG = adCmdUnspecified) AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Open|CAdoRecordset.Open(BYVAL nCursorType AS CursorTypeEnum = adOpenUnspecified, BYVAL nLockType AS LockTypeEnum = adLockUnspecified, BYVAL nOptions AS LONG = adCmdUnspecified) AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Attach|CAdoRecordset.Attach(BYVAL pRecordset AS AFX_ADORecordset PTR, BYVAL fAddRef AS BOOLEAN = FALSE) AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.ActiveCommand|CAdoRecordset.ActiveCommand() AS Afx_ADOCommand PTR
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.GetString|CAdoRecordset.GetString(BYVAL StringFormat AS StringFormatEnum = adClipString, BYVAL NumRows AS LONG = adReadAll, BYREF cbsColumnDelimeter AS CBSTR = "", BYREF cbsRowDelimeter AS CBSTR = "", BYREF cbsNullExpr AS CBSTR = "") AS CBSTR
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Move|CAdoRecordset.Move(BYVAL NumRecords AS LONG, BYVAL start AS BookmarkEnum = adBookmarkCurrent) AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Move|CAdoRecordset.Move(BYVAL NumRecords AS LONG, BYREF cvStart AS CVAR) AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.MoveNext|CAdoRecordset.MoveNext() AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.MovePrevious|CAdoRecordset.MovePrevious() AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.MoveFirst|CAdoRecordset.MoveFirst() AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.MoveLast|CAdoRecordset.MoveLast() AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Resync|CAdoRecordset.Resync(BYVAL AffectRecords AS AffectEnum = adAffectAll, BYVAL ResyncValues AS ResyncEnum = adResyncAllValues) AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Requery|CAdoRecordset.Requery(BYVAL Options AS LONG = adOpenUnspecified) AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.NextRecordset|CAdoRecordset.NextRecordset(BYVAL RecordsAffected AS LONG PTR = NULL) AS Afx_AdoRecordset PTR
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Supports|CAdoRecordset.Supports(BYVAL CursorOptions AS CursorOptionEnum) AS BOOLEAN
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.UpdateBatch|CAdoRecordset.UpdateBatch(BYVAL AffectRecords AS AffectEnum = adAffectAll) AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.CancelBatch|CAdoRecordset.CancelBatch(BYVAL AffectRecords AS AffectEnum = adAffectAll) AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.CancelUpdate|CAdoRecordset.CancelUpdate() AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Close|CAdoRecordset.Close() AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Clone|CAdoRecordset.Clone(BYVAL nLockType AS LockTypeEnum = adLockUnspecified) AS Afx_AdoRecordset PTR
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Cancel|CAdoRecordset.Cancel() AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Delete_|CAdoRecordset.Delete_(BYVAL AffectRecords AS AffectEnum = adAffectCurrent) AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Save|CAdoRecordset.Save(BYREF cvDestination AS CVAR, BYVAL PersistFormat AS PersistFormatEnum = adPersistADTG) AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Save|CAdoRecordset.Save(BYVAL pDestination AS Afx_AdoStream PTR, BYVAL PersistFormat AS PersistFormatEnum = adPersistADTG) AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.CompareBookmarks|CAdoRecordset.CompareBookmarks(BYREF cvBookmark1 AS CVAR, BYREF cvBookmark2 AS CVAR) AS CompareEnum
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Find|CAdoRecordset.Find(BYREF cbsCriteria AS CBSTR, BYREF cvStart AS CVAR = TYPE<VARIANT>(VT_ERROR,0,0,0,DISP_E_PARAMNOTFOUND), BYVAL SkipRecords AS LONG = 0, BYVAL SearchDirection AS SearchDirectionEnum = adSearchForward) AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.GetRows|CAdoRecordset.GetRows(BYVAL Rows AS LONG = adGetRowsRest, BYREF cvStart AS CVAR = TYPE<VARIANT>(VT_ERROR,0,0,0,DISP_E_PARAMNOTFOUND), BYREF cvFields AS CVAR = TYPE<VARIANT>(VT_ERROR,0,0,0,DISP_E_PARAMNOTFOUND)) AS SAFEARRAY PTR
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Seek|CAdoRecordset.Seek(BYREF cvKeyValues AS CVAR, BYVAL SeekOption AS SeekEnum = adSeekFirstEQ) AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.AddNew|CAdoRecordset.AddNew(BYREF cvFieldList AS CVAR = TYPE<VARIANT>(VT_ERROR,0,0,0,DISP_E_PARAMNOTFOUND), BYREF cvValues AS CVAR = TYPE<VARIANT>(VT_ERROR,0,0,0,DISP_E_PARAMNOTFOUND)) AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.Update|CAdoRecordset.Update(BYREF cvFieldList AS CVAR = TYPE<VARIANT>(VT_ERROR,0,0,0,DISP_E_PARAMNOTFOUND), BYREF cvValues AS CVAR = TYPE<VARIANT>(VT_ERROR,0,0,0,DISP_E_PARAMNOTFOUND)) AS HRESULT
AFX\CADODB\CADORECORDSET.INC|CAdoRecordset.GetErrorInfo|CAdoRecordset.GetErrorInfo(BYVAL nError AS HRESULT = 0) AS CBSTR
AFX\CADODB\CADOSTREAM.INC|CAdoStream.vptr|CAdoStream.vptr() AS Afx_ADOStream PTR PTR
AFX\CADODB\CADOSTREAM.INC|CAdoStream.Attach|CAdoStream.Attach(BYVAL pStream AS Afx_ADOStream PTR, BYVAL fAddRef AS BOOLEAN = FALSE)
AFX\CADODB\CADOSTREAM.INC|CAdoStream.Read|CAdoStream.Read(BYVAL NumBytes AS LONG = adReadAll) AS CVAR
AFX\CADODB\CADOSTREAM.INC|CAdoStream.Read|CAdoStream.Read(BYVAL NumBytes AS LONG = adReadAll, BYREF cvValue AS CVAR) AS HRESULT
AFX\CADODB\CADOSTREAM.INC|CAdoStream.Open|CAdoStream.Open(BYREF cvSource AS CVAR = TYPE<VARIANT>(VT_ERROR,0,0,0,DISP_E_PARAMNOTFOUND), BYVAL nMode AS ConnectModeEnum = adModeUnknown, BYVAL Options AS StreamOpenOptionsEnum = adOpenStreamUnspecified, BYREF cbsUserName AS CBSTR = "", BYREF cbsPassword AS CBSTR = "") AS HRESULT
AFX\CADODB\CADOSTREAM.INC|CAdoStream.Close|CAdoStream.Close() AS HRESULT
AFX\CADODB\CADOSTREAM.INC|CAdoStream.SkipLine|CAdoStream.SkipLine() AS HRESULT
AFX\CADODB\CADOSTREAM.INC|CAdoStream.Write|CAdoStream.Write(BYREF cvBuffer AS CVAR) AS HRESULT
AFX\CADODB\CADOSTREAM.INC|CAdoStream.WriteText|CAdoStream.WriteText(BYREF cbsData AS CBSTR, BYVAL Options AS StreamWriteEnum = adWriteChar) AS HRESULT
AFX\CADODB\CADOSTREAM.INC|CAdoStream.SetEOS|CAdoStream.SetEOS() AS HRESULT
AFX\CADODB\CADOSTREAM.INC|CAdoStream.CopyTo|CAdoStream.CopyTo(BYVAL pDestStream AS Afx_ADOStream PTR, BYVAL CharNumber AS LONG = adReadAll) AS HRESULT
AFX\CADODB\CADOSTREAM.INC|CAdoStream.Flush|CAdoStream.Flush() AS HRESULT
AFX\CADODB\CADOSTREAM.INC|CAdoStream.SaveToFile|CAdoStream.SaveToFile(BYREF cbsFileName AS CBSTR, BYVAL Options AS SaveOptionsEnum = adSaveCreateNotExist) AS HRESULT
AFX\CADODB\CADOSTREAM.INC|CAdoStream.LoadFromFile|CAdoStream.LoadFromFile(BYREF cbsFileName AS CBSTR) AS HRESULT
AFX\CADODB\CADOSTREAM.INC|CAdoStream.ReadText|CAdoStream.ReadText(BYVAL NumChars AS LONG = adReadAll) AS CBSTR
AFX\CADODB\CADOSTREAM.INC|CAdoStream.ReadText|CAdoStream.ReadText(BYVAL NumChars AS LONG = adReadAll, BYREF cbsText AS CBSTR) AS HRESULT
AFX\CADODB\CADOSTREAM.INC|CAdoStream.Cancel|CAdoStream.Cancel() AS HRESULT
AFX\CATLCON.INC|CAtlCon.WinInit|CAtlCon.WinInit() AS BOOLEAN
AFX\CATLCON.INC|CAtlCon.Init|CAtlCon.Init() AS BOOLEAN
AFX\CATLCON.INC|CAtlCon.AddControl|CAtlCon.AddControl(BYVAL pWindow AS CWindow PTR, BYVAL cID AS INTEGER, BYREF wszName AS WSTRING = "", BYVAL x AS LONG = 0, BYVAL y AS LONG = 0, BYVAL nWidth AS LONG = 0, BYVAL nHeight AS LONG = 0, BYVAL dwStyle AS DWORD = WS_VISIBLE OR WS_CHILD OR WS_TABSTOP, BYVAL dwExStyle AS DWORD = 0) AS HWND
AFX\CATLCON.INC|CAtlCon.AddControl|CAtlCon.AddControl(BYVAL pWindow AS CWindow PTR, BYVAL cID AS INTEGER, BYREF wszProgID AS WSTRING, BYREF wszLicKey AS WSTRING, BYVAL x AS LONG = 0, BYVAL y AS LONG = 0, BYVAL nWidth AS LONG = 0, BYVAL nHeight AS LONG = 0, BYVAL dwStyle AS DWORD = WS_VISIBLE OR WS_CHILD OR WS_TABSTOP, BYVAL dwExStyle AS DWORD = 0) AS HWND
AFX\CATLCON.INC|CAtlCon.AddControl|CAtlCon.AddControl(BYVAL pWindow AS CWindow PTR, BYVAL cID AS INTEGER, BYREF wszLibName AS CONST WSTRING, BYREF rclsid AS CONST CLSID, BYREF riid AS CONST IID, BYREF wszLicKey AS WSTRING = "", BYVAL x AS LONG = 0, BYVAL y AS LONG = 0, BYVAL nWidth AS LONG = 0, BYVAL nHeight AS LONG = 0, BYVAL dwStyle AS DWORD = WS_VISIBLE OR WS_CHILD OR WS_TABSTOP, BYVAL dwExStyle AS DWORD = 0) AS HWND
AFX\CATLCON.INC|CAtlCon.AttachControl|CAtlCon.AttachControl(BYVAL pControl AS IUnknown PTR, BYVAL hCtl AS HWND) AS HRESULT
AFX\CATLCON.INC|CAtlCon.AtlVersion|CAtlCon.AtlVersion() AS DWORD
AFX\CATLCON.INC|CAtlCon.HiMetricToPixel|CAtlCon.HiMetricToPixel(BYREF SizeInHiMetric AS SIZEL) AS SIZEL
AFX\CATLCON.INC|CAtlCon.PixelToHiMetric|CAtlCon.PixelToHiMetric(BYREF SizeInPix AS SIZEL) AS SIZEL
AFX\CATLCON.INC|CAtlCon.GetHost|CAtlCon.GetHost(BYVAL hwnd AS .HWND) AS IUnknown PTR
AFX\CATLCON.INC|CAtlCon.GetControl|CAtlCon.GetControl(BYVAL hwnd AS .HWND) AS IUnknown PTR
AFX\CATLCON.INC|CAtlCon.GetDispatch|CAtlCon.GetDispatch(BYVAL hwnd AS .HWND) AS IDispatch PTR
AFX\CATLCON.INC|CAtlCon.Advise|CAtlCon.Advise(BYVAL punkCP AS IUnknown PTR, BYVAL punk AS IUnknown PTR, BYVAL riid AS IID PTR, BYREF dwCookie AS DWORD) AS HRESULT
AFX\CATLCON.INC|CAtlCon.Unadvise|CAtlCon.Unadvise(BYVAL punkCP AS IUnknown PTR, BYVAL riid AS IID PTR, BYVAL dwCookie AS DWORD) AS HRESULT
AFX\CATLCON.INC|CWebCtx.hWindow|CWebCtx.hWindow() AS HWND
AFX\CATLCON.INC|CWebCtx.BrowserPtr|CWebCtx.BrowserPtr() AS Afx_IWebBrowser2 PTR
AFX\CATLCON.INC|CWebCtx.Navigate|CWebCtx.Navigate(BYVAL pwszUrl AS WSTRING PTR, BYVAL Flags AS VARIANT PTR = NULL, BYVAL TargetFrameName AS VARIANT PTR = NULL, BYVAL PostData AS VARIANT PTR = NULL, BYVAL Headers AS VARIANT PTR = NULL) AS HRESULT
AFX\CATLCON.INC|CWebCtx.Navigate|CWebCtx.Navigate(BYVAL pvUrl AS VARIANT PTR, BYVAL Flags AS VARIANT PTR = NULL, BYVAL TargetFrameName AS VARIANT PTR = NULL, BYVAL PostData AS VARIANT PTR = NULL, BYVAL Headers AS VARIANT PTR = NULL) AS HRESULT
AFX\CATLCON.INC|CWebCtx.WaitForPageLoad|CWebCtx.WaitForPageLoad(BYVAL dbTimeout AS DOUBLE = 10) AS tagREADYSTATE
AFX\CATLCON.INC|CWebCtx.SetFocus|CWebCtx.SetFocus() AS HRESULT
AFX\CATLCON.INC|CWebCtx.GoBack|CWebCtx.GoBack() AS HRESULT
AFX\CATLCON.INC|CWebCtx.GoForward|CWebCtx.GoForward() AS HRESULT
AFX\CATLCON.INC|CWebCtx.GoHome|CWebCtx.GoHome() AS HRESULT
AFX\CATLCON.INC|CWebCtx.GoSearch|CWebCtx.GoSearch() AS HRESULT
AFX\CATLCON.INC|CWebCtx.Refresh|CWebCtx.Refresh() AS HRESULT
AFX\CATLCON.INC|CWebCtx.Refresh2|CWebCtx.Refresh2(BYVAL nLevel AS RefreshConstants) AS HRESULT
AFX\CATLCON.INC|CWebCtx.PrintPreview|CWebCtx.PrintPreview() AS HRESULT
AFX\CATLCON.INC|CWebCtx.PrintPage|CWebCtx.PrintPage(BYVAL bPromptUser AS BOOLEAN = TRUE) AS HRESULT
AFX\CATLCON.INC|CWebCtx.PageSetUp|CWebCtx.PageSetUp() AS HRESULT
AFX\CATLCON.INC|CWebCtx.PageProperties|CWebCtx.PageProperties() AS HRESULT
AFX\CATLCON.INC|CWebCtx.SaveAs|CWebCtx.SaveAs() AS HRESULT
AFX\CATLCON.INC|CWebCtx.Find|CWebCtx.Find() AS HRESULT
AFX\CATLCON.INC|CWebCtx.ShowSource|CWebCtx.ShowSource() AS HRESULT
AFX\CATLCON.INC|CWebCtx.InternetOptions|CWebCtx.InternetOptions() AS HRESULT
AFX\CATLCON.INC|CWebCtx.Stop|CWebCtx.Stop() AS HRESULT
AFX\CATLCON.INC|CWebCtx.QueryStatusWB|CWebCtx.QueryStatusWB(BYVAL cmdID AS OLECMDID) AS OLECMDF
AFX\CATLCON.INC|CWebCtx.ExecWB|CWebCtx.ExecWB(BYVAL cmdID AS OLECMDID, BYVAL cmdexecopt AS OLECMDEXECOPT, BYVAL pvaIn AS VARIANT PTR = NULL, BYVAL pvaOut AS VARIANT PTR = NULL) AS HRESULT
AFX\CATLCON.INC|CWebCtx.WriteHtml|CWebCtx.WriteHtml(BYREF cwsHtml AS CWSTR, BYVAL cr AS BOOLEAN = FALSE) AS HRESULT
AFX\CATLCON.INC|CWebCtx.GetBodyInnerText|CWebCtx.GetBodyInnerText() AS CWSTR
AFX\CATLCON.INC|CWebCtx.GetBodyInnerHtml|CWebCtx.GetBodyInnerHtml() AS CWSTR
AFX\CATLCON.INC|CWebCtx.GetActiveElementId|CWebCtx.GetActiveElementId() AS CWSTR
AFX\CATLCON.INC|CWebCtx.GetElementValueById|CWebCtx.GetElementValueById(BYREF cwsId AS CWSTR) AS VARIANT
AFX\CATLCON.INC|CWebCtx.SetElementValueById|CWebCtx.SetElementValueById(BYREF cwsId AS CWSTR, BYVAL vValue AS VARIANT) AS HRESULT
AFX\CATLCON.INC|CWebCtx.GetElementInnerHtmlById|CWebCtx.GetElementInnerHtmlById(BYREF cwsId AS CWSTR) AS CWSTR
AFX\CATLCON.INC|CWebCtx.SetElementInnerHtmlById|CWebCtx.SetElementInnerHtmlById(BYREF cwsId AS CWSTR, BYREF cwsHtml AS CWSTR) AS HRESULT
AFX\CATLCON.INC|CWebCtx.SetElementFocusById|CWebCtx.SetElementFocusById(BYREF cwsId AS CWSTR) AS HRESULT
AFX\CATLCON.INC|AtlControlWindow|AtlControlWindow(BYVAL hwnd AS HWND, BYVAL cID AS WORD) AS HWND
AFX\CATLCON.INC|AtlControlUnknown|AtlControlUnknown(BYVAL hwnd AS HWND) AS Afx_IUnknown PTR
AFX\CATLCON.INC|AtlControlDispatch|AtlControlDispatch(BYVAL hwnd AS HWND) AS Afx_IDispatch PTR
AFX\CATLCON.INC|AtlControlObject|AtlControlObject(BYVAL hwnd AS HWND) AS Afx_IDispatch PTR
AFX\CATLCON.INC|AtlBrowserDispatch|AtlBrowserDispatch OVERLOAD(BYVAL hwnd AS HWND) AS Afx_IWebBrowser2 PTR
AFX\CATLCON.INC|AtlBrowserDispatch|AtlBrowserDispatch OVERLOAD(BYVAL hwnd AS HWND, BYVAL cID AS WORD) AS Afx_IWebBrowser2 PTR
AFX\CATLCON.INC|AtlBrowserObject|AtlBrowserObject OVERLOAD(BYVAL hwnd AS HWND) AS Afx_IWebBrowser2 PTR
AFX\CATLCON.INC|AtlBrowserObject|AtlBrowserObject OVERLOAD(BYVAL hwnd AS HWND, BYVAL cID AS WORD) AS Afx_IWebBrowser2 PTR
AFX\CATLCON.INC|AtlCWebCtx|AtlCWebCtx OVERLOAD(BYVAL hwnd AS HWND) AS CWebCtx PTR
AFX\CATLCON.INC|AtlCWebCtx|AtlCWebCtx OVERLOAD(BYVAL hwnd AS HWND, BYVAL cID AS WORD) AS CWebCtx PTR
AFX\CATLCON.INC|AtlCreateFontDisp|AtlCreateFontDisp( BYREF wszFontName AS WSTRING, BYVAL cySize AS LONGLONG, BYVAL fWeight AS SHORT, BYVAL fCharset AS SHORT, BYVAL fItalic AS WINBOOL, BYVAL fUnderline AS WINBOOL, BYVAL fStrikethrough AS WINBOOL ) AS IFontDisp PTR
AFX\CATLCON.INC|AtlForwardMessage|AtlForwardMessage(BYVAL hctl AS HWND, BYVAL pMsg AS tagMsg PTR) AS BOOLEAN
AFX\CATLCON.INC|AtlWaitForPageLoad|AtlWaitForPageLoad(BYVAL hCtl AS HWND, BYVAL dbTimeout AS DOUBLE = 10) AS tagREADYSTATE
AFX\CAXHOST\CAXHOST.INC|CAxHost.RegisterClass|CAxHost.RegisterClass() AS ATOM
AFX\CAXHOST\CAXHOST.INC|CAxHost.CreateContainer|CAxHost.CreateContainer(BYVAL pWindow AS CWindow PTR, BYVAL cID AS LONG_PTR, BYREF wszProgID AS WSTRING, BYREF wszLibName AS WSTRING, BYREF rclsid AS const CLSID, BYREF riid AS const IID, BYREF wszLicKey AS WSTRING, BYVAL x AS LONG = 0, BYVAL y AS LONG = 0, BYVAL nWidth AS LONG = 0, BYVAL nHeight AS LONG = 0, BYVAL dwStyle AS DWORD = 0, BYVAL dwExStyle AS DWORD = 0, BYVAL pAmbientDisp AS CAXHOST_AMBIENTDISP PTR = NULL)
AFX\CAXHOST\CAXHOST.INC|CAxHost.hWindow|CAxHost.hWindow() AS HANDLE
AFX\CAXHOST\CAXHOST.INC|CAxHost.CtrlID|CAxHost.CtrlID() AS LONG
AFX\CAXHOST\CAXHOST.INC|CAxHost.OcxDispPtr|CAxHost.OcxDispPtr() AS IDispatch PTR
AFX\CAXHOST\CAXHOST.INC|CAxHost.OcxDispObj|CAxHost.OcxDispObj() AS IDispatch PTR
AFX\CAXHOST\CAXHOST.INC|CAxHost.Advise|CAxHost.Advise(BYVAL pEvtObj AS IDispatch PTR, BYVAL riid AS IID PTR) AS HRESULT
AFX\CAXHOST\CAXHOST.INC|CAxHost.Advise|CAxHost.Advise(BYVAL pEvtObj AS IDispatch PTR, BYREF riid AS CONST IID) AS HRESULT
AFX\CAXHOST\CAXHOST.INC|CAxHost.Advise|CAxHost.Advise(BYVAL pEvtObj AS IDispatch PTR, BYREF riid AS IID) AS HRESULT
AFX\CAXHOST\CAXHOST.INC|CAxHost.Advise|CAxHost.Advise(BYVAL pEvtObj AS Afx_IDispatch PTR, BYVAL riid AS IID PTR) AS HRESULT
AFX\CAXHOST\CAXHOST.INC|CAxHost.Advise|CAxHost.Advise(BYVAL pEvtObj AS Afx_IDispatch PTR, BYREF riid AS CONST IID) AS HRESULT
AFX\CAXHOST\CAXHOST.INC|CAxHost.Advise|CAxHost.Advise(BYVAL pEvtObj AS Afx_IDispatch PTR, BYREF riid AS IID) AS HRESULT
AFX\CAXHOST\CAXHOST.INC|CAxHost.Unadvise|CAxHost.Unadvise() AS HRESULT
AFX\CAXHOST\CAXHOST.INC|CAxHost.PixelsToHiMetric|CAxHost.PixelsToHiMetric(BYVAL SizeInPix AS SIZEL PTR, BYVAL SizeInHiMetric AS SIZEL PTR)
AFX\CAXHOST\CAXHOST.INC|CAxHost.OleCreateFontDisp|CAxHost.OleCreateFontDisp( BYREF wszFontName AS WSTRING, BYVAL cySize AS LONGLONG, BYVAL fWeight AS SHORT = FW_NORMAL, BYVAL fItalic AS WINBOOL = FALSE, BYVAL fUnderline AS WINBOOL = FALSE, BYVAL fStrikethrough AS WINBOOL = FALSE, BYVAL fCharset AS SHORT = DEFAULT_CHARSET ) AS IFontDisp PTR
AFX\CAXHOST\CAXHOST.INC|CAxHost.OleCreateFont|CAxHost.OleCreateFont( BYREF wszFontName AS WSTRING, BYVAL cySize AS LONGLONG, BYVAL fWeight AS SHORT = FW_NORMAL, BYVAL fItalic AS WINBOOL = FALSE, BYVAL fUnderline AS WINBOOL = FALSE, BYVAL fStrikethrough AS WINBOOL = FALSE, BYVAL fCharset AS SHORT = DEFAULT_CHARSET ) AS IFont PTR
AFX\CAXHOST\CAXHOST.INC|CAxHost.GuidFromStr|CAxHost.GuidFromStr(BYVAL pwszGuidText AS WSTRING PTR = NULL) AS GUID
AFX\CAXHOST\CAXHOST.INC|CAxHost.GuidText|CAxHost.GuidText(BYVAL classID AS CLSID PTR) AS STRING
AFX\CAXHOST\CAXHOST.INC|CAxHost.GuidText|CAxHost.GuidText(BYVAL riid AS REFIID) AS STRING
AFX\CAXHOST\CAXHOST.INC|CAxHost.GuidText|CAxHost.GuidText(BYVAL classID AS CLSID) AS STRING
AFX\CAXHOST\CAXHOST.INC|CAxHost.CreateObject|CAxHost.CreateObject(BYREF wszProgID AS WSTRING) AS IDispatch PTR
AFX\CAXHOST\CAXHOST.INC|CAxHost.CreateObject|CAxHost.CreateObject(BYREF wszProgID AS WSTRING, BYREF wszLicKey AS WSTRING) AS IDispatch PTR
AFX\CAXHOST\CAXHOST.INC|CAxHost.CreateObject|CAxHost.CreateObject(BYREF classID AS CONST CLSID, BYREF riid AS CONST IID) AS IDispatch PTR
AFX\CAXHOST\CAXHOST.INC|CAxHost.CreateObject|CAxHost.CreateObject(BYREF classID AS CONST CLSID, BYREF riid AS CONST IID, BYREF wszLicKey AS WSTRING) AS IDispatch PTR
AFX\CAXHOST\CAXHOST.INC|CAxHost.CreateObject|CAxHost.CreateObject(BYREF wszLibName AS CONST WSTRING, BYREF rclsid AS CONST CLSID, BYREF riid AS CONST IID, BYREF wszLicKey AS WSTRING = "") AS IDispatch PTR
AFX\CAXHOST\CAXHOST.INC|CAxHost.CAxHostProc|CAxHost.CAxHostProc(BYVAL hWnd AS HWND, BYVAL uMsg AS UINT, BYVAL wParam AS WPARAM, BYVAL lParam AS LPARAM) AS LRESULT
AFX\CAXHOST\CAXHOST.INC|CAxHost.GetInterfaceName|CAxHost.GetInterfaceName(BYVAL riid AS REFIID) AS STRING
AFX\CAXHOST\CAXHOST.INC|CAxHost.QueryInterface|CAxHost.QueryInterface(BYVAL riid AS REFIID, BYVAL ppvObj AS LPVOID PTR) AS HRESULT
AFX\CAXHOST\CAXHOST.INC|AfxCAxHostWindow|AfxCAxHostWindow(BYVAL hwnd AS HWND, BYVAL cID AS WORD) AS HWND
AFX\CAXHOST\CAXHOST.INC|AfxCAxHostPtr|AfxCAxHostPtr OVERLOAD(BYVAL hwnd AS HWND) AS CAxHost PTR
AFX\CAXHOST\CAXHOST.INC|AfxCAxHostPtr|AfxCAxHostPtr OVERLOAD(BYVAL hwnd AS HWND, BYVAL cID AS WORD) AS CAxHost PTR
AFX\CAXHOST\CAXHOST.INC|AfxCAxHostDispPtr|AfxCAxHostDispPtr(BYVAL hwnd AS HWND) AS IDispatch PTR
AFX\CAXHOST\CAXHOST.INC|AfxCAxHostDispObj|AfxCAxHostDispObj(BYVAL hwnd AS HWND) AS IDispatch PTR
AFX\CAXHOST\CAXHOST.INC|AfxCAxHostForwardMessage|AfxCAxHostForwardMessage(BYVAL hctl AS HWND, BYVAL pMsg AS tagMsg PTR) AS BOOLEAN
AFX\CAXHOST\CAXHOST_IDISPATCH.INC|CAxHost_IDispatch.QueryInterface|CAxHost_IDispatch.QueryInterface(BYVAL riid AS REFIID, BYVAL ppvObj AS LPVOID PTR) AS HRESULT
AFX\CAXHOST\CAXHOST_IDISPATCH.INC|CAxHost_IDispatch.AddRef|CAxHost_IDispatch.AddRef() AS ULONG
AFX\CAXHOST\CAXHOST_IDISPATCH.INC|CAxHost_IDispatch.Release|CAxHost_IDispatch.Release() AS DWORD
AFX\CAXHOST\CAXHOST_IDISPATCH.INC|CAxHost_IDispatch.GetTypeInfoCount|CAxHost_IDispatch.GetTypeInfoCount(BYVAL pctInfo AS UINT PTR) AS HRESULT
AFX\CAXHOST\CAXHOST_IDISPATCH.INC|CAxHost_IDispatch.GetTypeInfo|CAxHost_IDispatch.GetTypeInfo(BYVAL iTInfo AS UINT, BYVAL lcid AS LCID, BYVAL ppTInfo AS ITypeInfo PTR PTR) AS HRESULT
AFX\CAXHOST\CAXHOST_IDISPATCH.INC|CAxHost_IDispatch.GetIDsOfNames|CAxHost_IDispatch.GetIDsOfNames(BYVAL riid AS CONST IID CONST PTR, BYVAL rgszNames AS LPOLESTR PTR, BYVAL cNames AS UINT, BYVAL lcid AS LCID, BYVAL rgDispId AS DISPID PTR) AS HRESULT
AFX\CAXHOST\CAXHOST_IDISPATCH.INC|CAxHost_IDispatch.Invoke|CAxHost_IDispatch.Invoke(BYVAL dispIdMember AS DISPID, BYVAL riid AS CONST IID CONST PTR, BYVAL lcid AS LCID, BYVAL wFlags AS WORD, BYVAL pDispParams AS DISPPARAMS PTR, BYVAL pVarResult AS VARIANT PTR, BYVAL pExcepInfo AS EXCEPINFO PTR, BYVAL puArgErr AS UINT PTR) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLECLIENTSITE.INC|CAxHost_IOleClientSite.QueryInterface|CAxHost_IOleClientSite.QueryInterface(BYVAL riid AS REFIID, BYVAL ppvObj AS LPVOID PTR) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLECLIENTSITE.INC|CAxHost_IOleClientSite.AddRef|CAxHost_IOleClientSite.AddRef() AS ULONG
AFX\CAXHOST\CAXHOST_IOLECLIENTSITE.INC|CAxHost_IOleClientSite.Release|CAxHost_IOleClientSite.Release() AS DWORD
AFX\CAXHOST\CAXHOST_IOLECLIENTSITE.INC|CAxHost_IOleClientSite.SaveObject|CAxHost_IOleClientSite.SaveObject() AS HRESULT
AFX\CAXHOST\CAXHOST_IOLECLIENTSITE.INC|CAxHost_IOleClientSite.GetMoniker|CAxHost_IOleClientSite.GetMoniker(BYVAL dwAssign AS DWORD, BYVAL dwWhichMoniker AS DWORD, BYVAL ppmk AS LPMONIKER PTR) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLECLIENTSITE.INC|CAxHost_IOleClientSite.GetContainer|CAxHost_IOleClientSite.GetContainer(BYVAL ppContainer AS LPOLECONTAINER PTR) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLECLIENTSITE.INC|CAxHost_IOleClientSite.ShowObject|CAxHost_IOleClientSite.ShowObject() AS HRESULT
AFX\CAXHOST\CAXHOST_IOLECLIENTSITE.INC|CAxHost_IOleClientSite.OnShowWindow|CAxHost_IOleClientSite.OnShowWindow(BYVAL fShow AS BOOL) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLECLIENTSITE.INC|CAxHost_IOleClientSite.RequestNewObjectLayout|CAxHost_IOleClientSite.RequestNewObjectLayout() AS HRESULT
AFX\CAXHOST\CAXHOST_IOLECONTROLSITE.INC|CAxHost_IOleControlSite.QueryInterface|CAxHost_IOleControlSite.QueryInterface(BYVAL riid AS REFIID, BYVAL ppvObj AS LPVOID PTR) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLECONTROLSITE.INC|CAxHost_IOleControlSite.AddRef|CAxHost_IOleControlSite.AddRef() AS ULONG
AFX\CAXHOST\CAXHOST_IOLECONTROLSITE.INC|CAxHost_IOleControlSite.Release|CAxHost_IOleControlSite.Release() AS DWORD
AFX\CAXHOST\CAXHOST_IOLECONTROLSITE.INC|CAxHost_IOleControlSite.OnControlInfoChanged|CAxHost_IOleControlSite.OnControlInfoChanged() AS HRESULT
AFX\CAXHOST\CAXHOST_IOLECONTROLSITE.INC|CAxHost_IOleControlSite.LockInPlaceActive|CAxHost_IOleControlSite.LockInPlaceActive(BYVAL fLock AS LONG) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLECONTROLSITE.INC|CAxHost_IOleControlSite.GetExtendedControl|CAxHost_IOleControlSite.GetExtendedControl(BYVAL ppDisp AS IDispatch PTR PTR) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLECONTROLSITE.INC|CAxHost_IOleControlSite.TransformCoords|CAxHost_IOleControlSite.TransformCoords(BYVAL pPtlHimetric AS POINTL PTR, BYVAL pPtfContainer AS POINTF PTR, BYVAL dwFlags AS DWORD) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLECONTROLSITE.INC|CAxHost_IOleControlSite.TranslateAccelerator|CAxHost_IOleControlSite.TranslateAccelerator(BYVAL pMsg AS LPMSG, BYVAL grfModifiers AS DWORD) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLECONTROLSITE.INC|CAxHost_IOleControlSite.OnFocus|CAxHost_IOleControlSite.OnFocus(BYVAL fGotFocus AS LONG) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLECONTROLSITE.INC|CAxHost_IOleControlSite.ShowPropertyFrame|CAxHost_IOleControlSite.ShowPropertyFrame() AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACEFRAME.INC|CAxHost_IOleInPlaceFrame.QueryInterface|CAxHost_IOleInPlaceFrame.QueryInterface(BYVAL riid AS REFIID, BYVAL ppvObj AS LPVOID PTR) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACEFRAME.INC|CAxHost_IOleInPlaceFrame.AddRef|CAxHost_IOleInPlaceFrame.AddRef() AS ULONG
AFX\CAXHOST\CAXHOST_IOLEINPLACEFRAME.INC|CAxHost_IOleInPlaceFrame.Release|CAxHost_IOleInPlaceFrame.Release() AS DWORD
AFX\CAXHOST\CAXHOST_IOLEINPLACEFRAME.INC|CAxHost_IOleInPlaceFrame.GetWindow|CAxHost_IOleInPlaceFrame.GetWindow(BYVAL phwnd AS HWND PTR) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACEFRAME.INC|CAxHost_IOleInPlaceFrame.ContextSensitiveHelp|CAxHost_IOleInPlaceFrame.ContextSensitiveHelp(BYVAL fEnterMode AS BOOL) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACEFRAME.INC|CAxHost_IOleInPlaceFrame.GetBorder|CAxHost_IOleInPlaceFrame.GetBorder(BYVAL lprectBorder AS LPRECT) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACEFRAME.INC|CAxHost_IOleInPlaceFrame.RequestBorderSpace|CAxHost_IOleInPlaceFrame.RequestBorderSpace(BYVAL pborderwidths AS LPCBORDERWIDTHS) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACEFRAME.INC|CAxHost_IOleInPlaceFrame.SetBorderSpace|CAxHost_IOleInPlaceFrame.SetBorderSpace(BYVAL pborderwidths AS LPCBORDERWIDTHS) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACEFRAME.INC|CAxHost_IOleInPlaceFrame.SetActiveObject|CAxHost_IOleInPlaceFrame.SetActiveObject(BYVAL pActiveObject AS LPOLEINPLACEACTIVEOBJECT, BYVAL pszObjName AS LPCOLESTR) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACEFRAME.INC|CAxHost_IOleInPlaceFrame.InsertMenus|CAxHost_IOleInPlaceFrame.InsertMenus(BYVAL hmenuShared AS HMENU, BYVAL lpMenuWidths AS LPOLEMENUGROUPWIDTHS) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACEFRAME.INC|CAxHost_IOleInPlaceFrame.SetMenu|CAxHost_IOleInPlaceFrame.SetMenu(BYVAL hmenuShared AS HMENU, BYVAL holemenu AS HOLEMENU, BYVAL hwndActiveObject AS HWND) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACEFRAME.INC|CAxHost_IOleInPlaceFrame.RemoveMenus|CAxHost_IOleInPlaceFrame.RemoveMenus(BYVAL hmenuShared AS HMENU) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACEFRAME.INC|CAxHost_IOleInPlaceFrame.SetStatusText|CAxHost_IOleInPlaceFrame.SetStatusText(BYVAL pszStatusText AS LPCOLESTR) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACEFRAME.INC|CAxHost_IOleInPlaceFrame.EnableModeless|CAxHost_IOleInPlaceFrame.EnableModeless(BYVAL fEnable AS BOOL) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACEFRAME.INC|CAxHost_IOleInPlaceFrame.TranslateAccelerator|CAxHost_IOleInPlaceFrame.TranslateAccelerator(BYVAL lpmsg AS LPMSG, BYVAL wID AS WORD) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACESITE.INC|CAxHost_IOleInPlaceSite.QueryInterface|CAxHost_IOleInPlaceSite.QueryInterface(BYVAL riid AS REFIID, BYVAL ppvObj AS LPVOID PTR) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACESITE.INC|CAxHost_IOleInPlaceSite.AddRef|CAxHost_IOleInPlaceSite.AddRef() AS ULONG
AFX\CAXHOST\CAXHOST_IOLEINPLACESITE.INC|CAxHost_IOleInPlaceSite.Release|CAxHost_IOleInPlaceSite.Release() AS ULONG
AFX\CAXHOST\CAXHOST_IOLEINPLACESITE.INC|CAxHost_IOleInPlaceSite.GetWindow|CAxHost_IOleInPlaceSite.GetWindow(BYVAL phwnd AS HWND PTR) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACESITE.INC|CAxHost_IOleInPlaceSite.ContextSensitiveHelp|CAxHost_IOleInPlaceSite.ContextSensitiveHelp(BYVAL fEnterMode AS WINBOOL) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACESITE.INC|CAxHost_IOleInPlaceSite.CanInPlaceActivate|CAxHost_IOleInPlaceSite.CanInPlaceActivate() AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACESITE.INC|CAxHost_IOleInPlaceSite.OnInPlaceActivate|CAxHost_IOleInPlaceSite.OnInPlaceActivate() AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACESITE.INC|CAxHost_IOleInPlaceSite.OnUIActivate|CAxHost_IOleInPlaceSite.OnUIActivate() AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACESITE.INC|CAxHost_IOleInPlaceSite.GetWindowContext|CAxHost_IOleInPlaceSite.GetWindowContext(BYVAL ppFrame AS IOleInPlaceFrame PTR PTR, BYVAL ppDoc as IOleInPlaceUIWindow PTR PTR, BYVAL lprcPosRect AS LPRECT, BYVAL lprcClipRect AS LPRECT, BYVAL lpFrameInfo AS LPOLEINPLACEFRAMEINFO) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACESITE.INC|CAxHost_IOleInPlaceSite.Scroll|CAxHost_IOleInPlaceSite.Scroll(BYVAL scrollExtant AS SIZE) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACESITE.INC|CAxHost_IOleInPlaceSite.OnUIDeactivate|CAxHost_IOleInPlaceSite.OnUIDeactivate(BYVAL fUndoable AS WINBOOL) AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACESITE.INC|CAxHost_IOleInPlaceSite.OnInPlaceDeactivate|CAxHost_IOleInPlaceSite.OnInPlaceDeactivate() AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACESITE.INC|CAxHost_IOleInPlaceSite.DiscardUndoState|CAxHost_IOleInPlaceSite.DiscardUndoState() AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACESITE.INC|CAxHost_IOleInPlaceSite.DeactivateAndUndo|CAxHost_IOleInPlaceSite.DeactivateAndUndo() AS HRESULT
AFX\CAXHOST\CAXHOST_IOLEINPLACESITE.INC|CAxHost_IOleInPlaceSite.OnPosRectChange|CAxHost_IOleInPlaceSite.OnPosRectChange(BYVAL lprcPosRect AS LPCRECT) AS HRESULT
AFX\CAXHOST\CAXHOST_ISERVICEPROVIDER.INC|AfxAxHostQueryService|AfxAxHostQueryService( BYVAL punk AS IUnknown PTR , BYVAL guidService AS REFGUID , BYVAL riid AS REFGUID , BYVAL ppvOut AS LPVOID PTR ) AS HRESULT
AFX\CAXHOST\CAXHOST_ISERVICEPROVIDER.INC|CAxHost_IServiceProvider.QueryInterface|CAxHost_IServiceProvider.QueryInterface(BYVAL riid AS REFIID, BYVAL ppvObj AS LPVOID PTR) AS HRESULT
AFX\CAXHOST\CAXHOST_ISERVICEPROVIDER.INC|CAxHost_IServiceProvider.AddRef|CAxHost_IServiceProvider.AddRef() AS ULONG
AFX\CAXHOST\CAXHOST_ISERVICEPROVIDER.INC|CAxHost_IServiceProvider.Release|CAxHost_IServiceProvider.Release() AS DWORD
AFX\CAXHOST\CAXHOST_ISERVICEPROVIDER.INC|CAxHost_IServiceProvider.QueryService|CAxHost_IServiceProvider.QueryService(BYVAL guidService AS const GUID const PTR, BYVAL riid AS const IID const PTR, BYVAL ppvObject AS ANY PTR PTR) AS HRESULT
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.QueryInterface|CDocHostUIHandler2.QueryInterface(BYVAL riid AS REFIID, BYVAL ppvObj AS LPVOID PTR) AS HRESULT
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.AddRef|CDocHostUIHandler2.AddRef() AS ULONG
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.Release|CDocHostUIHandler2.Release() AS ULONG
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.ShowContextMenu|CDocHostUIHandler2.ShowContextMenu(BYVAL dwID AS DWORD, BYVAL ppt AS POINT PTR, BYVAL pcmdtReserved AS IUnknown PTR, BYVAL pdispReserved AS IDispatch PTR) AS HRESULT
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.GetHostInfo|CDocHostUIHandler2.GetHostInfo(BYVAL pInfo AS DOCHOSTUIINFO PTR) AS HRESULT
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.ShowUI|CDocHostUIHandler2.ShowUI(BYVAL dwID AS DWORD, BYVAL pActiveObject AS IOleInPlaceActiveObject PTR, BYVAL pCommandTarget AS IOleCommandTarget PTR, BYVAL pFrame AS IOleInPlaceFrame PTR, BYVAL pDoc AS IOleInPlaceUIWindow PTR) AS HRESULT
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.HideUI|CDocHostUIHandler2.HideUI() AS HRESULT
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.UpdateUI|CDocHostUIHandler2.UpdateUI() AS HRESULT
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.EnableModeless|CDocHostUIHandler2.EnableModeless(BYVAL fEnable AS WINBOOL) AS HRESULT
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.OnDocWindowActivate|CDocHostUIHandler2.OnDocWindowActivate(BYVAL fActivate AS WINBOOL) AS HRESULT
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.OnFrameWindowActivate|CDocHostUIHandler2.OnFrameWindowActivate(BYVAL fActivate AS WINBOOL) AS HRESULT
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.ResizeBorder|CDocHostUIHandler2.ResizeBorder(BYVAL prcBorder AS LPCRECT, BYVAL pUIWindow AS IOleInPlaceUIWindow PTR, BYVAL frameWindow AS WINBOOL) AS HRESULT
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.TranslateAccelerator|CDocHostUIHandler2.TranslateAccelerator(BYVAL lpMsg AS LPMSG, BYVAL pguidCmdGroup AS const GUID PTR, BYVAL nCmdID AS DWORD) AS HRESULT
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.GetOptionKeyPath|CDocHostUIHandler2.GetOptionKeyPath(BYVAL pchKey AS LPOLESTR PTR, BYVAL dw AS DWORD) AS HRESULT
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.GetDropTarget|CDocHostUIHandler2.GetDropTarget(BYVAL pDropTarget AS IDropTarget PTR, BYVAL ppDropTarget AS IDropTarget PTR PTR) AS HRESULT
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.GetExternal|CDocHostUIHandler2.GetExternal(BYVAL ppDispatch AS IDispatch PTR PTR) AS HRESULT
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.TranslateUrl|CDocHostUIHandler2.TranslateUrl(BYVAL dwTranslate AS DWORD, BYVAL pchURLIn AS LPWSTR, BYVAL ppchURLOut AS LPWSTR PTR) AS HRESULT
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.FilterDataObject|CDocHostUIHandler2.FilterDataObject(BYVAL pDO AS IDataObject PTR, BYVAL ppDORet AS IDataObject PTR PTR) AS HRESULT
AFX\CAXHOST\CDOCHOSTUIHANDLER.INC|CDocHostUIHandler2.GetOverrideKeyPath|CDocHostUIHandler2.GetOverrideKeyPath(BYVAL pchKey AS LPOLESTR PTR, BYVAL dw AS DWORD) AS HRESULT
AFX\CAXHOST\CHTMLDOCUMENTEVENTS.INC|CHTMLDocumentEvents2.QueryInterface|CHTMLDocumentEvents2.QueryInterface(BYVAL riid AS REFIID, BYVAL ppvObj AS LPVOID PTR) AS HRESULT
AFX\CAXHOST\CHTMLDOCUMENTEVENTS.INC|CHTMLDocumentEvents2.AddRef|CHTMLDocumentEvents2.AddRef() AS ULONG
AFX\CAXHOST\CHTMLDOCUMENTEVENTS.INC|CHTMLDocumentEvents2.Release|CHTMLDocumentEvents2.Release() AS ULONG
AFX\CAXHOST\CHTMLDOCUMENTEVENTS.INC|CHTMLDocumentEvents2.GetTypeInfoCount|CHTMLDocumentEvents2.GetTypeInfoCount(BYVAL pctInfo AS UINT PTR) AS HRESULT
AFX\CAXHOST\CHTMLDOCUMENTEVENTS.INC|CHTMLDocumentEvents2.GetTypeInfo|CHTMLDocumentEvents2.GetTypeInfo(BYVAL iTInfo AS UINT, BYVAL lcid AS LCID, BYVAL ppTInfo AS ITypeInfo PTR PTR) AS HRESULT
AFX\CAXHOST\CHTMLDOCUMENTEVENTS.INC|CHTMLDocumentEvents2.GetIDsOfNames|CHTMLDocumentEvents2.GetIDsOfNames(BYVAL riid AS CONST IID CONST PTR, BYVAL rgszNames AS LPOLESTR PTR, BYVAL cNames AS UINT, BYVAL lcid AS LCID, BYVAL rgDispId AS DISPID PTR) AS HRESULT
AFX\CAXHOST\CHTMLDOCUMENTEVENTS.INC|CHTMLDocumentEvents2.Invoke|CHTMLDocumentEvents2.Invoke(BYVAL dispIdMember AS DISPID, BYVAL riid AS CONST IID CONST PTR, BYVAL lcid AS LCID, BYVAL wFlags AS WORD, BYVAL pDispParams AS DISPPARAMS PTR, BYVAL pVarResult AS VARIANT PTR, BYVAL pExcepInfo AS EXCEPINFO PTR, BYVAL puArgErr AS UINT PTR) AS HRESULT
AFX\CAXHOST\CWEBBROWSEREVENTS.INC|CWebBrowserEvents.QueryInterface|CWebBrowserEvents.QueryInterface(BYVAL riid AS REFIID, BYVAL ppvObj AS LPVOID PTR) AS HRESULT
AFX\CAXHOST\CWEBBROWSEREVENTS.INC|CWebBrowserEvents.AddRef|CWebBrowserEvents.AddRef() AS ULONG
AFX\CAXHOST\CWEBBROWSEREVENTS.INC|CWebBrowserEvents.Release|CWebBrowserEvents.Release() AS ULONG
AFX\CAXHOST\CWEBBROWSEREVENTS.INC|CWebBrowserEvents.GetTypeInfoCount|CWebBrowserEvents.GetTypeInfoCount(BYVAL pctInfo AS UINT PTR) AS HRESULT
AFX\CAXHOST\CWEBBROWSEREVENTS.INC|CWebBrowserEvents.GetTypeInfo|CWebBrowserEvents.GetTypeInfo(BYVAL iTInfo AS UINT, BYVAL lcid AS LCID, BYVAL ppTInfo AS ITypeInfo PTR PTR) AS HRESULT
AFX\CAXHOST\CWEBBROWSEREVENTS.INC|CWebBrowserEvents.GetIDsOfNames|CWebBrowserEvents.GetIDsOfNames(BYVAL riid AS CONST IID CONST PTR, BYVAL rgszNames AS LPOLESTR PTR, BYVAL cNames AS UINT, BYVAL lcid AS LCID, BYVAL rgDispId AS DISPID PTR) AS HRESULT
AFX\CAXHOST\CWEBBROWSEREVENTS.INC|CWebBrowserEvents.Invoke|CWebBrowserEvents.Invoke(BYVAL dispIdMember AS DISPID, BYVAL riid AS CONST IID CONST PTR, BYVAL lcid AS LCID, BYVAL wFlags AS WORD, BYVAL pDispParams AS DISPPARAMS PTR, BYVAL pVarResult AS VARIANT PTR, BYVAL pExcepInfo AS EXCEPINFO PTR, BYVAL puArgErr AS UINT PTR) AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.AxHostPtr|CWebCtx.AxHostPtr() AS CAxHost PTR
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.BrowserPtr|CWebCtx.BrowserPtr() AS Afx_IWebBrowser2 PTR
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.hWindow|CWebCtx.hWindow() AS HWND
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.CtrlID|CWebCtx.CtrlID() AS LONG
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.Navigate|CWebCtx.Navigate(BYVAL pwszUrl AS WSTRING PTR, BYVAL Flags AS VARIANT PTR = NULL, BYVAL TargetFrameName AS VARIANT PTR = NULL, BYVAL PostData AS VARIANT PTR = NULL, BYVAL Headers AS VARIANT PTR = NULL) AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.Navigate|CWebCtx.Navigate(BYVAL vUrl AS VARIANT PTR, BYVAL Flags AS VARIANT PTR = NULL, BYVAL TargetFrameName AS VARIANT PTR = NULL, BYVAL PostData AS VARIANT PTR = NULL, BYVAL Headers AS VARIANT PTR = NULL) AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.WaitForPageLoad|CWebCtx.WaitForPageLoad(BYVAL dbTimeout AS DOUBLE = 10) AS tagREADYSTATE
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.Advise|CWebCtx.Advise() AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.Unadvise|CWebCtx.Unadvise() AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.SetUIHandler|CWebCtx.SetUIHandler() AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.SetEventProc|CWebCtx.SetEventProc(BYVAL pwszEventName AS WSTRING PTR, BYVAL pProc AS ANY PTR) AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.SetUIEventProc|CWebCtx.SetUIEventProc(BYVAL pwszEventName AS WSTRING PTR, BYVAL pProc AS ANY PTR) AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.SetFocus|CWebCtx.SetFocus() AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.WriteHtml|CWebCtx.WriteHtml(BYREF cwsHtml AS CWSTR, BYVAL cr AS BOOLEAN = FALSE) AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.GetBodyInnerText|CWebCtx.GetBodyInnerText() AS CWSTR
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.GetBodyInnerHtml|CWebCtx.GetBodyInnerHtml() AS CWSTR
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.GetActiveElementId|CWebCtx.GetActiveElementId() AS CWSTR
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.GetElementValueById|CWebCtx.GetElementValueById(BYREF cwsId AS CWSTR) AS VARIANT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.SetElementValueById|CWebCtx.SetElementValueById(BYREF cwsId AS CWSTR, BYVAL vValue AS VARIANT) AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.GetElementInnerHtmlById|CWebCtx.GetElementInnerHtmlById(BYREF cwsId AS CWSTR) AS CWSTR
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.SetElementInnerHtmlById|CWebCtx.SetElementInnerHtmlById(BYREF cwsId AS CWSTR, BYREF cwsHtml AS CWSTR) AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.SetElementFocusById|CWebCtx.SetElementFocusById(BYREF cwsId AS CWSTR) AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.GoBack|CWebCtx.GoBack() AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.GoForward|CWebCtx.GoForward() AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.GoHome|CWebCtx.GoHome() AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.GoSearch|CWebCtx.GoSearch() AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.Refresh|CWebCtx.Refresh() AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.Refresh2|CWebCtx.Refresh2(BYVAL nLevel AS RefreshConstants) AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.Stop|CWebCtx.Stop() AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.QueryStatusWB|CWebCtx.QueryStatusWB(BYVAL cmdID AS OLECMDID) AS OLECMDF
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.ExecWB|CWebCtx.ExecWB(BYVAL cmdID AS OLECMDID, BYVAL cmdexecopt AS OLECMDEXECOPT, BYVAL pvaIn AS VARIANT PTR = NULL, BYVAL pvaOut AS VARIANT PTR = NULL) AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.PrintPreview|CWebCtx.PrintPreview() AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.PrintPage|CWebCtx.PrintPage(BYVAL bPromptUser AS BOOLEAN = TRUE) AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.PageSetUp|CWebCtx.PageSetUp() AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.PageProperties|CWebCtx.PageProperties() AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.SaveAs|CWebCtx.SaveAs() AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.Find|CWebCtx.Find() AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.ShowSource|CWebCtx.ShowSource() AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|CWebCtx.InternetOptions|CWebCtx.InternetOptions() AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|AfxGetBrowserPtr|AfxGetBrowserPtr(BYVAL hwnd AS HWND, BYVAL cID AS WORD) AS Afx_IWebBrowser2 PTR
AFX\CAXHOST\CWEBCTX.INC|AfxWriteHtml|AfxWriteHtml(BYVAL pWebBrowser AS Afx_IWebBrowser2 PTR, BYREF cwsHtml AS CWSTR, BYVAL cr AS BOOLEAN = FALSE) AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|AfxGetActiveElementId|AfxGetActiveElementId(BYVAL pWebBrowser AS Afx_IWebBrowser2 PTR) AS CWSTR
AFX\CAXHOST\CWEBCTX.INC|AfxGetElementValueById|AfxGetElementValueById(BYVAL pWebBrowser AS Afx_IWebBrowser2 PTR, BYREF cwsId AS CWSTR) AS VARIANT
AFX\CAXHOST\CWEBCTX.INC|AfxSetElementValueById|AfxSetElementValueById(BYVAL pWebBrowser AS Afx_IWebBrowser2 PTR, BYREF cwsId AS CWSTR, BYVAL vValue AS VARIANT) AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|AfxGetElementInnerHtmlById|AfxGetElementInnerHtmlById(BYVAL pWebBrowser AS Afx_IWebBrowser2 PTR, BYREF cwsId AS CWSTR) AS CWSTR
AFX\CAXHOST\CWEBCTX.INC|AfxSetElementInnerHtmlById|AfxSetElementInnerHtmlById(BYVAL pWebBrowser AS Afx_IWebBrowser2 PTR, BYREF cwsId AS CWSTR, BYREF cwsHtml AS CWSTR) AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|AfxSetElementFocusById|AfxSetElementFocusById(BYVAL pWebBrowser AS Afx_IWebBrowser2 PTR, BYREF cwsId AS CWSTR) AS HRESULT
AFX\CAXHOST\CWEBCTX.INC|AfxGetBodyInnerText|AfxGetBodyInnerText(BYVAL pWebBrowser AS Afx_IWebBrowser2 PTR) AS CWSTR
AFX\CAXHOST\CWEBCTX.INC|AfxGetBodyInnerHtml|AfxGetBodyInnerHtml(BYVAL pWebBrowser AS Afx_IWebBrowser2 PTR) AS CWSTR
AFX\CCBCOLOR.INC|CCbColor.CCbColorProc|CCbColor.CCbColorProc(BYVAL hwnd AS HWND, BYVAL uMsg AS UINT, BYVAL wParam AS WPARAM, BYVAL lParam AS LPARAM) AS LRESULT
AFX\CCBCOLOR.INC|CCbColor.hWindow|CCbColor.hWindow() AS HWND
AFX\CCBCOLOR.INC|CCbColor.GetQBColor|CCbColor.GetQBColor(BYVAL hwnd AS HWND, BYVAL c AS LONG, BYVAL dlg AS LONG) AS COLORREF
AFX\CCBCOLOREX.INC|CCbColorEx.CCbColorExProc|CCbColorEx.CCbColorExProc( BYVAL hwnd AS HWND, BYVAL uMsg AS UINT, BYVAL wParam AS WPARAM, BYVAL lParam AS LPARAM, BYVAL uIdSubclass AS UINT_PTR, BYVAL dwRefData AS DWORD_PTR ) AS LRESULT
AFX\CCBCOLOREX.INC|CCbColorEx.hWindow|CCbColorEx.hWindow() AS HWND
AFX\CCBCOLOREX.INC|CCbColorEx.GetQBColor|CCbColorEx.GetQBColor(BYVAL hwnd AS HWND, BYVAL c AS LONG, BYVAL dlg AS LONG) AS COLORREF
AFX\CCDAUDIO.INC|CCDAudio.GetLastError|CCDAudio.GetLastError() AS MCIERROR
AFX\CCDAUDIO.INC|CCDAudio.SetError|CCDAudio.SetError(BYVAL dwError AS MCIERROR) AS MCIERROR
AFX\CCDAUDIO.INC|CCDAudio.GetErrorString|CCDAudio.GetErrorString(BYVAL dwError AS MCIERROR = 0) AS CWSTR
AFX\CCDAUDIO.INC|CCDAudio.Open|CCDAudio.Open() AS MCIERROR
AFX\CCDAUDIO.INC|CCDAudio.Close|CCDAudio.Close() AS MCIERROR
AFX\CCDAUDIO.INC|CCDAudio.IsReady|CCDAudio.IsReady() AS BOOLEAN
AFX\CCDAUDIO.INC|CCDAudio.IsMediaInserted|CCDAudio.IsMediaInserted() AS BOOLEAN
AFX\CCDAUDIO.INC|CCDAudio.IsPaused|CCDAudio.IsPaused() AS BOOLEAN
AFX\CCDAUDIO.INC|CCDAudio.IsStopped|CCDAudio.IsStopped() AS BOOLEAN
AFX\CCDAUDIO.INC|CCDAudio.IsPlaying|CCDAudio.IsPlaying() AS BOOLEAN
AFX\CCDAUDIO.INC|CCDAudio.IsSeeking|CCDAudio.IsSeeking() AS BOOLEAN
AFX\CCDAUDIO.INC|CCDAudio.OpenDoor|CCDAudio.OpenDoor() AS MCIERROR
AFX\CCDAUDIO.INC|CCDAudio.CloseDoor|CCDAudio.CloseDoor() AS MCIERROR
AFX\CCDAUDIO.INC|CCDAudio.Play|CCDAudio.Play() AS MCIERROR
AFX\CCDAUDIO.INC|CCDAudio.PlayFrom|CCDAudio.PlayFrom(BYVAL nTrack AS LONG) AS MCIERROR
AFX\CCDAUDIO.INC|CCDAudio.PlayFromTo|CCDAudio.PlayFromTo(BYVAL nStartTrack AS LONG, BYVAL nEndTrack AS LONG) AS MCIERROR
AFX\CCDAUDIO.INC|CCDAudio.Stop|CCDAudio.Stop() AS MCIERROR
AFX\CCDAUDIO.INC|CCDAudio.Pause|CCDAudio.Pause() AS MCIERROR
AFX\CCDAUDIO.INC|CCDAudio.GetTracksCount|CCDAudio.GetTracksCount() AS LONG
AFX\CCDAUDIO.INC|CCDAudio.GetCurrentTrack|CCDAudio.GetCurrentTrack() AS LONG
AFX\CCDAUDIO.INC|CCDAudio.GetTrackLengthString|CCDAudio.GetTrackLengthString(BYVAL nTrack AS LONG) AS CWSTR
AFX\CCDAUDIO.INC|CCDAudio.GetTrackLength|CCDAudio.GetTrackLength(BYVAL nTrack AS LONG) AS LONG
AFX\CCDAUDIO.INC|CCDAudio.GetAllTracksLengthString|CCDAudio.GetAllTracksLengthString() AS CWSTR
AFX\CCDAUDIO.INC|CCDAudio.GetAllTracksLength|CCDAudio.GetAllTracksLength() AS LONG
AFX\CCDAUDIO.INC|CCDAudio.GetCurrentPosString|CCDAudio.GetCurrentPosString() AS CWSTR
AFX\CCDAUDIO.INC|CCDAudio.GetCurrentPos|CCDAudio.GetCurrentPos() AS LONG
AFX\CCDAUDIO.INC|CCDAudio.ToStart|CCDAudio.ToStart() AS MCIERROR
AFX\CCDAUDIO.INC|CCDAudio.ToEnd|CCDAudio.ToEnd() AS MCIERROR
AFX\CCDAUDIO.INC|CCDAudio.Forward|CCDAudio.Forward() AS BOOLEAN
AFX\CCDAUDIO.INC|CCDAudio.Backward|CCDAudio.Backward() AS BOOLEAN
AFX\CCDAUDIO.INC|CCDAudio.GetTrackStartTimeString|CCDAudio.GetTrackStartTimeString(BYVAL nTrack AS LONG) AS CWSTR
AFX\CCDAUDIO.INC|CCDAudio.GetTrackStartTime|CCDAudio.GetTrackStartTime(BYVAL nTrack AS LONG) AS LONG
AFX\CCDOMAIL.INC|CCDOMessage.GetLastResult|CCDOMessage.GetLastResult() AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.SetResult|CCDOMessage.SetResult(BYVAL Result AS HRESULT) AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.ConfigValue|CCDOMessage.ConfigValue(BYREF cvField AS CVAR, BYREF cvValue AS CVAR) AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.ConfigUpdate|CCDOMessage.ConfigUpdate() AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.BCC|CCDOMessage.BCC(BYREF cbsBCC AS CBSTR) AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.CC|CCDOMessage.CC(BYREF cbsCC AS CBSTR) AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.From|CCDOMessage.From(BYREF cbsFrom AS CBSTR) AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.Sender|CCDOMessage.Sender(BYREF cbsSender AS CBSTR) AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.Recipients|CCDOMessage.Recipients(BYREF cbsTo AS CBSTR) AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.ReplyTo|CCDOMessage.ReplyTo(BYREF cbsReplyTo AS CBSTR) AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.Keywords|CCDOMessage.Keywords(BYREF cbsKeywords AS CBSTR) AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.Organization|CCDOMessage.Organization(BYREF cbsOrganization AS CBSTR) AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.Subject|CCDOMessage.Subject(BYREF cbsSubject AS CBSTR) AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.TextBody|CCDOMessage.TextBody(BYREF cbsTextBody AS CBSTR) AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.HTMLBody|CCDOMessage.HTMLBody(BYREF cbsHTMLBody AS CBSTR) AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.DSNOptions|CCDOMessage.DSNOptions(BYVAL pDSNOptions AS CdoDSNOptions) AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.MimeFormatted|CCDOMessage.MimeFormatted(BYVAL pMimeFormatted AS VARIANT_BOOL) AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.MDNRequested|CCDOMessage.MDNRequested(BYVAL pMDNRequested AS VARIANT_BOOL) AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.AddAttachment|CCDOMessage.AddAttachment(BYREF cbsURL AS CBSTR, BYREF cbsUserName AS CBSTR = "", BYREF cbsPassword AS CBSTR = "") AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.Send|CCDOMessage.Send() AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.FollowUpTo|CCDOMessage.FollowUpTo(BYREF cbsFollowUpTo AS CBSTR) AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.Newsgroups|CCDOMessage.Newsgroups(BYREF cbsNewsgroups AS CBSTR) AS HRESULT
AFX\CCDOMAIL.INC|CCDOMessage.Post|CCDOMessage.Post() AS HRESULT
AFX\CCLRHOST.INC|CCLRHost.CreateDomain|CCLRHost.CreateDomain(BYREF wszFriendlyName AS WSTRING, BYVAL pIdentityArray AS IUnknown PTR) AS Afx__AppDomain PTR
AFX\CCLRHOST.INC|CCLRHost.UnloadDomain|CCLRHost.UnloadDomain(BYVAL pDomain AS Afx__AppDomain PTR) AS HRESULT
AFX\CCLRHOST.INC|CCLRHost.CreateInstance|CCLRHost.CreateInstance(BYREF AssemblyName AS CBSTR, BYREF typeName AS CBSTR) AS IDispatch PTR
AFX\CCLRHOST.INC|CCLRHost.CreateInstance|CCLRHost.CreateInstance(BYVAL pDomain AS Afx__AppDomain PTR, BYREF AssemblyName AS CBSTR, BYREF typeName AS CBSTR) AS IDispatch PTR
AFX\CCLRHOST.INC|CCLRHost.CreateInstanceFrom|CCLRHost.CreateInstanceFrom(BYREF AssemblyName AS CBSTR, BYREF typeName AS CBSTR) AS IDispatch PTR
AFX\CCLRHOST.INC|CCLRHost.CreateInstanceFrom|CCLRHost.CreateInstanceFrom(BYVAL pDomain AS Afx__AppDomain PTR, BYREF AssemblyName AS CBSTR, BYREF typeName AS CBSTR) AS IDispatch PTR
AFX\CCOMPLEX.INC|CComplex.IsInf|CComplex.IsInf(BYVAL x AS DOUBLE) AS LONG
AFX\CCOMPLEX.INC|CComplex.IsInfinity|CComplex.IsInfinity(BYVAL x AS DOUBLE) AS LONG
AFX\CCOMPLEX.INC|CComplex.ArcCosH|CComplex.ArcCosH(BYVAL x AS DOUBLE) AS DOUBLE
AFX\CCOMPLEX.INC|CComplex.ArcTanH|CComplex.ArcTanH(BYVAL x AS DOUBLE) AS DOUBLE
AFX\CCOMPLEX.INC|CComplex.CSwap|CComplex.CSwap(BYREF z AS CComplex)
AFX\CCOMPLEX.INC|CComplex.CNegate|
AFX\CCOMPLEX.INC|CComplex.CNeg|
AFX\CCOMPLEX.INC|CComplex.CNegative|
AFX\CCOMPLEX.INC|CComplex.CAdd|CComplex.CAdd(BYREF z AS CComplex) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CAdd|CComplex.CAdd(BYVAL x AS DOUBLE, BYVAL y AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CAddReal|CComplex.CAddReal(BYVAL x AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CAddImag|CComplex.CAddImag(BYVAL y AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CSub|CComplex.CSub(BYREF z AS CComplex) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CSub|CComplex.CSub(BYVAL x AS DOUBLE, BYVAL y AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CSubReal|CComplex.CSubReal(BYVAL x AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CSubImag|CComplex.CSubImag(BYVAL y AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CMul|CComplex.CMul(BYREF z AS CComplex) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CMul|CComplex.CMul(BYVAL x AS DOUBLE, BYVAL y AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CMulReal|CComplex.CMulReal(BYVAL x AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CMulImag|CComplex.CMulImag(BYVAL y AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CDiv|CComplex.CDiv(BYREF z AS CComplex) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CDiv|CComplex.CDiv(BYVAL x AS DOUBLE, BYVAL y AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CDivReal|CComplex.CDivReal(BYVAL x AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CDivImag|CComplex.CDivImag(BYVAL y AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CConjugate|CComplex.CConjugate() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CConj|CComplex.CConj() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArg|CComplex.CArg() AS DOUBLE
AFX\CCOMPLEX.INC|CComplex.CArgument|CComplex.CArgument() AS DOUBLE
AFX\CCOMPLEX.INC|CComplex.CPhase|CComplex.CPhase() AS DOUBLE
AFX\CCOMPLEX.INC|CComplex.CAbs|CComplex.CAbs() AS DOUBLE
AFX\CCOMPLEX.INC|CComplex.CMagnitude|CComplex.CMagnitude() AS DOUBLE
AFX\CCOMPLEX.INC|CComplex.CAbs2|CComplex.CAbs2() AS DOUBLE
AFX\CCOMPLEX.INC|CComplex.CNorm|CComplex.CNorm() AS DOUBLE
AFX\CCOMPLEX.INC|CComplex.CLogAbs|CComplex.CLogAbs() AS DOUBLE
AFX\CCOMPLEX.INC|CComplex.CReciprocal|CComplex.CReciprocal() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CInverse|CComplex.CInverse() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CFromPolarCoordinates|CComplex.CFromPolarCoordinates(BYVAL magnitude AS DOUBLE, BYVAL phase AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CSqr|CComplex.CSqr() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CSqrt|CComplex.CSqrt() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CSqr|CComplex.CSqr(BYVAL value AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CSqrt|CComplex.CSqrt(BYVAL value AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CExp|CComplex.CExp() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CLog|CComplex.CLog() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CLog|CComplex.CLog(BYVAL baseValue AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CLog10|CComplex.CLog10() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CPow|CComplex.CPow(BYREF power AS CComplex) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CPow|CComplex.CPow(BYVAL power AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CSin|CComplex.CSin() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CCos|CComplex.CCos() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CSec|CComplex.CSec() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CCsc|CComplex.CCsc() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CTan|CComplex.CTan() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CCot|CComplex.CCot() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArcSinReal|CComplex.CArcSinReal(BYVAL value AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CASinReal|CComplex.CASinReal(BYVAL value AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArcSin|CComplex.CArcSin() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CASin|CComplex.CASin() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArcCosReal|CComplex.CArcCosReal(BYVAL value AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CACosReal|CComplex.CACosReal(BYVAL value AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArcCos|CComplex.CArcCos() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CACos|CComplex.CACos() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArcSecReal|CComplex.CArcSecReal(BYVAL value AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CASecReal|CComplex.CASecReal(BYVAL value AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArcSec|CComplex.CArcSec() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CASec|CComplex.CASec() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArcCscReal|CComplex.CArcCscReal(BYVAL value AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CACscReal|CComplex.CACscReal(BYVAL value AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArcCsc|CComplex.CArcCsc() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CACsc|CComplex.CACsc() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArcTan|CComplex.CArcTan() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CATan|CComplex.CATan() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArcCot|CComplex.CArcCot() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CACot|CComplex.CACot() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CSinH|CComplex.CSinH() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CCosH|CComplex.CCosH() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CSecH|CComplex.CSecH() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CCscH|CComplex.CCscH() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CTanH|CComplex.CTanH() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CCotH|CComplex.CCotH() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArcSinH|CComplex.CArcSinH() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CASinH|CComplex.CASinH() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArcCosHReal|CComplex.CArcCosHReal(BYVAL value AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CACosHReal|CComplex.CACosHReal(BYVAL value AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArcCosH|CComplex.CArcCosH() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CACosH|CComplex.CACosH() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArcSecH|CComplex.CArcSecH() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CASecH|CComplex.CASecH() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArcCscH|CComplex.CArcCscH() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CACscH|CComplex.CACscH() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArcTanHReal|CComplex.CArcTanHReal(BYVAL value AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CATanHReal|CComplex.CATanHReal(BYVAL value AS DOUBLE) AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArcTanH|CComplex.CArcTanH() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CATanH|CComplex.CATanH() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CArcCotH|CComplex.CArcCotH() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CACotH|CComplex.CACotH() AS CComplex
AFX\CCOMPLEX.INC|CComplex.CSgn|CComplex.CSgn() AS LONG
AFX\CCUR.INC|CCur.SetInteger|CCur.SetInteger(BYVAL nInteger AS LONGLONG) AS HRESULT
AFX\CCUR.INC|CCur.SetFraction|CCur.SetFraction(BYVAL nFraction AS SHORT) AS HRESULT
AFX\CCUR.INC|CCur.SetValues|CCur.SetValues(BYVAL nInteger AS LONGLONG, BYVAL nFraction AS SHORT) AS HRESULT
AFX\CCUR.INC|CCur.Round|CCur.Round(BYVAL nDecimals AS LONG) AS CCUR
AFX\CCUR.INC|CCur.GetInteger|CCur.GetInteger() AS LONGLONG
AFX\CCUR.INC|CCur.GetFraction|CCur.GetFraction() AS SHORT
AFX\CCUR.INC|CCur.ToVar|CCur.ToVar() AS VARIANT
AFX\CCUR.INC|CCur.FormatCurrency|CCur.FormatCurrency(BYVAL iNumDig AS LONG = -1, BYVAL iIncLead AS LONG = -2, BYVAL iUseParens AS LONG = -2, BYVAL iGroup AS LONG = -2, BYVAL dwFlags AS DWORD = 0) AS STRING
AFX\CCUR.INC|CCur.FormatCurrencyW|CCur.FormatCurrencyW(BYVAL iNumDig AS LONG = -1, BYVAL iIncLead AS LONG = -2, BYVAL iUseParens AS LONG = -2, BYVAL iGroup AS LONG = -2, BYVAL dwFlags AS DWORD = 0) AS CBSTR
AFX\CCUR.INC|CCur.FormatNumber|CCur.FormatNumber(BYVAL iNumDig AS LONG = -1, BYVAL iIncLead AS LONG = -2, BYVAL iUseParens AS LONG = -2, BYVAL iGroup AS LONG = -2, BYVAL dwFlags AS DWORD = 0) AS STRING
AFX\CCUR.INC|CCur.FormatNumberW|CCur.FormatNumberW(BYVAL iNumDig AS LONG = -1, BYVAL iIncLead AS LONG = -2, BYVAL iUseParens AS LONG = -2, BYVAL iGroup AS LONG = -2, BYVAL dwFlags AS DWORD = 0) AS CBSTR
AFX\CDEC.INC|CDec.DecAbs|CDec.DecAbs() AS CDec
AFX\CDEC.INC|CDec.DecFix|CDec.DecFix() AS CDec
AFX\CDEC.INC|CDec.DecInt|CDec.DecInt() AS CDec
AFX\CDEC.INC|CDec.DecRound|CDec.DecRound(BYVAL nDecimals AS LONG) AS CDec
AFX\CDEC.INC|CDec.ToVar|CDec.ToVar() AS VARIANT
AFX\CDEC.INC|CDec.Scale|CDec.Scale() AS UBYTE
AFX\CDEC.INC|CDec.Sign|CDec.Sign() AS UBYTE
AFX\CDEC.INC|CDec.IsSigned|CDec.IsSigned() AS BOOLEAN
AFX\CDEC.INC|CDec.IsUnsigned|CDec.IsUnsigned() AS BOOLEAN
AFX\CDICOBJ.INC|CDicObj.DispPtr|CDicObj.DispPtr() AS ANY PTR
AFX\CDICOBJ.INC|CDicObj.GetLastResult|CDicObj.GetLastResult() AS HRESULT
AFX\CDICOBJ.INC|CDicObj.SetResult|CDicObj.SetResult(BYVAL Result AS HRESULT) AS HRESULT
AFX\CDICOBJ.INC|CDicObj.Add|CDicObj.Add(BYREF cvKey AS CVAR, BYREF cvItem AS CVAR) AS HRESULT
AFX\CDICOBJ.INC|CDicObj.Count|CDicObj.Count() AS LONG
AFX\CDICOBJ.INC|CDicObj.Exists|CDicObj.Exists(BYREF cvKey AS CVAR) AS BOOLEAN
AFX\CDICOBJ.INC|CDicObj.Items|CDicObj.Items() AS CVAR
AFX\CDICOBJ.INC|CDicObj.Keys|CDicObj.Keys() AS CVAR
AFX\CDICOBJ.INC|CDicObj.Remove|CDicObj.Remove(BYREF cvKey AS CVAR) AS HRESULT
AFX\CDICOBJ.INC|CDicObj.RemoveAll|CDicObj.RemoveAll() AS HRESULT
AFX\CDICOBJ.INC|CDicObj.NewEnum|CDicObj.NewEnum() AS IUnknown PTR
AFX\CDICOBJ.INC|CDicObj.HashVal|CDicObj.HashVal(BYREF cvKey AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.DispPtr|CDispInvoke.DispPtr() AS IDispatch PTR
AFX\CDISPINVOKE.INC|CDispInvoke.DispObj|CDispInvoke.DispObj() AS IDispatch PTR
AFX\CDISPINVOKE.INC|CDispInvoke.vptr|CDispInvoke.vptr() AS IDIspatch PTR PTR
AFX\CDISPINVOKE.INC|CDispInvoke.Clear|
AFX\CDISPINVOKE.INC|CDispInvoke.Attach|CDispInvoke.Attach(BYVAL pdisp AS IDispatch PTR, BYVAL fAddRef AS BOOLEAN = FALSE) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.Attach|CDispInvoke.Attach(BYVAL pvar AS VARIANT PTR) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.Detach|CDispInvoke.Detach() AS IDispatch PTR
AFX\CDISPINVOKE.INC|CDispInvoke.Detach|CDispInvoke.Detach(BYVAL pvar AS VARIANT PTR) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.GetLastResult|CDispInvoke.GetLastResult() AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.SetResult|CDispInvoke.SetResult(BYVAL Result AS HRESULT) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.GetLcid|CDispInvoke.GetLcid() AS LCID
AFX\CDISPINVOKE.INC|CDispInvoke.SetLcid|CDispInvoke.SetLcid(BYVAL _lcid AS LCID)
AFX\CDISPINVOKE.INC|CDispInvoke.GetArgErr|CDispInvoke.GetArgErr() AS UINT
AFX\CDISPINVOKE.INC|CDispInvoke.GetErrorCode|CDispInvoke.GetErrorCode() AS SCODE
AFX\CDISPINVOKE.INC|CDispInvoke.GetVarResult|CDispInvoke.GetVarResult() AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.GetDescription|CDispInvoke.GetDescription() AS CWSTR
AFX\CDISPINVOKE.INC|CDispInvoke.GetSource|CDispInvoke.GetSource() AS CWSTR
AFX\CDISPINVOKE.INC|CDispInvoke.GetHelpFile|CDispInvoke.GetHelpFile() AS CWSTR
AFX\CDISPINVOKE.INC|CDispInvoke.DispInvoke|CDispInvoke.DispInvoke(BYVAL wFlags AS WORD, BYVAL dispIdMember AS DISPID, BYVAL prgArgs AS VARIANT PTR = NULL, BYVAL cArgs AS UINT = 0, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.DispInvoke|CDispInvoke.DispInvoke(BYVAL wFlags AS WORD, BYVAL pwszName AS WSTRING PTR, BYVAL prgArgs AS VARIANT PTR = NULL, BYVAL cArgs AS UINT = 0, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.Get|CDispInvoke.Get(BYVAL dispID AS DISPID, BYVAL prgArgs AS VARIANT PTR = NULL, BYVAL cArgs AS UINT = 0, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.Get|CDispInvoke.Get(BYVAL pwszName AS WSTRING PTR, BYVAL prgArgs AS VARIANT PTR = NULL, BYVAL cArgs AS UINT = 0, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.Get|CDispInvoke.Get(BYVAL dispID AS DISPID) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Get|CDispInvoke.Get(BYVAL pwszName AS WSTRING PTR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Get|CDispInvoke.Get(BYVAL dispID AS DISPID, BYREF cvArg AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Get|CDispInvoke.Get(BYVAL pwszName AS WSTRING PTR, BYREF cvArg AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Get|CDispInvoke.Get(BYVAL dispID AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Get|CDispInvoke.Get(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Set|CDispInvoke.Set(BYVAL dispID AS DISPID, BYREF cvArg AS CVAR) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.Set|CDispInvoke.Set(BYVAL dispID AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.Set|CDispInvoke.Set(BYVAL dispID AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.Set|CDispInvoke.Set(BYVAL dispID AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.Set|CDispInvoke.Set(BYVAL pwszName AS WSTRING PTR, BYREF cvArg AS CVAR) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.Set|CDispInvoke.Set(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.Set|CDispInvoke.Set(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.Set|CDispInvoke.Set(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.SetRef|CDispInvoke.SetRef(BYVAL dispID AS DISPID, BYREF cvArg AS CVAR) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.SetRef|CDispInvoke.SetRef(BYVAL dispID AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.SetRef|CDispInvoke.SetRef(BYVAL dispID AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.SetRef|CDispInvoke.SetRef(BYVAL pwszName AS WSTRING PTR, BYREF cvArg AS CVAR) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.SetRef|CDispInvoke.SetRef(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.SetRef|CDispInvoke.SetRef(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR) AS HRESULT
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL dispId AS DISPID) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL dispId AS DISPID, BYREF cvArg AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL dispId AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL dispId AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL dispId AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL dispId AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL dispId AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL dispId AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL dispId AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR, BYREF cvArg8 aS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL dispId AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR, BYREF cvArg8 aS CVAR, BYREF cvArg9 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL dispId AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR, BYREF cvArg8 aS CVAR, BYREF cvArg9 AS CVAR, BYREF cvArg10 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL dispId AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR, BYREF cvArg8 aS CVAR, BYREF cvArg9 AS CVAR, BYREF cvArg10 AS CVAR, BYREF cvArg11 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL dispId AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR, BYREF cvArg8 aS CVAR, BYREF cvArg9 AS CVAR, BYREF cvArg10 AS CVAR, BYREF cvArg11 AS CVAR, BYREF cvArg12 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL dispId AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR, BYREF cvArg8 aS CVAR, BYREF cvArg9 AS CVAR, BYREF cvArg10 AS CVAR, BYREF cvArg11 AS CVAR, BYREF cvArg12 AS CVAR, BYREF cvArg13 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL dispId AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR, BYREF cvArg8 aS CVAR, BYREF cvArg9 AS CVAR, BYREF cvArg10 AS CVAR, BYREF cvArg11 AS CVAR, BYREF cvArg12 AS CVAR, BYREF cvArg13 AS CVAR, BYREF cvArg14 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL dispId AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR, BYREF cvArg8 aS CVAR, BYREF cvArg9 AS CVAR, BYREF cvArg10 AS CVAR, BYREF cvArg11 AS CVAR, BYREF cvArg12 AS CVAR, BYREF cvArg13 AS CVAR, BYREF cvArg14 AS CVAR, BYREF cvArg15 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL dispId AS DISPID, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR, BYREF cvArg8 aS CVAR, BYREF cvArg9 AS CVAR, BYREF cvArg10 AS CVAR, BYREF cvArg11 AS CVAR, BYREF cvArg12 AS CVAR, BYREF cvArg13 AS CVAR, BYREF cvArg14 AS CVAR, BYREF cvArg15 AS CVAR, BYREF cvArg16 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL pwszName AS WSTRING PTR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL pwszName AS WSTRING PTR, BYREF cvArg AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR, BYREF cvArg8 aS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR, BYREF cvArg8 aS CVAR, BYREF cvArg9 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR, BYREF cvArg8 aS CVAR, BYREF cvArg9 AS CVAR, BYREF cvArg10 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR, BYREF cvArg8 aS CVAR, BYREF cvArg9 AS CVAR, BYREF cvArg10 AS CVAR, BYREF cvArg11 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR, BYREF cvArg8 aS CVAR, BYREF cvArg9 AS CVAR, BYREF cvArg10 AS CVAR, BYREF cvArg11 AS CVAR, BYREF cvArg12 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR, BYREF cvArg8 aS CVAR, BYREF cvArg9 AS CVAR, BYREF cvArg10 AS CVAR, BYREF cvArg11 AS CVAR, BYREF cvArg12 AS CVAR, BYREF cvArg13 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR, BYREF cvArg8 aS CVAR, BYREF cvArg9 AS CVAR, BYREF cvArg10 AS CVAR, BYREF cvArg11 AS CVAR, BYREF cvArg12 AS CVAR, BYREF cvArg13 AS CVAR, BYREF cvArg14 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR, BYREF cvArg8 aS CVAR, BYREF cvArg9 AS CVAR, BYREF cvArg10 AS CVAR, BYREF cvArg11 AS CVAR, BYREF cvArg12 AS CVAR, BYREF cvArg13 AS CVAR, BYREF cvArg14 AS CVAR, BYREF cvArg15 AS CVAR) AS CVAR
AFX\CDISPINVOKE.INC|CDispInvoke.Invoke|CDispInvoke.Invoke(BYVAL pwszName AS WSTRING PTR, BYREF cvArg1 AS CVAR, BYREF cvArg2 AS CVAR, BYREF cvArg3 AS CVAR, BYREF cvArg4 AS CVAR, BYREF cvArg5 AS CVAR, BYREF cvArg6 AS CVAR, BYREF cvArg7 AS CVAR, BYREF cvArg8 aS CVAR, BYREF cvArg9 AS CVAR, BYREF cvArg10 AS CVAR, BYREF cvArg11 AS CVAR, BYREF cvArg12 AS CVAR, BYREF cvArg13 AS CVAR, BYREF cvArg14 AS CVAR, BYREF cvArg15 AS CVAR, BYREF cvArg16 AS CVAR) AS CVAR
AFX\CDSAUDIO.INC|CDSAudio.Cleanup|
AFX\CDSAUDIO.INC|CDSAudio.Load|CDSAudio.Load(BYREF wszFileName AS WSTRING) AS HRESULT
AFX\CDSAUDIO.INC|CDSAudio.Run|CDSAudio.Run() AS HRESULT
AFX\CDSAUDIO.INC|CDSAudio.Pause|CDSAudio.Pause() AS HRESULT
AFX\CDSAUDIO.INC|CDSAudio.Stop|CDSAudio.Stop() AS LONG
AFX\CDSAUDIO.INC|CDSAudio.WaitForCompletion|CDSAudio.WaitForCompletion(BYVAL msTimeout AS LONG, BYREF EvCode AS LONG) AS HRESULT
AFX\CDSAUDIO.INC|CDSAudio.GetVolume|CDSAudio.GetVolume() AS LONG
AFX\CDSAUDIO.INC|CDSAudio.SetVolume|CDSAudio.SetVolume(BYVAL nVol AS LONG) AS HRESULT
AFX\CDSAUDIO.INC|CDSAudio.GetBalance|CDSAudio.GetBalance() AS LONG
AFX\CDSAUDIO.INC|CDSAudio.SetBalance|CDSAudio.SetBalance(BYVAL nBalance AS LONG) AS HRESULT
AFX\CDSAUDIO.INC|CDSAudio.GetDuration|CDSAudio.GetDuration() AS LONGLONG
AFX\CDSAUDIO.INC|CDSAudio.GetCurrentPosition|CDSAudio.GetCurrentPosition() AS LONGLONG
AFX\CDSAUDIO.INC|CDSAudio.SetPositions|CDSAudio.SetPositions(BYREF pCurrent AS LONGLONG, BYREF pStop AS LONGLONG, BYVAL bAbsolutePositioning AS BOOLEAN) AS HRESULT
AFX\CDSAUDIO.INC|CDSAudio.SetNotifyWindow|CDSAudio.SetNotifyWindow(BYVAL hwnd AS HWND, BYVAL lMsg AS LONG, BYVAL lInstanceData AS LONG_PTR) AS HRESULT
AFX\CDSAUDIO.INC|CDSAudio.GetEvent|CDSAudio.GetEvent(BYREF lEventCode AS LONG, BYREF lParam1 AS LONG_PTR, BYREF lParam2 AS LONG_PTR, BYVAL msTimeout AS LONG = 0) AS HRESULT
AFX\CFILESYS.INC|CFileSys.GetLastResult|CFileSys.GetLastResult() AS HRESULT
AFX\CFILESYS.INC|CFileSys.SetResult|CFileSys.SetResult(BYVAL Result AS HRESULT) AS HRESULT
AFX\CFILESYS.INC|CFileSys.DriveExists|CFileSys.DriveExists(BYREF cbsDrive AS CBSTR) AS BOOLEAN
AFX\CFILESYS.INC|CFileSys.FolderExists|CFileSys.FolderExists(BYREF cbsFolderSpec AS CBSTR) AS BOOLEAN
AFX\CFILESYS.INC|CFileSys.IsDriveReady|CFileSys.IsDriveReady(BYREF cbsDrive AS CBSTR) AS BOOLEAN
AFX\CFILESYS.INC|CFileSys.FileExists|CFileSys.FileExists(BYREF cbsFileSpec AS CBSTR) AS BOOLEAN
AFX\CFILESYS.INC|CFileSys.GetDriveName|CFileSys.GetDriveName(BYREF cbsPathSpec AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.GetFolderName|CFileSys.GetFolderName(BYREF cbsPathSpec AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.GetFolderShortPath|CFileSys.GetFolderShortPath(BYREF cbsFolder AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.GetFolderShortName|CFileSys.GetFolderShortName(BYREF cbsFolder AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.GetFileName|CFileSys.GetFileName(BYREF cbsPathSpec AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.GetExtensionName|CFileSys.GetExtensionName(BYREF cbsPathSpec AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.GetBaseName|CFileSys.GetBaseName(BYREF cbsPathSpec AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.GetAbsolutePathName|CFileSys.GetAbsolutePathName(BYREF cbsPathSpec AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.GetTempName|CFileSys.GetTempName() AS CBSTR
AFX\CFILESYS.INC|CFileSys.GetDriveShareName|CFileSys.GetDriveShareName(BYREF cbsDrive AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.GetDriveFileSystem|CFileSys.GetDriveFileSystem(BYREF cbsDrive AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.GetDriveType|CFileSys.GetDriveType(BYREF cbsDrive AS CBSTR) AS DRIVETYPECONST
AFX\CFILESYS.INC|CFileSys.GetFolderType|CFileSys.GetFolderType(BYREF cbsFolder AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.GetFileType|CFileSys.GetFileType(BYREF cbsFile AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.GetFileVersion|CFileSys.GetFileVersion(BYREF cbsFile AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.GetParentFolderName|CFileSys.GetParentFolderName(BYREF cbsFolder AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.SetFolderName|CFileSys.SetFolderName(BYREF cbsFolder AS CBSTR, BYREF cbsName AS CBSTR) AS HRESULT
AFX\CFILESYS.INC|CFileSys.GetFolderDriveLetter|CFileSys.GetFolderDriveLetter(BYREF cbsFolder AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.BuildPath|CFileSys.BuildPath(BYREF cbsPath AS CBSTR, BYREF cbsName AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.GetSerialNumber|CFileSys.GetSerialNumber(BYREF cbsDrive AS CBSTR) AS LONG
AFX\CFILESYS.INC|CFileSys.GetVolumeName|CFileSys.GetVolumeName(BYREF cbsDrive AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.SetVolumeName|CFileSys.SetVolumeName(BYREF cbsDrive AS CBSTR, BYREF cbsName AS CBSTR) AS HRESULT
AFX\CFILESYS.INC|CFileSys.GetNumDrives|CFileSys.GetNumDrives() AS LONG
AFX\CFILESYS.INC|CFileSys.GetNumSubFolders|CFileSys.GetNumSubFolders(BYREF cbsFolder AS CBSTR) AS LONG
AFX\CFILESYS.INC|CFileSys.GetNumFiles|CFileSys.GetNumFiles(BYREF cbsFolder AS CBSTR) AS LONG
AFX\CFILESYS.INC|CFileSys.IsRootFolder|CFileSys.IsRootFolder(BYREF cbsFolder AS CBSTR) AS BOOLEAN
AFX\CFILESYS.INC|CFileSys.DriveLetters|CFileSys.DriveLetters() AS CBSTR
AFX\CFILESYS.INC|CFileSys.GetStandardStream|CFileSys.GetStandardStream(BYVAL StandardStreamType AS STANDARDSTREAMTYPES, BYVAL bUnicode AS VARIANT_BOOL = FALSE) AS Afx_ITextStream PTR
AFX\CFILESYS.INC|CFileSys.GetFileSize|CFileSys.GetFileSize(BYREF cbsFile AS CBSTR) AS LONG
AFX\CFILESYS.INC|CFileSys.SetFileName|CFileSys.SetFileName(BYREF cbsFile AS CBSTR, BYREF cbsName AS CBSTR) AS HRESULT
AFX\CFILESYS.INC|CFileSys.GetFileShortPath|CFileSys.GetFileShortPath(BYREF cbsFile AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.GetFileShortName|CFileSys.GetFileShortName(BYREF cbsFile AS CBSTR) AS CBSTR
AFX\CFILESYS.INC|CFileSys.GetFileAttributes|CFileSys.GetFileAttributes(BYREF cbsFile AS CBSTR) AS FILEATTRIBUTE
AFX\CFILESYS.INC|CFileSys.SetFileAttributes|CFileSys.SetFileAttributes(BYREF cbsFile AS CBSTR, BYVAL lAttr AS FILEATTRIBUTE) AS HRESULT
AFX\CFILESYS.INC|CFileSys.GetFileDateCreated|CFileSys.GetFileDateCreated(BYREF cbsFile AS CBSTR) AS DATE_
AFX\CFILESYS.INC|CFileSys.GetFileDateLastModified|CFileSys.GetFileDateLastModified(BYREF cbsFile AS CBSTR) AS DATE_
AFX\CFILESYS.INC|CFileSys.GetFileDateLastAccessed|CFileSys.GetFileDateLastAccessed(BYREF cbsFile AS CBSTR) AS DATE_
AFX\CFILESYS.INC|CFileSys.GetFolderSize|CFileSys.GetFolderSize(BYREF cbsFolder AS CBSTR) AS LONG
AFX\CFILESYS.INC|CFileSys.GetFolderAttributes|CFileSys.GetFolderAttributes(BYREF cbsFolder AS CBSTR) AS FILEATTRIBUTE
AFX\CFILESYS.INC|CFileSys.SetFolderAttributes|CFileSys.SetFolderAttributes(BYREF cbsFolder AS CBSTR, BYVAL lAttr AS FILEATTRIBUTE) AS HRESULT
AFX\CFILESYS.INC|CFileSys.GetFolderDateCreated|CFileSys.GetFolderDateCreated(BYREF cbsFolder AS CBSTR) AS DATE_
AFX\CFILESYS.INC|CFileSys.GetFolderDateLastModified|CFileSys.GetFolderDateLastModified(BYREF cbsFolder AS CBSTR) AS DATE_
AFX\CFILESYS.INC|CFileSys.GetFolderDateLastAccessed|CFileSys.GetFolderDateLastAccessed(BYREF cbsFolder AS CBSTR) AS DATE_
AFX\CFILESYS.INC|CFileSys.GetDriveAvailableSpace|CFileSys.GetDriveAvailableSpace(BYREF cbsDrive AS CBSTR) AS DOUBLE
AFX\CFILESYS.INC|CFileSys.GetDriveFreeSpace|CFileSys.GetDriveFreeSpace(BYREF cbsDrive AS CBSTR) AS DOUBLE
AFX\CFILESYS.INC|CFileSys.GetDriveTotalSize|CFileSys.GetDriveTotalSize(BYREF cbsDrive AS CBSTR) AS DOUBLE
AFX\CFILESYS.INC|CFileSys.CreateFolder|CFileSys.CreateFolder(BYREF cbsFolder AS CBSTR) AS Afx_IFolder PTR
AFX\CFILESYS.INC|CFileSys.DeleteFolder|CFileSys.DeleteFolder(BYREF cbsFolder AS CBSTR, BYVAL bForce AS VARIANT_BOOL = FALSE) AS HRESULT
AFX\CFILESYS.INC|CFileSys.MoveFolder|CFileSys.MoveFolder(BYREF cbsSource AS CBSTR, BYREF cbsDestination AS CBSTR) AS HRESULT
AFX\CFILESYS.INC|CFileSys.CopyFolder|CFileSys.CopyFolder(BYREF cbsSource AS CBSTR, BYREF cbsDestination AS CBSTR, BYVAL OverWriteFiles AS VARIANT_BOOL = -1) AS HRESULT
AFX\CFILESYS.INC|CFileSys.CopyFile|CFileSys.CopyFile(BYREF cbsSource AS CBSTR, BYREF cbsDestination AS CBSTR, BYVAL OverWriteFiles AS VARIANT_BOOL = -1) AS HRESULT
AFX\CFILESYS.INC|CFileSys.DeleteFile|CFileSys.DeleteFile(BYREF cbsFileSpec AS CBSTR, BYVAL bForce AS VARIANT_BOOL = FALSE) AS HRESULT
AFX\CFILESYS.INC|CFileSys.MoveFile|CFileSys.MoveFile(BYREF cbsSource AS CBSTR, BYREF cbsDestination AS CBSTR) AS HRESULT
AFX\CFILETIME.INC|CFileTimeSpan.SetTimeSpan|CFileTimeSpan.SetTimeSpan(BYVAL nspan AS LONGLONG)
AFX\CFILETIME.INC|CFileTimeSpan.GetTimeSpan|CFileTimeSpan.GetTimeSpan() AS LONGLONG
AFX\CFILETIME.INC|CFileTimeSpan.Day|CFileTimeSpan.Day() AS ULONGLONG
AFX\CFILETIME.INC|CFileTimeSpan.Hour|CFileTimeSpan.Hour() AS ULONGLONG
AFX\CFILETIME.INC|CFileTimeSpan.Minute|CFileTimeSpan.Minute() AS ULONGLONG
AFX\CFILETIME.INC|CFileTimeSpan.Second|CFileTimeSpan.Second() AS ULONGLONG
AFX\CFILETIME.INC|CFileTimeSpan.MilliSecond|CFileTimeSpan.MilliSecond() AS ULONGLONG
AFX\CFILETIME.INC|CFileTimeSpan.Week|CFileTimeSpan.Week() AS ULONGLONG
AFX\CFILETIME.INC|CFileTime.GetTime|CFileTime.GetTime() AS ULONGLONG
AFX\CFILETIME.INC|CFileTime.SetTime|CFileTime.SetTime(BYVAL nTime AS ULONGLONG)
AFX\CFILETIME.INC|CFileTime.GetCurrentTime|CFileTime.GetCurrentTime() AS CFileTime
AFX\CFILETIME.INC|CFileTime.UTCToLocal|CFileTime.UTCToLocal() AS CFileTime
AFX\CFILETIME.INC|CFileTime.LocalToUTC|CFileTime.LocalToUTC() AS CFileTime
AFX\CFILETIME.INC|CFileTime.Day|CFileTime.Day() AS ULONGLONG
AFX\CFILETIME.INC|CFileTime.Hour|CFileTime.Hour() AS ULONGLONG
AFX\CFILETIME.INC|CFileTime.Minute|CFileTime.Minute() AS ULONGLONG
AFX\CFILETIME.INC|CFileTime.Second|CFileTime.Second() AS ULONGLONG
AFX\CFILETIME.INC|CFileTime.MilliSecond|CFileTime.MilliSecond() AS ULONGLONG
AFX\CFILETIME.INC|CFileTime.Week|CFileTime.Week() AS ULONGLONG
AFX\CFILETIME.INC|CFileTime.GetAsFileTime|CFileTime.GetAsFileTime() AS FILETIME
AFX\CFILETIME.INC|CFileTime.GetAsSystemTime|CFileTime.GetAsSystemTime() AS SYSTEMTIME
AFX\CFILETIME.INC|CFileTime.Format|CFileTime.Format(BYREF wszFmt AS WSTRING) AS CWSTR
AFX\CFINDFILE.INC|CFindFile.Close|
AFX\CFINDFILE.INC|CFindFile.FindFile|CFindFile.FindFile(BYREF wszFileSpec AS WSTRING) AS LONG_PTR
AFX\CFINDFILE.INC|CFindFile.FindNext|CFindFile.FindNext() AS LONG
AFX\CFINDFILE.INC|CFindFile.FileAttributes|CFindFile.FileAttributes() AS DWORD
AFX\CFINDFILE.INC|CFindFile.IsDots|CFindFile.IsDots() AS BOOLEAN
AFX\CFINDFILE.INC|CFindFile.IsFile|CFindFile.IsFile() AS BOOLEAN
AFX\CFINDFILE.INC|CFindFile.IsFolder|CFindFile.IsFolder() AS BOOLEAN
AFX\CFINDFILE.INC|CFindFile.IsSystemFile|CFindFile.IsSystemFile() AS BOOLEAN
AFX\CFINDFILE.INC|CFindFile.IsHiddenFile|CFindFile.IsHiddenFile() AS BOOLEAN
AFX\CFINDFILE.INC|CFindFile.IsReadOnlyFile|CFindFile.IsReadOnlyFile() AS BOOLEAN
AFX\CFINDFILE.INC|CFindFile.IsTemporaryFile|CFindFile.IsTemporaryFile() AS BOOLEAN
AFX\CFINDFILE.INC|CFindFile.IsNormalFile|CFindFile.IsNormalFile() AS BOOLEAN
AFX\CFINDFILE.INC|CFindFile.IsCompressedFile|CFindFile.IsCompressedFile() AS BOOLEAN
AFX\CFINDFILE.INC|CFindFile.IsEncryptedFile|CFindFile.IsEncryptedFile() AS BOOLEAN
AFX\CFINDFILE.INC|CFindFile.IsNotContentIndexedFile|CFindFile.IsNotContentIndexedFile() AS BOOLEAN
AFX\CFINDFILE.INC|CFindFile.IsOffLineFile|CFindFile.IsOffLineFile() AS BOOLEAN
AFX\CFINDFILE.INC|CFindFile.IsReparsePointFile|CFindFile.IsReparsePointFile() AS BOOLEAN
AFX\CFINDFILE.INC|CFindFile.IsSparseFile|CFindFile.IsSparseFile() AS BOOLEAN
AFX\CFINDFILE.INC|CFindFile.MatchesMask|CFindFile.MatchesMask(BYVAL dwMask AS DWORD) AS BOOLEAN
AFX\CFINDFILE.INC|CFindFile.FileName|CFindFile.FileName() AS CWSTR
AFX\CFINDFILE.INC|CFindFile.FileNameX|CFindFile.FileNameX() AS CWSTR
AFX\CFINDFILE.INC|CFindFile.ShortFileName|CFindFile.ShortFileName() AS CWSTR
AFX\CFINDFILE.INC|CFindFile.FileExt|CFindFile.FileExt() AS CWSTR
AFX\CFINDFILE.INC|CFindFile.FilePath|CFindFile.FilePath() AS CWSTR
AFX\CFINDFILE.INC|CFindFile.FileURL|CFindFile.FileURL() AS CWSTR
AFX\CFINDFILE.INC|CFindFile.Root|CFindFile.Root() AS CWSTR
AFX\CFINDFILE.INC|CFindFile.FileSize|CFindFile.FileSize() AS ULONGLONG
AFX\CFINDFILE.INC|CFindFile.CreationTime|CFindFile.CreationTime() AS FILETIME
AFX\CFINDFILE.INC|CFindFile.LastAccessTime|CFindFile.LastAccessTime() AS FILETIME
AFX\CFINDFILE.INC|CFindFile.LastWriteTime|CFindFile.LastWriteTime() AS FILETIME
AFX\CGDIPLUS\CGDIPLUS.INC|CGpBase.RefCount|CGpBase.RefCount(BYVAL bIncrement AS BOOLEAN) AS LONG
AFX\CGDIPLUS\CGDIPLUS.INC|CGpBase.GetLastStatus|CGpBase.GetLastStatus() AS GpStatus
AFX\CGDIPLUS\CGDIPLUS.INC|CGpBase.SetStatus|CGpBase.SetStatus(BYVAL status AS GpStatus) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetEncoderParameterListSize|CGpImage.GetEncoderParameterListSize(BYVAL clsidEncoder AS GUID PTR) AS UINT
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetEncoderParameterList|CGpImage.GetEncoderParameterList(BYVAL clsidEncoder AS GUID PTR, BYVAL uSize AS UINT, BYVAL buffer AS EncoderParameters PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.Save|CGpImage.Save(BYVAL pwszFileName AS WSTRING PTR, BYVAL clsidEncoder AS GUID PTR, BYVAL encoderParams AS EncoderParameters PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.Save|CGpImage.Save(BYVAL pStream AS IStream PTR, BYVAL clsidEncoder AS GUID PTR, BYVAL encoderParams AS EncoderParameters PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.SaveAdd|CGpImage.SaveAdd(BYVAL encoderParams AS EncoderParameters PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.SaveAdd|CGpImage.SaveAdd(BYVAL pNewImage AS CGpImage PTR, BYVAL encoderParams AS EncoderParameters PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetType|CGpImage.GetType() AS ImageType
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetPhysicalDimension|CGpImage.GetPhysicalDimension(BYVAL psize AS SizeF PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetBounds|CGpImage.GetBounds(BYVAL srcRect AS RectF PTR, BYVAL srcUnit AS GpUnit PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetWidth|CGpImage.GetWidth() AS UINT
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetHeight|CGpImage.GetHeight() AS UINT
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetHorizontalResolution|CGpImage.GetHorizontalResolution() AS SINGLE
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetVerticalResolution|CGpImage.GetVerticalResolution() AS SINGLE
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetFlags|CGpImage.GetFlags() AS UINT
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetRawFormat|CGpImage.GetRawFormat(BYVAL guidformat AS GUID PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetPixelFormat|CGpImage.GetPixelFormat() AS PixelFormat
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetPaletteSize|CGpImage.GetPaletteSize() AS INT_
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetPalette|CGpImage.GetPalette(BYVAL pal AS ColorPalette PTR, BYVAL nSize AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.SetPalette|CGpImage.SetPalette(BYVAL pal AS ColorPalette PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetFrameDimensionsCount|CGpImage.GetFrameDimensionsCount() AS UINT
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetFrameDimensionsList|CGpImage.GetFrameDimensionsList(BYVAL dimensionIDs AS GUID PTR, BYVAL nCount AS UINT) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetFrameCount|CGpImage.GetFrameCount(BYVAL dimensionID AS GUID PTR) AS UINT
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.SelectActiveFrame|CGpImage.SelectActiveFrame(BYVAL dimensionID AS GUID PTR, BYVAL frameIndex AS UINT) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.RotateFlip|CGpImage.RotateFlip(BYVAL rotateFlipType AS RotateFlipType) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetPropertyCount|CGpImage.GetPropertyCount() AS UINT
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetPropertyIdList|CGpImage.GetPropertyIdList(BYVAL numOfProperty AS UINT, BYVAL list AS PROPID PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetPropertyItemSize|CGpImage.GetPropertyItemSize(BYVAL propId AS PROPID) AS UINT
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetPropertyItem|CGpImage.GetPropertyItem(BYVAL propId AS PROPID, BYVAL propSize AS UINT, BYVAL buffer AS PropertyItem PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetPropertySize|CGpImage.GetPropertySize(BYVAL totalBufferSize AS UINT PTR, BYVAL numProperties AS UINT PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetAllPropertyItems|CGpImage.GetAllPropertyItems(BYVAL totalBufferSize AS UINT, BYVAL numProperties AS UINT, BYVAL allItems AS PropertyItem PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.RemovePropertyItem|CGpImage.RemovePropertyItem(BYVAL propId AS PROPID) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.SetPropertyItem|CGpImage.SetPropertyItem(BYVAL pitem AS PropertyItem PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.FindFirstItem|CGpImage.FindFirstItem(BYVAL pitem AS ImageItemData PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.FindNextItem|CGpImage.FindNextItem(BYVAL pitem AS ImageItemData PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetItemData|CGpImage.GetItemData(BYVAL pitem AS ImageItemData PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.Clone|CGpImage.Clone(BYVAL pCloneImage AS CGpImage PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpImage.GetThumbnailImage|CGpImage.GetThumbnailImage(BYVAL thumbWidth AS UINT, BYVAL thumbHeight AS UINT, BYVAL pThumbnail AS CGpImage PTR, BYVAL pCallback AS ANY PTR = NULL, BYVAL callbackData AS ANY PTR = NULL) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpBitmap.GetHBITMAP|CGpBitmap.GetHBITMAP(BYVAL colorBackground AS ARGB, BYVAL hbmReturn AS HBITMAP PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpBitmap.GetHICON|CGpBitmap.GetHICON(BYVAL hiconReturn AS HICON PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpBitmap.Clone|CGpBitmap.Clone(BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE, BYVAL pxFormat AS PixelFormat, BYVAL pCloneBitmap AS CGpBitmap PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpBitmap.Clone|CGpBitmap.Clone(BYVAL x AS INT_, BYVAL y AS INT_, BYVAL nWidth AS INT_, BYVAL nHeight AS INT_, BYVAL pxFormat AS PixelFormat, BYVAL pCloneBitmap AS CGpBitmap PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpBitmap.Clone|CGpBitmap.Clone(BYVAL rcf AS GpRectF PTR, BYVAL pxFormat AS PixelFormat, BYVAL pCloneBitmap AS CGpBitmap PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpBitmap.Clone|CGpBitmap.Clone(BYVAL rc AS GpRect PTR, BYVAL pxFormat AS PixelFormat, BYVAL pCloneBitmap AS CGpBitmap PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpBitmap.LockBits|CGpBitmap.LockBits(BYVAL rc AS GpRect PTR, BYVAL flags AS UINT, BYVAL pxFormat AS PixelFormat, BYVAL lockedBitmapData AS BitmapData PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpBitmap.UnlockBits|CGpBitmap.UnlockBits(BYVAL lockedBitmapData AS BitmapData PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpBitmap.GetPixel|CGpBitmap.GetPixel(BYVAL x AS LONG, BYVAL y AS LONG, BYVAL colour AS ARGB PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpBitmap.SetPixel|CGpBitmap.SetPixel(BYVAL x AS LONG, BYVAL y AS LONG, BYVAL colour AS ARGB) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpBitmap.SetResolution|CGpBitmap.SetResolution(BYVAL xdpi AS SINGLE, BYVAL ydpi AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpBitmap.InitializePalette|CGpBitmap.InitializePalette(BYVAL colourPalette AS ColorPalette PTR, BYVAL nPaletteType AS PaletteType, BYVAL optimalColors AS INT_, BYVAL useTransparentColor AS BOOL, BYVAL pBitmap AS CGpBitmap PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpBitmap.ConvertFormat|CGpBitmap.ConvertFormat(BYVAL pxFormat AS PixelFormat, BYVAL nDitherType AS DitherType, BYVAL nPaletteType AS PaletteType, BYVAL colourPalette AS ColorPalette PTR, BYVAL alphaThresholdPercent AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpBitmap.GetHistogram|CGpBitmap.GetHistogram(BYVAL nFormat AS HistogramFormat, BYVAL NumberOfEntries AS UINT, BYVAL channel0 AS UINT PTR, BYVAL channel1 AS UINT PTR, BYVAL channel2 AS UINT PTR, BYVAL channel3 AS UINT PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpBitmap.GetHistogramSize|CGpBitmap.GetHistogramSize(BYVAL nFormat AS HistogramFormat, BYVAL NumberOfEntries AS UINT PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpMetafile.GetMetafileHeader|CGpMetafile.GetMetafileHeader(BYVAL hEmf AS HENHMETAFILE, BYVAL mh AS MetafileHeader PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpMetafile.GetMetafileHeader|CGpMetafile.GetMetafileHeader(BYVAL pwsFileName AS WSTRING PTR, BYVAL mh AS MetafileHeader PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpMetafile.GetMetafileHeader|CGpMetafile.GetMetafileHeader(BYVAL pStream AS IStream PTR, BYVAL mh AS MetafileHeader PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpMetafile.GetMetafileHeader|CGpMetafile.GetMetafileHeader(BYVAL mh AS MetafileHeader PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpMetafile.GetHENHMETAFILE|CGpMetafile.GetHENHMETAFILE() AS HENHMETAFILE
AFX\CGDIPLUS\CGPBITMAP.INC|CGpMetafile.PlayRecord|CGpMetafile.PlayRecord(BYVAL recordType AS EmfPlusRecordType, BYVAL flags AS UINT, BYVAL dataSize AS UINT, BYVAL pData AS BYTE PTR) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpMetafile.SetDownLevelRasterizationLimit|CGpMetafile.SetDownLevelRasterizationLimit(BYVAL metafileRasterizationLimitDpi AS UINT) AS GpStatus
AFX\CGDIPLUS\CGPBITMAP.INC|CGpMetafile.GetDownLevelRasterizationLimit|CGpMetafile.GetDownLevelRasterizationLimit() AS UINT
AFX\CGDIPLUS\CGPBITMAP.INC|CGpMetafile.EmfToWmfBits|CGpMetafile.EmfToWmfBits(BYVAL hEmf AS HENHMETAFILE, BYVAL cbData16 AS UINT, BYVAL pData16 AS BYTE PTR, BYVAL iMapMode AS INT_ = MM_ANISOTROPIC, BYVAL eFlags AS INT_ = EmfToWmfBitsFlagsDefault) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpBrush.Clone|CGpBrush.Clone(BYVAL pBrush AS CGpBrush PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpBrush.GetType|CGpBrush.GetType() AS GpBrushType
AFX\CGDIPLUS\CGPBRUSH.INC|CGpSolidBrush.GetColor|CGpSolidBrush.GetColor(BYVAL colour AS ARGB PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpSolidBrush.GetColor|CGpSolidBrush.GetColor() AS ARGB
AFX\CGDIPLUS\CGPBRUSH.INC|CGpSolidBrush.SetColor|CGpSolidBrush.SetColor(BYVAL colour AS ARGB) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpTextureBrush.SetTransform|CGpTextureBrush.SetTransform(BYVAL pMatrix AS CGpMatrix PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpTextureBrush.GetTransform|CGpTextureBrush.GetTransform(BYVAL pMatrix AS CGpMatrix PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpTextureBrush.ResetTransform|CGpTextureBrush.ResetTransform() AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpTextureBrush.MultiplyTransform|CGpTextureBrush.MultiplyTransform(BYVAL pMatrix AS CGpMatrix PTR, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpTextureBrush.TranslateTransform|CGpTextureBrush.TranslateTransform(BYVAL dx AS SINGLE, BYVAL dy AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpTextureBrush.ScaleTransform|CGpTextureBrush.ScaleTransform(BYVAL sx AS SINGLE, BYVAL sy AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpTextureBrush.RotateTransform|CGpTextureBrush.RotateTransform(BYVAL angle AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpTextureBrush.SetWrapMode|CGpTextureBrush.SetWrapMode(BYVAL nWrapMode AS WrapMode) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpTextureBrush.GetWrapMode|CGpTextureBrush.GetWrapMode() AS WrapMode
AFX\CGDIPLUS\CGPBRUSH.INC|CGpTextureBrush.GetImage|CGpTextureBrush.GetImage(BYVAL pImage AS CGpImage PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.SetLinearColors|CGpLinearGradientBrush.SetLinearColors(BYVAL color1 AS ARGB, BYVAL color2 AS ARGB) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.GetLinearColors|CGpLinearGradientBrush.GetLinearColors(BYVAL colors AS ARGB PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.GetRectangle|CGpLinearGradientBrush.GetRectangle(BYVAL rc AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.GetRectangle|CGpLinearGradientBrush.GetRectangle(BYVAL rc AS GpRect PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.SetGammaCorrection|CGpLinearGradientBrush.SetGammaCorrection(BYVAL useGammaCorrection AS BOOL) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.GetGammaCorrection|CGpLinearGradientBrush.GetGammaCorrection() AS BOOLEAN
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.GetBlendCount|CGpLinearGradientBrush.GetBlendCount() AS INT_
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.SetBlend|CGpLinearGradientBrush.SetBlend(BYVAL blendFactors AS SINGLE PTR, BYVAL blendPositions AS SINGLE PTR, BYVAL nCount AS LONG) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.GetBlend|CGpLinearGradientBrush.GetBlend(BYVAL blendFactors AS SINGLE PTR, BYVAL blendPositions AS SINGLE PTR, BYVAL nCount AS LONG) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.GetInterpolationColorCount|CGpLinearGradientBrush.GetInterpolationColorCount() AS INT_
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.SetInterpolationColors|CGpLinearGradientBrush.SetInterpolationColors(BYVAL presetColors AS ARGB PTR, BYVAL blendPositions AS SINGLE PTR, BYVAL nCount AS LONG) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.GetInterpolationColors|CGpLinearGradientBrush.GetInterpolationColors(BYVAL presetColors AS ARGB PTR, BYVAL blendPositions AS SINGLE PTR, BYVAL nCount AS LONG) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.SetBlendBellShape|CGpLinearGradientBrush.SetBlendBellShape(BYVAL focus AS SINGLE, BYVAL scale AS SINGLE = 1.0) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.SetBlendTriangularShape|CGpLinearGradientBrush.SetBlendTriangularShape(BYVAL focus AS SINGLE, BYVAL scale AS SINGLE = 1.0) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.SetTransform|CGpLinearGradientBrush.SetTransform(BYVAL pMatrix AS CGpMatrix PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.GetTransform|CGpLinearGradientBrush.GetTransform(BYVAL pMatrix AS CGpMatrix PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.ResetTransform|CGpLinearGradientBrush.ResetTransform() AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.MultiplyTransform|CGpLinearGradientBrush.MultiplyTransform(BYVAL pMatrix AS CGpMatrix PTR, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.TranslateTransform|CGpLinearGradientBrush.TranslateTransform(BYVAL dx AS SINGLE, BYVAL dy AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.ScaleTransform|CGpLinearGradientBrush.ScaleTransform(BYVAL sx AS SINGLE, BYVAL sy AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.RotateTransform|CGpLinearGradientBrush.RotateTransform(BYVAL angle AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.SetWrapMode|CGpLinearGradientBrush.SetWrapMode(BYVAL nWrapMode AS WrapMode) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpLinearGradientBrush.GetWrapMode|CGpLinearGradientBrush.GetWrapMode() AS WrapMode
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.GetCenterColor|CGpPathGradientBrush.GetCenterColor(BYVAL colour AS ARGB PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.SetCenterColor|CGpPathGradientBrush.SetCenterColor(BYVAL colour AS ARGB) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.GetPointCount|CGpPathGradientBrush.GetPointCount() AS INT_
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.GetSurroundColorCount|CGpPathGradientBrush.GetSurroundColorCount() AS INT_
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.GetSurroundColors|CGpPathGradientBrush.GetSurroundColors(BYVAL colors AS ARGB PTR, BYVAL nCount AS INT_ PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.SetSurroundColors|CGpPathGradientBrush.SetSurroundColors(BYVAL colors AS ARGB PTR, BYVAL nCount AS INT_ PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.GetGraphicsPath|CGpPathGradientBrush.GetGraphicsPath(BYVAL pGraphPath AS CGpGraphicsPath PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.SetGraphicsPath|CGpPathGradientBrush.SetGraphicsPath(BYVAL pGraphPath AS CGpGraphicsPath PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.GetCenterPoint|CGpPathGradientBrush.GetCenterPoint(BYVAL pt AS GpPointF PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.GetCenterPoint|CGpPathGradientBrush.GetCenterPoint(BYVAL pt AS GpPoint PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.SetCenterPoint|CGpPathGradientBrush.SetCenterPoint(BYVAL pt AS GpPointF PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.SetCenterPoint|CGpPathGradientBrush.SetCenterPoint(BYVAL pt AS GpPoint PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.GetRectangle|CGpPathGradientBrush.GetRectangle(BYVAL rc AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.GetRectangle|CGpPathGradientBrush.GetRectangle(BYVAL rc AS GpRect PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.SetGammaCorrection|CGpPathGradientBrush.SetGammaCorrection(BYVAL useGammaCorrection AS BOOL) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.GetGammaCorrection|CGpPathGradientBrush.GetGammaCorrection() AS BOOLEAN
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.GetBlendCount|CGpPathGradientBrush.GetBlendCount() AS INT_
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.GetBlend|CGpPathGradientBrush.GetBlend(BYVAL blendFactors AS SINGLE PTR, BYVAL blendPositions AS SINGLE PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.SetBlend|CGpPathGradientBrush.SetBlend(BYVAL blendFactors AS SINGLE PTR, BYVAL blendPositions AS SINGLE PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.GetInterpolationColorCount|CGpPathGradientBrush.GetInterpolationColorCount() AS INT_
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.SetInterpolationColors|CGpPathGradientBrush.SetInterpolationColors(BYVAL presetColors AS ARGB PTR, BYVAL blendPositions AS SINGLE PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.GetInterpolationColors|CGpPathGradientBrush.GetInterpolationColors(BYVAL presetColors AS ARGB PTR, BYVAL blendPositions AS SINGLE PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.SetBlendBellShape|CGpPathGradientBrush.SetBlendBellShape(BYVAL focus AS SINGLE, BYVAL scale AS SINGLE = 1.0) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.SetBlendTriangularShape|CGpPathGradientBrush.SetBlendTriangularShape(BYVAL focus AS SINGLE, BYVAL scale AS SINGLE = 1.0) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.GetTransform|CGpPathGradientBrush.GetTransform(BYVAL pMatrix AS CGpMatrix PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.SetTransform|CGpPathGradientBrush.SetTransform(BYVAL pMatrix AS CGpMatrix PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.ResetTransform|CGpPathGradientBrush.ResetTransform() AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.MultiplyTransform|CGpPathGradientBrush.MultiplyTransform(BYVAL pMatrix AS CGpMatrix PTR, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.TranslateTransform|CGpPathGradientBrush.TranslateTransform(BYVAL dx AS SINGLE, BYVAL dy AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.ScaleTransform|CGpPathGradientBrush.ScaleTransform(BYVAL sx AS SINGLE, BYVAL sy AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.RotateTransform|CGpPathGradientBrush.RotateTransform(BYVAL angle AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.GetFocusScales|CGpPathGradientBrush.GetFocusScales(BYVAL xScale AS SINGLE PTR, BYVAL yScale AS SINGLE PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.SetFocusScales|CGpPathGradientBrush.SetFocusScales(BYVAL xScale AS SINGLE, BYVAL yScale AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.GetWrapMode|CGpPathGradientBrush.GetWrapMode() AS WrapMode
AFX\CGDIPLUS\CGPBRUSH.INC|CGpPathGradientBrush.SetWrapMode|CGpPathGradientBrush.SetWrapMode(BYVAL nWrapMode AS WrapMode) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpHatchBrush.GetHatchStyle|CGpHatchBrush.GetHatchStyle() AS HatchStyle
AFX\CGDIPLUS\CGPBRUSH.INC|CGpHatchBrush.GetForegroundColor|CGpHatchBrush.GetForegroundColor(BYVAL colour AS ARGB PTR) AS GpStatus
AFX\CGDIPLUS\CGPBRUSH.INC|CGpHatchBrush.GetBackgroundColor|CGpHatchBrush.GetBackgroundColor(BYVAL colour AS ARGB PTR) AS GpStatus
AFX\CGDIPLUS\CGPFONT.INC|CGpFont.GetLogFontA|CGpFont.GetLogFontA(BYVAL pGraphics AS CGpGraphics PTR, BYVAL pfA AS LOGFONTA PTR) AS GpStatus
AFX\CGDIPLUS\CGPFONT.INC|CGpFont.GetLogFontW|CGpFont.GetLogFontW(BYVAL pGraphics AS CGpGraphics PTR, BYVAL pfW AS LOGFONTW PTR) AS GpStatus
AFX\CGDIPLUS\CGPFONT.INC|CGpFont.Clone|CGpFont.Clone(BYVAL pCloneFont AS CGpFont PTR) AS GpStatus
AFX\CGDIPLUS\CGPFONT.INC|CGpFont.IsAvailable|CGpFont.IsAvailable() AS BOOLEAN
AFX\CGDIPLUS\CGPFONT.INC|CGpFont.GetFamily|CGpFont.GetFamily(BYVAL pFamily AS CGpFontFamily PTR) AS GpStatus
AFX\CGDIPLUS\CGPFONT.INC|CGpFont.GetStyle|CGpFont.GetStyle() AS INT_
AFX\CGDIPLUS\CGPFONT.INC|CGpFont.GetSize|CGpFont.GetSize() AS SINGLE
AFX\CGDIPLUS\CGPFONT.INC|CGpFont.GetUnit|CGpFont.GetUnit() AS GpUnit
AFX\CGDIPLUS\CGPFONT.INC|CGpFont.GetHeight|CGpFont.GetHeight(BYVAL pGraphics AS CGpGraphics PTR) AS SINGLE
AFX\CGDIPLUS\CGPFONT.INC|CGpFont.GetHeight|CGpFont.GetHeight(BYVAL dpi AS SINGLE) AS SINGLE
AFX\CGDIPLUS\CGPFONT.INC|CGpFontFamily.Clone|CGpFontFamily.Clone(BYVAL pFontFamily AS CGpFontFamily PTR) AS GpStatus
AFX\CGDIPLUS\CGPFONT.INC|CGpFontFamily.GenericSansSerif|CGpFontFamily.GenericSansSerif(BYVAL pFontFamily AS CGpFontFamily PTR) AS GpStatus
AFX\CGDIPLUS\CGPFONT.INC|CGpFontFamily.GenericSerif|CGpFontFamily.GenericSerif(BYVAL pFontFamily AS CGpFontFamily PTR) AS GpStatus
AFX\CGDIPLUS\CGPFONT.INC|CGpFontFamily.GenericMonospace|CGpFontFamily.GenericMonospace(BYVAL pFontFamily AS CGpFontFamily PTR) AS GpStatus
AFX\CGDIPLUS\CGPFONT.INC|CGpFontFamily.GetFamilyName|CGpFontFamily.GetFamilyName(BYVAL pwszName AS WSTRING PTR, BYVAL language AS LANGID = LANG_NEUTRAL) AS GpStatus
AFX\CGDIPLUS\CGPFONT.INC|CGpFontFamily.IsAvailable|CGpFontFamily.IsAvailable() AS BOOLEAN
AFX\CGDIPLUS\CGPFONT.INC|CGpFontFamily.IsStyleAvailable|CGpFontFamily.IsStyleAvailable(BYVAL nStyle AS INT_) AS BOOLEAN
AFX\CGDIPLUS\CGPFONT.INC|CGpFontFamily.GetEmHeight|CGpFontFamily.GetEmHeight(BYVAL nStyle AS INT_) AS UINT16
AFX\CGDIPLUS\CGPFONT.INC|CGpFontFamily.GetCellAscent|CGpFontFamily.GetCellAscent(BYVAL nStyle AS INT_) AS UINT16
AFX\CGDIPLUS\CGPFONT.INC|CGpFontFamily.GetCellDescent|CGpFontFamily.GetCellDescent(BYVAL nStyle AS INT_) AS UINT16
AFX\CGDIPLUS\CGPFONT.INC|CGpFontFamily.GetLineSpacing|CGpFontFamily.GetLineSpacing(BYVAL nStyle AS INT_) AS UINT16
AFX\CGDIPLUS\CGPFONT.INC|CGpFontCollection.GetFamilyCount|CGpFontCollection.GetFamilyCount() AS INT_
AFX\CGDIPLUS\CGPFONT.INC|CGpFontCollection.GetFamilies|CGpFontCollection.GetFamilies(BYVAL numSought AS INT_, BYVAL gpfamilies AS CGpFontFamily PTR, BYVAL numFound AS INT_ PTR) AS GpStatus
AFX\CGDIPLUS\CGPFONT.INC|CGpPrivateFontCollection.AddFontFile|CGpPrivateFontCollection.AddFontFile(BYVAL pwszFileName AS WSTRING PTR) AS GpStatus
AFX\CGDIPLUS\CGPFONT.INC|CGpPrivateFontCollection.AddMemoryFont|CGpPrivateFontCollection.AddMemoryFont(BYVAL pMemory AS ANY PTR, BYVAL length AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FromHDC|CGpGraphics.FromHDC(BYVAL hdc AS HDC) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FromHDC|CGpGraphics.FromHDC(BYVAL hdc AS HDC, BYVAL hDevice AS HANDLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FromHWND|CGpGraphics.FromHWND(BYVAL hwnd AS HWND, BYVAL icm AS BOOLEAN = FALSE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FromImage|CGpGraphics.FromImage(BYVAL pImage AS CGpImage PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.Flush|CGpGraphics.Flush(BYVAL intention AS FlushIntention = FlushIntentionFlush)
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetHDC|CGpGraphics.GetHDC() AS HDC
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.ReleaseHDC|CGpGraphics.ReleaseHDC(BYVAL hdc AS HDC)
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetRenderingOrigin|CGpGraphics.SetRenderingOrigin(BYVAL x AS INT_, BYVAL y AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetRenderingOrigin|CGpGraphics.GetRenderingOrigin(BYVAL x AS LONG PTR, BYVAL y AS LONG PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetCompositingMode|CGpGraphics.SetCompositingMode(BYVAL nCompositingMode AS CompositingMode) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetCompositingMode|CGpGraphics.GetCompositingMode() AS CompositingMode
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetCompositingQuality|CGpGraphics.SetCompositingQuality(BYVAL nQuality AS CompositingQuality) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetCompositingQuality|CGpGraphics.GetCompositingQuality() AS CompositingQuality
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetTextRenderingHint|CGpGraphics.SetTextRenderingHint(BYVAL newMode AS TextRenderingHint) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetTextRenderingHint|CGpGraphics.GetTextRenderingHint() AS TextRenderingHint
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetTextContrast|CGpGraphics.SetTextContrast(BYVAL contrast AS UINT) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetTextContrast|CGpGraphics.GetTextContrast() AS UINT
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetInterpolationMode|CGpGraphics.GetInterpolationMode() AS InterpolationMode
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetInterpolationMode|CGpGraphics.SetInterpolationMode(BYVAL interpolationMode AS LONG) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetSmoothingMode|CGpGraphics.GetSmoothingMode() AS SmoothingMode
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetSmoothingMode|CGpGraphics.SetSmoothingMode(BYVAL smoothingMode AS LONG) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetPixelOffsetMode|CGpGraphics.GetPixelOffsetMode() AS PixelOffsetMode
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetPixelOffsetMode|CGpGraphics.SetPixelOffsetMode(BYVAL nMode AS PixelOffsetMode) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetTransform|CGpGraphics.SetTransform(BYVAL pMatrix AS CGpMatrix PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.ResetTransform|CGpGraphics.ResetTransform() AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.MultiplyTransform|CGpGraphics.MultiplyTransform(BYVAL pMatrix AS CGpMatrix PTR, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.TranslateTransform|CGpGraphics.TranslateTransform(BYVAL dx AS SINGLE, BYVAL dy AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.ScaleTransform|CGpGraphics.ScaleTransform(BYVAL sx AS SINGLE, BYVAL sy AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.RotateTransform|CGpGraphics.RotateTransform(BYVAL angle AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetTransform|CGpGraphics.GetTransform(BYVAL pMatrix AS CGpMatrix PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetPageUnit|CGpGraphics.SetPageUnit(BYVAL unit AS GpUnit) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetPageScale|CGpGraphics.SetPageScale(BYVAL nScale AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetPageUnit|CGpGraphics.GetPageUnit() AS GpUnit
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetPageScale|CGpGraphics.GetPageScale() AS SINGLE
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetDpiX|CGpGraphics.GetDpiX() AS SINGLE
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetDpiY|CGpGraphics.GetDpiY() AS SINGLE
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.TransformPoints|CGpGraphics.TransformPoints(BYVAL destSpace AS CoordinateSpace, BYVAL srcSpace AS CoordinateSpace, BYVAL pts AS GpPointF PTR, BYVAL nCount AS LONG) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.TransformPoints|CGpGraphics.TransformPoints(BYVAL destSpace AS CoordinateSpace, BYVAL srcSpace AS CoordinateSpace, BYVAL pts AS GpPoint PTR, BYVAL nCount AS LONG) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetNearestColor|CGpGraphics.GetNearestColor(BYVAL colour AS ARGB PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawLine|CGpGraphics.DrawLine(BYVAL pPen AS CGpPen PTR, BYVAL x1 AS SINGLE, BYVAL y1 AS SINGLE, BYVAL x2 AS SINGLE, BYVAL y2 AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawLine|CGpGraphics.DrawLine(BYVAL pPen AS CGpPen PTR, BYVAL x1 AS INT_, BYVAL y1 AS INT_, BYVAL x2 AS INT_, BYVAL y2 AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawLine|CGpGraphics.DrawLine(BYVAL pPen AS CGpPen PTR, BYVAL pt1 AS GpPointF PTR, BYVAL pt2 AS GpPointF PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawLine|CGpGraphics.DrawLine(BYVAL pPen AS CGpPen PTR, BYVAL pt1 AS GpPoint PTR, BYVAL pt2 AS GpPoint PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawLines|CGpGraphics.DrawLines(BYVAL pPen AS CGpPen PTR, BYVAL pts AS GpPointF PTR, BYVAL nCount AS LONG) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawLines|CGpGraphics.DrawLines(BYVAL pPen AS CGpPen PTR, BYVAL pts AS GpPoint PTR, BYVAL nCount AS LONG) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawArc|CGpGraphics.DrawArc(BYVAL pPen AS CGpPen PTR, BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawArc|CGpGraphics.DrawArc(BYVAL pPen AS CGpPen PTR, BYVAL x AS INT_, BYVAL y AS INT_, BYVAL nWidth AS INT_, BYVAL nHeight AS INT_, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawArc|CGpGraphics.DrawArc(BYVAL pPen AS CGpPen PTR, BYVAL rc AS GpRectF PTR, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawArc|CGpGraphics.DrawArc(BYVAL pPen AS CGpPen PTR, BYVAL rc AS GpRect PTR, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawBezier|CGpGraphics.DrawBezier(BYVAL pPen AS CGpPen PTR, BYVAL x1 AS SINGLE, BYVAL y1 AS SINGLE, BYVAL x2 AS SINGLE, BYVAL y2 AS SINGLE, BYVAL x3 AS SINGLE, BYVAL y3 AS SINGLE, BYVAL x4 AS SINGLE, BYVAL y4 AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawBezier|CGpGraphics.DrawBezier(BYVAL pPen AS CGpPen PTR, BYVAL x1 AS INT_, BYVAL y1 AS INT_, BYVAL x2 AS INT_, BYVAL y2 AS INT_, BYVAL x3 AS INT_, BYVAL y3 AS INT_, BYVAL x4 AS INT_, BYVAL y4 AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawBezier|CGpGraphics.DrawBezier(BYVAL pPen AS CGpPen PTR, BYVAL pt1 AS GpPointF PTR, BYVAL pt2 AS GpPointF PTR, BYVAL pt3 AS GpPointF PTR, BYVAL pt4 AS GpPointF PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawBezier|CGpGraphics.DrawBezier(BYVAL pPen AS CGpPen PTR, BYVAL pt1 AS GpPoint PTR, BYVAL pt2 AS GpPoint PTR, BYVAL pt3 AS GpPoint PTR, BYVAL pt4 AS GpPoint PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawBeziers|CGpGraphics.DrawBeziers(BYVAL pPen AS CGpPen PTR, BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawBeziers|CGpGraphics.DrawBeziers(BYVAL pPen AS CGpPen PTR, BYVAL pts AS GpPoint PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawRectangle|CGpGraphics.DrawRectangle(BYVAL pPen AS CGpPen PTR, BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawRectangle|CGpGraphics.DrawRectangle(BYVAL pPen AS CGpPen PTR, BYVAL x AS INT_, BYVAL y AS INT_, BYVAL nWidth AS INT_, BYVAL nHeight AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawRectangle|CGpGraphics.DrawRectangle(BYVAL pPen AS CGpPen PTR, BYVAL rc AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawRectangle|CGpGraphics.DrawRectangle(BYVAL pPen AS CGpPen PTR, BYVAL rc AS GpRect PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawRectangles|CGpGraphics.DrawRectangles(BYVAL pPen AS CGpPen PTR, BYVAL rects AS GpRectF PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawRectangles|CGpGraphics.DrawRectangles(BYVAL pPen AS CGpPen PTR, BYVAL rects AS GpRect PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawEllipse|CGpGraphics.DrawEllipse(BYVAL pPen AS CGpPen PTR, BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawEllipse|CGpGraphics.DrawEllipse(BYVAL pPen AS CGpPen PTR, BYVAL x AS INT_, BYVAL y AS INT_, BYVAL nWidth AS INT_, BYVAL nHeight AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawEllipse|CGpGraphics.DrawEllipse(BYVAL pPen AS CGpPen PTR, BYVAL rc AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawEllipse|CGpGraphics.DrawEllipse(BYVAL pPen AS CGpPen PTR, BYVAL rc AS GpRect PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawPie|CGpGraphics.DrawPie(BYVAL pPen AS CGpPen PTR, BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawPie|CGpGraphics.DrawPie(BYVAL pPen AS CGpPen PTR, BYVAL x AS INT_, BYVAL y AS INT_, BYVAL nWidth AS INT_, BYVAL nHeight AS INT_, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawPie|CGpGraphics.DrawPie(BYVAL pPen AS CGpPen PTR, BYVAL rc AS GpRectF PTR, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawPie|CGpGraphics.DrawPie(BYVAL pPen AS CGpPen PTR, BYVAL rc AS GpRect PTR, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawPolygon|CGpGraphics.DrawPolygon(BYVAL pPen AS CGpPen PTR, BYVAL pts AS GpPointF PTR, BYVAL nCount AS LONG) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawPolygon|CGpGraphics.DrawPolygon(BYVAL pPen AS CGpPen PTR, BYVAL pts AS GpPoint PTR, BYVAL nCount AS LONG) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawPath|CGpGraphics.DrawPath(BYVAL pPen AS CGpPen PTR, BYVAL pPath AS CGpGraphicsPath PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawCurve|CGpGraphics.DrawCurve(BYVAL pPen AS CGpPen PTR, BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawCurve|CGpGraphics.DrawCurve(BYVAL pPen AS CGpPen PTR, BYVAL pts AS GpPoint PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawCurve|CGpGraphics.DrawCurve(BYVAL pPen AS CGpPen PTR, BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_, BYVAL tension AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawCurve|CGpGraphics.DrawCurve(BYVAL pPen AS CGpPen PTR, BYVAL pts AS GpPoint PTR, BYVAL nCount AS INT_, BYVAL tension AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawCurve|CGpGraphics.DrawCurve(BYVAL pPen AS CGpPen PTR, BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_, BYVAL offset AS INT_, BYVAL numberOfSegments AS INT_, BYVAL tension AS SINGLE = 0.5) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawCurve|CGpGraphics.DrawCurve(BYVAL pPen AS CGpPen PTR, BYVAL pts AS GpPoint PTR, BYVAL nCount AS INT_, BYVAL offset AS INT_, BYVAL numberOfSegments AS INT_, BYVAL tension AS SINGLE = 0.5) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawClosedCurve|CGpGraphics.DrawClosedCurve(BYVAL pPen AS CGpPen PTR, BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawClosedCurve|CGpGraphics.DrawClosedCurve(BYVAL pPen AS CGpPen PTR, BYVAL pts AS GpPoint PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawClosedCurve|CGpGraphics.DrawClosedCurve(BYVAL pPen AS CGpPen PTR, BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_, BYVAL tension AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawClosedCurve|CGpGraphics.DrawClosedCurve(BYVAL pPen AS CGpPen PTR, BYVAL pts AS GpPoint PTR, BYVAL nCount AS INT_, BYVAL tension AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.Clear|CGpGraphics.Clear(BYVAL colour AS ARGB) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillRectangle|CGpGraphics.FillRectangle(BYVAL pBrush AS CGpBrush PTR, BYVAL rc AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillRectangle|CGpGraphics.FillRectangle(BYVAL pBrush AS CGpBrush PTR, BYVAL rc AS GpRect PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillRectangle|CGpGraphics.FillRectangle(BYVAL pBrush AS CGpBrush PTR, BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillRectangle|CGpGraphics.FillRectangle(BYVAL pBrush AS CGpBrush PTR, BYVAL x AS INT_, BYVAL y AS INT_, BYVAL nWidth AS INT_, BYVAL nHeight AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillRectangles|CGpGraphics.FillRectangles(BYVAL pBrush AS CGpBrush PTR, BYVAL rects AS GpRectF PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillRectangles|CGpGraphics.FillRectangles(BYVAL pBrush AS CGpBrush PTR, BYVAL rects AS GpRect PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillPolygon|CGpGraphics.FillPolygon(BYVAL pBrush AS CGpBrush PTR, BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillPolygon|CGpGraphics.FillPolygon(BYVAL pBrush AS CGpBrush PTR, BYVAL pts AS GpPoint PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillPolygon|CGpGraphics.FillPolygon(BYVAL pBrush AS CGpBrush PTR, BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_, BYVAL nFillMode AS FillMode) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillPolygon|CGpGraphics.FillPolygon(BYVAL pBrush AS CGpBrush PTR, BYVAL pts AS GpPoint PTR, BYVAL nCount AS INT_, BYVAL nFillMode AS FillMode) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillEllipse|CGpGraphics.FillEllipse(BYVAL pBrush AS CGpBrush PTR, BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillEllipse|CGpGraphics.FillEllipse(BYVAL pBrush AS CGpBrush PTR, BYVAL x AS INT_, BYVAL y AS INT_, BYVAL nWidth AS INT_, BYVAL nHeight AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillEllipse|CGpGraphics.FillEllipse(BYVAL pBrush AS CGpBrush PTR, BYVAL rc AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillEllipse|CGpGraphics.FillEllipse(BYVAL pBrush AS CGpBrush PTR, BYVAL rc AS GpRect PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillPie|CGpGraphics.FillPie(BYVAL pBrush AS CGpBrush PTR, BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillPie|CGpGraphics.FillPie(BYVAL pBrush AS CGpBrush PTR, BYVAL x AS INT_, BYVAL y AS INT_, BYVAL nWidth AS INT_, BYVAL nHeight AS INT_, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillPie|CGpGraphics.FillPie(BYVAL pBrush AS CGpBrush PTR, BYVAL rc AS GpRectF PTR, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillPie|CGpGraphics.FillPie(BYVAL pBrush AS CGpBrush PTR, BYVAL rc AS GpRect PTR, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillPath|CGpGraphics.FillPath(BYVAL pBrush AS CGpBrush PTR, BYVAL pPath AS CGpGraphicsPath PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillClosedCurve|CGpGraphics.FillClosedCurve(BYVAL pBrush AS CGpBrush PTR, BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillClosedCurve|CGpGraphics.FillClosedCurve(BYVAL pBrush AS CGpBrush PTR, BYVAL pts AS GpPoint PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillClosedCurve|CGpGraphics.FillClosedCurve(BYVAL pBrush AS CGpBrush PTR, BYVAL pts AS GpPointF PTR, BYVAL nCount AS LONG, BYVAL nFillMode AS FillMode, BYVAL tension AS SINGLE = 0.5) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillClosedCurve|CGpGraphics.FillClosedCurve(BYVAL pBrush AS CGpBrush PTR, BYVAL pts AS GpPoint PTR, BYVAL nCount AS LONG, BYVAL nFillMode AS FillMode, BYVAL tension AS SINGLE = 0.5) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.FillRegion|CGpGraphics.FillRegion(BYVAL pBrush AS CGpBrush PTR, BYVAL pRegion AS CGpRegion PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawString|CGpGraphics.DrawString(BYVAL pwszString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFont AS CGpFont PTR, BYVAL rcf AS GpRectF PTR, BYVAL pBrush AS CGpBrush PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawString|CGpGraphics.DrawString(BYVAL pwszString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFont AS CGpFont PTR, BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE, BYVAL pBrush AS CGpBrush PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawString|CGpGraphics.DrawString(BYVAL pwszString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFont AS CGpFont PTR, BYVAL layoutRect AS GpRectF PTR, BYVAL pStringFormat AS CGpStringFormat PTR, BYVAL pBrush AS CGpBrush PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawString|CGpGraphics.DrawString(BYVAL pwszString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFont AS CGpFont PTR, BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE, BYVAL pStringFormat AS CGpStringFormat PTR, BYVAL pBrush AS CGpBrush PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawString|CGpGraphics.DrawString(BYVAL pwszString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFont AS CGpFont PTR, BYVAL origin as GpPointF PTR, BYVAL pBrush AS CGpBrush PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawString|CGpGraphics.DrawString(BYVAL pwszString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFont AS CGpFont PTR, BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL pBrush AS CGpBrush PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawString|CGpGraphics.DrawString(BYVAL pwszString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFont AS CGpFont PTR, BYVAL origin AS GpPointF PTR, BYVAL pStringFormat AS CGpStringFormat PTR, BYVAL pBrush AS CGpBrush PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawString|CGpGraphics.DrawString(BYVAL pwszString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFont AS CGpFont PTR, BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL pStringFormat AS CGpStringFormat PTR, BYVAL pBrush AS CGpBrush PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.MeasureString|CGpGraphics.MeasureString(BYVAL pwszString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFont AS CGpFont PTR, BYVAL layoutRect AS GpRectF PTR, BYVAL pStringFormat AS CGpStringFormat PTR, BYVAL boundingBox AS GpRectF PTR, BYREF codepointsFitted AS INT_ = 0, BYREF linesFilled AS INT_ = 0) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.MeasureString|CGpGraphics.MeasureString(BYVAL pwszString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFont AS CGpFont PTR, BYVAL layoutRectSize AS GpSizeF PTR, BYVAL pStringFormat AS CGpStringFormat PTR, BYVAL size AS GpSizeF PTR, BYREF codepointsFitted AS INT_ = 0, BYREF linesFilled AS INT_ = 0) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.MeasureString|CGpGraphics.MeasureString(BYVAL pwszString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFont AS CGpFont PTR, BYVAL origin AS GpPointF PTR, BYVAL pStringFormat AS CGpStringFormat PTR, BYVAL boundingBox AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.MeasureString|CGpGraphics.MeasureString(BYVAL pwszString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFont AS CGpFont PTR, BYVAL layoutRect AS GpRectF PTR, BYVAL pStringFormat AS CGpStringFormat PTR, BYVAL boundingBox AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.MeasureString|CGpGraphics.MeasureString(BYVAL pwszString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFont AS CGpFont PTR, BYVAL layoutRect AS GpRectF PTR, BYVAL boundingBox AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.MeasureString|CGpGraphics.MeasureString(BYVAL pwszString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFont AS CGpFont PTR, BYVAL origin AS GpPointF PTR, BYVAL boundingBox AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.MeasureCharacterRanges|CGpGraphics.MeasureCharacterRanges(BYVAL pwszString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFont AS CGpFont PTR, BYVAL layoutRect AS GpRectF PTR, BYVAL pStringFormat AS CGpStringFormat PTR, BYVAL regionCount AS INT_, BYVAL regions AS CGpRegion PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawDriverString|CGpGraphics.DrawDriverString(BYVAL pText AS UINT16 PTR, BYVAL length AS INT_, BYVAL pFont AS CGpFont PTR, BYVAL pBrush AS CGpBrush PTR, BYVAL positions AS ANY PTR, BYVAL flags AS INT_, BYVAL pMatrix AS CGpMatrix PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.MeasureDriverString|CGpGraphics.MeasureDriverString(BYVAL pText AS UINT16 PTR, BYVAL length AS LONG, BYVAL pFont AS CGpFont PTR, BYVAL positions AS ANY PTR, BYVAL flags AS LONG, BYVAL pMatrix AS CGpMatrix PTR, BYVAL boundingBox AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawCachedBitmap|CGpGraphics.DrawCachedBitmap(BYVAL pCachedBitmap AS CGpCachedBitmap PTR, BYVAL x AS LONG, BYVAL y AS LONG) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL pt AS GpPointF PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL x AS SINGLE, BYVAL y AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL rcf AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL pt AS GpPoint PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL x AS INT_, BYVAL y AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL x AS INT_, BYVAL y AS INT_, BYVAL nWidth AS INT_, BYVAL nHeight AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL rc AS GpRect PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL destPoints AS GpPointF PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL destPoints AS GpPoint PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL srcx AS SINGLE, BYVAL srcy AS SINGLE, BYVAL srcwidth AS SINGLE, BYVAL srcheight AS SINGLE, BYVAL srcUnit AS gpUnit) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL x AS INT_, BYVAL y AS INT_, BYVAL srcx AS INT_, BYVAL srcy AS INT_, BYVAL srcwidth AS INT_, BYVAL srcheight AS INT_, BYVAL srcUnit AS gpUnit) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL destRect AS GpRectF PTR, BYVAL srcx AS SINGLE, BYVAL srcy AS SINGLE, BYVAL srcwidth AS SINGLE, BYVAL srcheight AS SINGLE, BYVAL srcUnit AS GpUnit, BYVAL pImageAttributes AS CGpImageAttributes PTR = NULL, BYVAL pcallback AS DrawImageAbort = NULL, BYVAL pcallbackData AS ANY PTR = NULL) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL destRect AS GpRect PTR, BYVAL srcx AS INT_, BYVAL srcy AS INT_, BYVAL srcwidth AS INT_, BYVAL srcheight AS INT_, BYVAL srcUnit AS GpUnit, BYVAL pImageAttributes AS CGpImageAttributes PTR = NULL, BYVAL pcallback AS DrawImageAbort = NULL, BYVAL pcallbackData AS ANY PTR = NULL) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL destx AS SINGLE, BYVAL desty AS SINGLE, BYVAL destWidth AS SINGLE, BYVAL destHeight AS SINGLE, BYVAL srcx AS SINGLE, BYVAL srcy AS SINGLE, BYVAL srcwidth AS SINGLE, BYVAL srcheight AS SINGLE, BYVAL srcUnit AS GpUnit, BYVAL pImageAttributes AS CGpImageAttributes PTR = NULL, BYVAL pcallback AS DrawImageAbort = NULL, BYVAL pcallbackData AS ANY PTR = NULL) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL destx AS INT_, BYVAL desty AS INT_, BYVAL destWidth AS INT_, BYVAL destHeight AS INT_, BYVAL srcx AS INT_, BYVAL srcy AS INT_, BYVAL srcwidth AS INT_, BYVAL srcheight AS INT_, BYVAL srcUnit AS GpUnit, BYVAL pImageAttributes AS CGpImageAttributes PTR = NULL, BYVAL pcallback AS DrawImageAbort = NULL, BYVAL pcallbackData AS ANY PTR = NULL) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL destPoints AS GpPointF PTR, BYVAL nCount AS INT_, BYVAL srcx AS SINGLE, BYVAL srcy AS SINGLE, BYVAL srcwidth AS SINGLE, BYVAL srcheight AS SINGLE, BYVAL srcUnit AS GpUnit, BYVAL pImageAttributes AS CGpImageAttributes PTR = NULL, BYVAL pcallback AS DrawImageAbort = NULL, BYVAL pcallbackData AS ANY PTR = NULL) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL destPoints AS GpPoint PTR, BYVAL nCount AS INT_, BYVAL srcx AS INT_, BYVAL srcy AS INT_, BYVAL srcwidth AS INT_, BYVAL srcheight AS INT_, BYVAL srcUnit AS GpUnit, BYVAL pImageAttributes AS CGpImageAttributes PTR = NULL, BYVAL pcallback AS DrawImageAbort = NULL, BYVAL pcallbackData AS ANY PTR = NULL) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL destRect AS GpRectF PTR, BYVAL sourceRect AS GpRectF PTR, BYVAL srcUnit AS GpUnit, BYVAL pImageAttributes AS CGpImageAttributes PTR = NULL) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL destRect AS GpRect PTR, BYVAL sourceRect AS GpRect PTR, BYVAL srcUnit AS GpUnit, BYVAL pImageAttributes AS CGpImageAttributes PTR = NULL) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL destx AS SINGLE, BYVAL desty AS SINGLE, BYVAL destWidth AS SINGLE, BYVAL destHeight AS SINGLE, BYVAL srcx AS SINGLE, BYVAL srcy AS SINGLE, BYVAL srcWidth AS SINGLE, BYVAL srcHeight AS SINGLE, BYVAL srcUnit AS GpUnit, BYVAL pImageAttributes AS CGpImageAttributes PTR = NULL) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.DrawImage|CGpGraphics.DrawImage(BYVAL pImage AS CGpImage PTR, BYVAL destx AS INT_, BYVAL desty AS INT_, BYVAL destWidth AS INT_, BYVAL destHeight AS INT_, BYVAL srcx AS INT_, BYVAL srcy AS INT_, BYVAL srcWidth AS INT_, BYVAL srcHeight AS INT_, BYVAL srcUnit AS GpUnit, BYVAL pImageAttributes AS CGpImageAttributes PTR = NULL) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetClip|CGpGraphics.SetClip(BYVAL pGraphics AS CGpGraphics PTR, BYVAL nCombineMode AS CombineMode = CombineModeReplace) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetClip|CGpGraphics.SetClip(BYVAL rc AS GpRectF PTR, BYVAL nCombineMode AS CombineMode = CombineModeReplace) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetClip|CGpGraphics.SetClip(BYVAL rc AS GpRect PTR, BYVAL nCombineMode AS CombineMode = CombineModeReplace) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetClip|CGpGraphics.SetClip(BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE, BYVAL nCombineMode AS CombineMode = CombineModeReplace) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetClip|CGpGraphics.SetClip(BYVAL x AS INT_, BYVAL y AS INT_, BYVAL nWidth AS INT_, BYVAL nHeight AS INT_, BYVAL nCombineMode AS CombineMode = CombineModeReplace) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetClip|CGpGraphics.SetClip(BYVAL pPath AS CGpGraphicsPath PTR, BYVAL nCombineMode AS CombineMode = CombineModeReplace) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetClip|CGpGraphics.SetClip(BYVAL pRegion AS CGpRegion PTR, BYVAL nCombineMode AS CombineMode = CombineModeReplace) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.SetClip|CGpGraphics.SetClip(BYVAL hRgn AS HRGN, BYVAL nCombineMode AS CombineMode = CombineModeReplace) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.IntersectClip|CGpGraphics.IntersectClip(BYVAL rcf AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.IntersectClip|CGpGraphics.IntersectClip(BYVAL rc AS GpRect PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.IntersectClip|CGpGraphics.IntersectClip(BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.IntersectClip|CGpGraphics.IntersectClip(BYVAL x AS INT_, BYVAL y AS INT_, BYVAL nWidth AS INT_, BYVAL nHeight AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.IntersectClip|CGpGraphics.IntersectClip(BYVAL pRegion AS CGpRegion PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.ExcludeClip|CGpGraphics.ExcludeClip(BYVAL rcf AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.ExcludeClip|CGpGraphics.ExcludeClip(BYVAL rc AS GpRect PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.ExcludeClip|CGpGraphics.ExcludeClip(BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.ExcludeClip|CGpGraphics.ExcludeClip(BYVAL x AS INT_, BYVAL y AS INT_, BYVAL nWidth AS INT_, BYVAL nHeight AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.ExcludeClip|CGpGraphics.ExcludeClip(BYVAL pRegion AS CGpRegion PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.ResetClip|CGpGraphics.ResetClip() AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.TranslateClip|CGpGraphics.TranslateClip(BYVAL dx AS SINGLE, BYVAL dy AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetClip|CGpGraphics.GetClip(BYVAL pRegion AS CGpRegion PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetClipBounds|CGpGraphics.GetClipBounds(BYVAL rc AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetClipBounds|CGpGraphics.GetClipBounds(BYVAL rc AS GpRect PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.IsClipEmpty|CGpGraphics.IsClipEmpty() AS BOOLEAN
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetVisibleClipBounds|CGpGraphics.GetVisibleClipBounds(BYVAL rc AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetVisibleClipBounds|CGpGraphics.GetVisibleClipBounds(BYVAL rc AS GpRect PTR) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.IsVisibleClipEmpty|CGpGraphics.IsVisibleClipEmpty() AS BOOLEAN
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.IsVisible|CGpGraphics.IsVisible(BYVAL pt AS GpPointF PTR) AS BOOLEAN
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.IsVisible|CGpGraphics.IsVisible(BYVAL pt AS GpPoint PTR) AS BOOLEAN
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.IsVisible|CGpGraphics.IsVisible(BYVAL x AS SINGLE, BYVAL y AS SINGLE) AS BOOLEAN
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.IsVisible|CGpGraphics.IsVisible(BYVAL x AS INT_, BYVAL y AS INT_) AS BOOLEAN
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.IsVisible|CGpGraphics.IsVisible(BYVAL rcf AS GpRectF PTR) AS BOOLEAN
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.IsVisible|CGpGraphics.IsVisible(BYVAL rc AS GpRect PTR) AS BOOLEAN
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.IsVisible|CGpGraphics.IsVisible(BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE) AS BOOLEAN
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.IsVisible|CGpGraphics.IsVisible(BYVAL x AS INT_, BYVAL y AS INT_, BYVAL nWidth AS INT_, BYVAL nHeight AS INT_) AS BOOLEAN
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.Save|CGpGraphics.Save() AS GraphicsState
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.Restore|CGpGraphics.Restore(BYVAL gstate AS GraphicsState) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.BeginContainer|CGpGraphics.BeginContainer() AS GraphicsContainer
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.BeginContainer|CGpGraphics.BeginContainer(BYVAL destrect AS GpRectF PTR, BYVAL srcrect AS GpRectF PTR, BYVAL nUnit AS GpUnit) AS GraphicsContainer
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.BeginContainer|CGpGraphics.BeginContainer(BYVAL destrect AS GpRect PTR, BYVAL srcrect AS GpRect PTR, BYVAL nUnit AS GpUnit) AS GraphicsContainer
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.EndContainer|CGpGraphics.EndContainer(BYVAL state AS GraphicsContainer) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.AddMetafileComment|CGpGraphics.AddMetafileComment(BYVAL pdata AS BYTE PTR, BYVAL sizeData AS UINT) AS GpStatus
AFX\CGDIPLUS\CGPGRAPHICS.INC|CGpGraphics.GetHalftonePalette|CGpGraphics.GetHalftonePalette() AS HPALETTE
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.Clone|CGpImageAttributes.Clone(BYVAL pCloneImgAttr AS CGpImageAttributes PTR) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.SetToIdentity|CGpImageAttributes.SetToIdentity(BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.Reset|CGpImageAttributes.Reset(BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.SetColorMatrix|CGpImageAttributes.SetColorMatrix(BYVAL pColorMatrix AS ColorMatrix PTR, BYVAL nMode AS ColorMatrixFlags = ColorMatrixFlagsDefault, BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.ClearColorMatrix|CGpImageAttributes.ClearColorMatrix(BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.SetColorMatrices|CGpImageAttributes.SetColorMatrices(BYVAL pColorMatrix AS ColorMatrix PTR, BYVAL pGrayMatrix AS ColorMatrix PTR, BYVAL nMode AS ColorAdjustType = ColorMatrixFlagsDefault, BYVAL nType AS LONG = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.ClearColorMatrices|CGpImageAttributes.ClearColorMatrices(BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.SetThreshold|CGpImageAttributes.SetThreshold(BYVAL threshold AS SINGLE, BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.ClearThreshold|CGpImageAttributes.ClearThreshold(BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.SetGamma|CGpImageAttributes.SetGamma(BYVAL gamma AS SINGLE, BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.ClearGamma|CGpImageAttributes.ClearGamma(BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.SetNoOp|CGpImageAttributes.SetNoOp(BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.ClearNoOp|CGpImageAttributes.ClearNoOp(BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.SetColorKey|CGpImageAttributes.SetColorKey(BYVAL colorLow AS ARGB, BYVAL colorHigh AS ARGB, BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.ClearColorKey|CGpImageAttributes.ClearColorKey(BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.SetOutputChannel|CGpImageAttributes.SetOutputChannel(BYVAL channelFlags AS LONG, BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.ClearOutputChannel|CGpImageAttributes.ClearOutputChannel(BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.SetOutputChannelColorProfile|CGpImageAttributes.SetOutputChannelColorProfile(BYVAL pwszColorProfileFilename AS WSTRING PTR, BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.ClearOutputChannelColorProfile|CGpImageAttributes.ClearOutputChannelColorProfile(BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.SetRemapTable|CGpImageAttributes.SetRemapTable(BYVAL mapSize AS UINT, BYVAL map AS ANY PTR, BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.SetBrushRemapTable|CGpImageAttributes.SetBrushRemapTable(BYVAL mapSize AS UINT, BYVAL map AS ANY PTR) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.ClearRemapTable|CGpImageAttributes.ClearRemapTable(BYVAL nType AS ColorAdjustType = ColorAdjustTypeDefault) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.ClearBrushRemapTable|CGpImageAttributes.ClearBrushRemapTable() AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.SetWrapMode|CGpImageAttributes.SetWrapMode(BYVAL nWrap AS WrapMode, BYVAL colour AS ARGB = &HFF000000, BYVAL clamp AS BOOL = FALSE) AS GpStatus
AFX\CGDIPLUS\CGPIMAGEATTRIBUTES.INC|CGpImageAttributes.GetAdjustedPalette|CGpImageAttributes.GetAdjustedPalette(BYVAL pColorPalette AS ColorPalette PTR, BYVAL colorAdjustType AS LONG) AS GpStatus
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpCustomLineCap.SetStrokeCaps|CGpCustomLineCap.SetStrokeCaps(BYVAL startCap AS LineCap, BYVAL endCap AS LineCap) AS GpStatus
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpCustomLineCap.GetStrokeCaps|CGpCustomLineCap.GetStrokeCaps(BYVAL startCap AS LineCap PTR, BYVAL endCap AS LineCap PTR) AS GpStatus
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpCustomLineCap.SetStrokeCap|CGpCustomLineCap.SetStrokeCap(BYVAL strokeCap AS LineCap) AS GpStatus
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpCustomLineCap.SetStrokeJoin|CGpCustomLineCap.SetStrokeJoin(BYVAL nLineJoin AS LineJoin) AS GpStatus
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpCustomLineCap.GetStrokeJoin|CGpCustomLineCap.GetStrokeJoin() AS LineJoin
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpCustomLineCap.SetBaseCap|CGpCustomLineCap.SetBaseCap(BYVAL baseCap AS LineCap) AS GpStatus
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpCustomLineCap.GetBaseCap|CGpCustomLineCap.GetBaseCap() AS LineCap
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpCustomLineCap.SetBaseInset|CGpCustomLineCap.SetBaseInset(BYVAL inset AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpCustomLineCap.GetBaseInset|CGpCustomLineCap.GetBaseInset() AS SINGLE
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpCustomLineCap.SetWidthScale|CGpCustomLineCap.SetWidthScale(BYVAL widthScale AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpCustomLineCap.GetWidthScale|CGpCustomLineCap.GetWidthScale() AS SINGLE
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpCustomLineCap.Clone|CGpCustomLineCap.Clone(BYVAL pCustomLineCap AS CGpCustomLineCap PTR) AS GpStatus
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpAdjustableArrowCap.SetHeight|CGpAdjustableArrowCap.SetHeight(BYVAL nHeight AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpAdjustableArrowCap.GetHeight|CGpAdjustableArrowCap.GetHeight() AS SINGLE
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpAdjustableArrowCap.SetWidth|CGpAdjustableArrowCap.SetWidth(BYVAL nWidth AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpAdjustableArrowCap.GetWidth|CGpAdjustableArrowCap.GetWidth() AS SINGLE
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpAdjustableArrowCap.SetMiddleInset|CGpAdjustableArrowCap.SetMiddleInset(BYVAL middleInset AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpAdjustableArrowCap.GetMiddleInset|CGpAdjustableArrowCap.GetMiddleInset() AS SINGLE
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpAdjustableArrowCap.SetFillState|CGpAdjustableArrowCap.SetFillState(BYVAL bIsFilled AS BOOL) AS GpStatus
AFX\CGDIPLUS\CGPLINECAPS.INC|CGpAdjustableArrowCap.IsFilled|CGpAdjustableArrowCap.IsFilled() AS BOOLEAN
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.GetElements|CGpMatrix.GetElements(BYVAL m AS SINGLE PTR) AS GpStatus
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.SetElements|CGpMatrix.SetElements(BYVAL m11 AS SINGLE, BYVAL m12 AS SINGLE, BYVAL m21 AS SINGLE, BYVAL m22 AS SINGLE, BYVAL dx AS SINGLE, BYVAL dy AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.OffsetX|CGpMatrix.OffsetX() AS SINGLE
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.OffsetY|CGpMatrix.OffsetY() AS SINGLE
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.Reset|CGpMatrix.Reset() AS GpStatus
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.Multiply|CGpMatrix.Multiply(BYVAL pMatrix AS CGpMatrix PTR, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.Translate|CGpMatrix.Translate(BYVAL nOffsetX AS SINGLE, BYVAL nOffsetY AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.Scale|CGpMatrix.Scale(BYVAL scaleX AS SINGLE, BYVAL scaleY AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.Rotate|CGpMatrix.Rotate(BYVAL angle AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.RotateAt|CGpMatrix.RotateAt(BYVAL angle AS SINGLE, BYVAL center AS GpPointF PTR, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.Shear|CGpMatrix.Shear(BYVAL shearX AS SINGLE, BYVAL shearY AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.Invert|CGpMatrix.Invert() AS GpStatus
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.TransformPoints|CGpMatrix.TransformPoints(BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_ = 1) AS GpStatus
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.TransformPoints|CGpMatrix.TransformPoints(BYVAL pts AS GpPoint PTR, BYVAL nCount AS INT_ = 1) AS GpStatus
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.TransformVectors|CGpMatrix.TransformVectors(BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_ = 1) AS GpStatus
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.TransformVectors|CGpMatrix.TransformVectors(BYVAL pts AS GpPoint pTR, BYVAL nCount AS INT_ = 1) AS GpStatus
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.IsInvertible|CGpMatrix.IsInvertible() AS BOOLEAN
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.IsIdentity|CGpMatrix.IsIdentity() AS BOOLEAN
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.Equals|CGpMatrix.Equals(BYVAL pMatrix AS CGpMatrix PTR) AS BOOLEAN
AFX\CGDIPLUS\CGPMATRIX.INC|CGpMatrix.Clone|CGpMatrix.Clone(BYVAL pMatrix AS CGpMatrix PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.Clone|CGpGraphicsPath.Clone(BYVAL pCloneGraphicsPath AS CGpGraphicsPath PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.Reset|CGpGraphicsPath.Reset() AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.GetFillMode|CGpGraphicsPath.GetFillMode() AS FillMode
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.SetFillMode|CGpGraphicsPath.SetFillMode(BYVAL nFillmode AS FillMode) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.GetPathData|CGpGraphicsPath.GetPathData(BYVAL pPathData AS ANY PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.StartFigure|CGpGraphicsPath.StartFigure() AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.CloseFigure|CGpGraphicsPath.CloseFigure() AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.CloseAllFigures|CGpGraphicsPath.CloseAllFigures() AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.SetMarker|CGpGraphicsPath.SetMarker() AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.ClearMarkers|CGpGraphicsPath.ClearMarkers() AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.Reverse|CGpGraphicsPath.Reverse() AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.GetLastPoint|CGpGraphicsPath.GetLastPoint(BYVAL lastPoint AS GpPointF PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddLine|CGpGraphicsPath.AddLine(BYVAL x1 AS SINGLE, BYVAL y1 AS SINGLE, BYVAL x2 AS SINGLE, BYVAL y2 AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddLine|CGpGraphicsPath.AddLine(BYVAL x1 AS INT_, BYVAL y1 AS INT_, BYVAL x2 AS INT_, BYVAL y2 AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddLine|CGpGraphicsPath.AddLine(BYVAL pt1 AS GpPointF PTR, BYVAL pt2 AS GpPointF PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddLine|CGpGraphicsPath.AddLine(BYVAL pt1 AS GpPoint PTR, BYVAL pt2 AS GpPoint PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddLines|CGpGraphicsPath.AddLines(BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddLines|CGpGraphicsPath.AddLines(BYVAL pts AS GpPoint PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddArc|CGpGraphicsPath.AddArc(BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddArc|CGpGraphicsPath.AddArc(BYVAL rcf AS GpRectF PTR, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddArc|CGpGraphicsPath.AddArc(BYVAL x AS INT_, BYVAL y AS INT_, BYVAL nWidth AS INT_, BYVAL nHeight AS INT_, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddArc|CGpGraphicsPath.AddArc(BYVAL rc AS GpRect PTR, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddBezier|CGpGraphicsPath.AddBezier(BYVAL x1 AS SINGLE, BYVAL y1 AS SINGLE, BYVAL x2 AS SINGLE, BYVAL y2 AS SINGLE, BYVAL x3 AS SINGLE, BYVAL y3 AS SINGLE, BYVAL x4 AS SINGLE, BYVAL y4 AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddBezier|CGpGraphicsPath.AddBezier(BYVAL x1 AS INT_, BYVAL y1 AS INT_, BYVAL x2 AS INT_, BYVAL y2 AS INT_, BYVAL x3 AS INT_, BYVAL y3 AS INT_, BYVAL x4 AS INT_, BYVAL y4 AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddBezier|CGpGraphicsPath.AddBezier(BYVAL pt1 AS GpPointF PTR, BYVAL pt2 AS GpPointF PTR, BYVAL pt3 AS GpPointF PTR, BYVAL pt4 AS GpPointF PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddBezier|CGpGraphicsPath.AddBezier(BYVAL pt1 AS GpPoint PTR, BYVAL pt2 AS GpPoint PTR, BYVAL pt3 AS GpPoint PTR, BYVAL pt4 AS GpPoint PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddBeziers|CGpGraphicsPath.AddBeziers(BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddBeziers|CGpGraphicsPath.AddBeziers(BYVAL pts AS GpPoint PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddCurve|CGpGraphicsPath.AddCurve(BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddCurve|CGpGraphicsPath.AddCurve(BYVAL pts AS GpPoint PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddCurve|CGpGraphicsPath.AddCurve(BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_, BYVAL tension AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddCurve|CGpGraphicsPath.AddCurve(BYVAL pts AS GpPoint PTR, BYVAL nCount AS INT_, BYVAL tension AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddCurve|CGpGraphicsPath.AddCurve(BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_, BYVAL offset AS INT_, BYVAL numberOfSegments AS INT_, BYVAL tension AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddCurve|CGpGraphicsPath.AddCurve(BYVAL pts AS GpPoint PTR, BYVAL nCount AS INT_, BYVAL offset AS INT_, BYVAL numberOfSegments AS INT_, BYVAL tension AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddClosedCurve|CGpGraphicsPath.AddClosedCurve(BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddClosedCurve|CGpGraphicsPath.AddClosedCurve(BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_, BYVAL tension AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddClosedCurve|CGpGraphicsPath.AddClosedCurve(BYVAL pts AS GpPoint PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddClosedCurve|CGpGraphicsPath.AddClosedCurve(BYVAL pts AS GpPoint PTR, BYVAL nCount AS INT_, BYVAL tension AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddRectangle|CGpGraphicsPath.AddRectangle(BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddRectangle|CGpGraphicsPath.AddRectangle(BYVAL x AS INT_, BYVAL y AS INT_, BYVAL nWidth AS INT_, BYVAL nHeight AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddRectangle|CGpGraphicsPath.AddRectangle(BYVAL rcf AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddRectangle|CGpGraphicsPath.AddRectangle(BYVAL rcf AS GpRect PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddRectangles|CGpGraphicsPath.AddRectangles(BYVAL rects AS GpRectF PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddRectangles|CGpGraphicsPath.AddRectangles(BYVAL rects AS GpRect PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddEllipse|CGpGraphicsPath.AddEllipse(BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddEllipse|CGpGraphicsPath.AddEllipse(BYVAL x AS INT_, BYVAL y AS INT_, BYVAL nWidth AS INT_, BYVAL nHeight AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddEllipse|CGpGraphicsPath.AddEllipse(BYVAL rcf AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddEllipse|CGpGraphicsPath.AddEllipse(BYVAL rc AS GpRect PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddPie|CGpGraphicsPath.AddPie(BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddPie|CGpGraphicsPath.AddPie(BYVAL x AS INT_, BYVAL y AS INT_, BYVAL nWidth AS INT_, BYVAL nHeight AS INT_, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddPie|CGpGraphicsPath.AddPie(BYVAL rcf AS GpRectF PTR, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddPie|CGpGraphicsPath.AddPie(BYVAL rc AS GpRect PTR, BYVAL startAngle AS SINGLE, BYVAL sweepAngle AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddPolygon|CGpGraphicsPath.AddPolygon(BYVAL pts AS GpPointF PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddPolygon|CGpGraphicsPath.AddPolygon(BYVAL pts AS GpPoint PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddPath|CGpGraphicsPath.AddPath(BYVAL pAddingPath AS CGpGraphicsPath PTR, BYVAL bConnect AS BOOL) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddString|CGpGraphicsPath.AddString(BYVAL pString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFamily AS CGpFontFamily PTR, BYVAL nStyle AS INT_, BYVAL emSize AS SINGLE, BYVAL layoutRect AS GpRectF PTR, BYVAL pFormat AS CGpStringFormat PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddString|CGpGraphicsPath.AddString(BYVAL pString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFamily AS CGpFontFamily PTR, BYVAL nStyle AS INT_, BYVAL emSize AS SINGLE, BYVAL layoutRect AS GpRect PTR, BYVAL pFormat AS CGpStringFormat PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddString|CGpGraphicsPath.AddString(BYVAL pString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFamily AS CGpFontFamily PTR, BYVAL nStyle AS INT_, BYVAL emSize AS SINGLE, BYVAL origin AS GpPointF PTR, BYVAL pFormat AS CGpStringFormat PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.AddString|CGpGraphicsPath.AddString(BYVAL pString AS WSTRING PTR, BYVAL length AS INT_, BYVAL pFamily AS CGpFontFamily PTR, BYVAL nStyle AS INT_, BYVAL emSize AS SINGLE, BYVAL origin AS GpPoint PTR, BYVAL pFormat AS CGpStringFormat PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.TransForm|CGpGraphicsPath.TransForm(BYVAL pMatrix AS CGpMatrix PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.GetBounds|CGpGraphicsPath.GetBounds(BYVAL bounds AS GpRectF PTR, BYVAL pMatrix AS CGpMatrix PTR, BYVAL pPen AS CGpPen PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.GetBounds|CGpGraphicsPath.GetBounds(BYVAL bounds AS GpRect PTR, BYVAL pMatrix AS CGpMatrix PTR, BYVAL pPen AS CGpPen PTR) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.Flatten|CGpGraphicsPath.Flatten(BYVAL pMatrix AS CGpMatrix PTR = NULL, BYVAL flatness AS SINGLE = FlatnessDefault) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.Widen|CGpGraphicsPath.Widen(BYVAL pPen AS CGpPen PTR, BYVAL pMatrix AS CGpMatrix PTR = NULL, BYVAL flatness AS SINGLE = FlatnessDefault) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.Outline|CGpGraphicsPath.Outline(BYVAL pMatrix AS CGpMatrix PTR = NULL, BYVAL flatness AS SINGLE = FlatnessDefault) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.Warp|CGpGraphicsPath.Warp(BYVAL destPoints AS GpPointF PTR, BYVAL nCount AS INT_, BYVAL srcRect AS GpRectF PTR, BYVAL pMatrix AS CGpMatrix PTR = NULL, BYVAL nWarpMode AS WarpMode = WarpModePerspective, BYVAL Flatness AS SINGLE = FlatnessDefault) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.GetPointCount|CGpGraphicsPath.GetPointCount() AS INT_
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.GetPathTypes|CGpGraphicsPath.GetPathTypes(BYVAL types AS BYTE PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.GetPathPoints|CGpGraphicsPath.GetPathPoints(BYREF pts AS GpPointF PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.IsVisible|CGpGraphicsPath.IsVisible(BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL pGraphics AS CGpGraphics PTR = NULL) AS BOOLEAN
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.IsVisible|CGpGraphicsPath.IsVisible(BYVAL x AS INT_, BYVAL y AS INT_, BYVAL pGraphics AS CGpGraphics PTR = NULL) AS BOOLEAN
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.IsVisible|CGpGraphicsPath.IsVisible(BYVAL pt AS GpPointF PTR, BYVAL pGraphics AS CGpGraphics PTR = NULL) AS BOOLEAN
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.IsVisible|CGpGraphicsPath.IsVisible(BYVAL pt AS GpPoint PTR, BYVAL pGraphics AS CGpGraphics PTR = NULL) AS BOOLEAN
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.IsOutlineVisible|CGpGraphicsPath.IsOutlineVisible(BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL pPen AS CGpPen PTR, BYVAL pGraphics AS CGpGraphics PTR = NULL) AS BOOLEAN
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.IsOutlineVisible|CGpGraphicsPath.IsOutlineVisible(BYVAL x AS INT_, BYVAL y AS INT_, BYVAL pPen AS CGpPen PTR, BYVAL pGraphics AS CGpGraphics PTR = NULL) AS BOOLEAN
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.IsOutlineVisible|CGpGraphicsPath.IsOutlineVisible(BYVAL pt AS GpPointF PTR, BYVAL pPen AS CGpPen PTR, BYVAL pGraphics AS CGpGraphics PTR = NULL) AS BOOLEAN
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPath.IsOutlineVisible|CGpGraphicsPath.IsOutlineVisible(BYVAL pt AS GpPoint PTR, BYVAL pPen AS CGpPen PTR, BYVAL pGraphics AS CGpGraphics PTR = NULL) AS BOOLEAN
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPathIterator.NextSubpath|CGpGraphicsPathIterator.NextSubpath(BYVAL startIndex AS INT_ PTR, BYVAL endIndex AS INT_ PTR, BYVAL isClosed AS BOOL PTR) AS INT_
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPathIterator.NextSubpathPath|CGpGraphicsPathIterator.NextSubpathPath(BYVAL pPath AS CGpGraphicsPath PTR, BYVAL isClosed AS BOOL PTR) AS INT_
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPathIterator.NextPathType|CGpGraphicsPathIterator.NextPathType(BYVAL pathType AS BYTE PTR, BYVAL startIndex AS INT_ PTR, BYVAL endIndex AS INT_ PTR) AS INT_
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPathIterator.NextMarker|CGpGraphicsPathIterator.NextMarker(BYVAL startIndex AS INT_ PTR, BYVAL endIndex AS INT_ PTR) AS INT_
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPathIterator.NextMarker|CGpGraphicsPathIterator.NextMarker(BYVAL pPath AS CGpGraphicsPath PTR) AS INT_
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPathIterator.GetCount|CGpGraphicsPathIterator.GetCount() AS INT_
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPathIterator.GetSubpathCount|CGpGraphicsPathIterator.GetSubpathCount() AS INT_
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPathIterator.HasCurve|CGpGraphicsPathIterator.HasCurve() AS BOOLEAN
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPathIterator.Rewind|
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPathIterator.Enumerate|CGpGraphicsPathIterator.Enumerate(BYVAL pts AS GpPointF PTR, BYVAL types AS BYTE PTR, BYVAL nCount AS INT_) AS INT_
AFX\CGDIPLUS\CGPPATH.INC|CGpGraphicsPathIterator.CopyData|CGpGraphicsPathIterator.CopyData(BYVAL pts AS GpPointF PTR, BYVAL types AS BYTE PTR, BYVAL startIndex AS INT_, BYVAL endIndex AS INT_) AS INT_
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.Clone|CGpPen.Clone(BYVAL pPen AS CGpPen PTR) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.SetWidth|CGpPen.SetWidth(BYVAL nWidth AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetWidth|CGpPen.GetWidth() AS SINGLE
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.SetLineCap|CGpPen.SetLineCap(BYVAL startCap AS LineCap, BYVAL endCap AS LineCap, BYVAL nDashCap AS DashCap) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.SetStartCap|CGpPen.SetStartCap(BYVAL startCap AS LineCap) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.SetEndCap|CGpPen.SetEndCap(BYVAL endCap AS LineCap) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.SetDashCap|CGpPen.SetDashCap(BYVAL nDashCap AS DashCap) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetStartCap|CGpPen.GetStartCap() AS LineCap
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetEndCap|CGpPen.GetEndCap() AS LineCap
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetDashCap|CGpPen.GetDashCap() AS DashCap
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.SetLineJoin|CGpPen.SetLineJoin(BYVAL nLineJoin AS LineJoin) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetLineJoin|CGpPen.GetLineJoin() AS LineJoin
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.SetCustomStartCap|CGpPen.SetCustomStartCap(BYVAL pCustomLineCap AS CGpCustomLineCap PTR) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetCustomStartCap|CGpPen.GetCustomStartCap(BYVAL pCustomLineCap AS CGpCustomLineCap PTR) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.SetCustomEndCap|CGpPen.SetCustomEndCap(BYVAL pCustomLineCap AS CGpCustomLineCap PTR) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetCustomEndCap|CGpPen.GetCustomEndCap(BYVAL pCustomLineCap AS CGpCustomLineCap PTR) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.SetMiterLimit|CGpPen.SetMiterLimit(BYVAL miterLimit AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetMiterLimit|CGpPen.GetMiterLimit() AS SINGLE
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.SetAlignment|CGpPen.SetAlignment(BYVAL nPenAlignment AS PenAlignment) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetAlignment|CGpPen.GetAlignment() AS PenAlignment
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.SetTransform|CGpPen.SetTransform(BYVAL pMatrix AS CGpMatrix PTR) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetTransform|CGpPen.GetTransform(BYVAL pMatrix AS CGpMatrix PTR) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.ResetTransform|CGpPen.ResetTransform() AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.MultiplyTransform|CGpPen.MultiplyTransform(BYVAL pMatrix AS CGpMatrix PTR, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.TranslateTransform|CGpPen.TranslateTransform(BYVAL dx AS SINGLE, BYVAL dy AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.ScaleTransform|CGpPen.ScaleTransform(BYVAL sx AS SINGLE, BYVAL sy AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.RotateTransform|CGpPen.RotateTransform(BYVAL angle AS SINGLE, BYVAL order AS MatrixOrder = MatrixOrderPrepend) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetPenType|CGpPen.GetPenType() AS PenType
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.SetColor|CGpPen.SetColor(BYVAL colour AS ARGB) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.SetBrush|CGpPen.SetBrush(BYVAL pBrush AS CGpBrush PTR) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetColor|CGpPen.GetColor(BYVAL colour AS ARGB PTR) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetBrush|CGpPen.GetBrush(BYVAL pBrush AS CGpBrush PTR) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetDashStyle|CGpPen.GetDashStyle() AS DashStyle
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.SetDashStyle|CGpPen.SetDashStyle(BYVAL nDashStyle AS DashStyle) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetDashOffset|CGpPen.GetDashOffset() AS SINGLE
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.SetDashOffset|CGpPen.SetDashOffset(BYVAL dashOffset AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.SetDashPattern|CGpPen.SetDashPattern(BYVAL dashArray AS SINGLE PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetDashPatternCount|CGpPen.GetDashPatternCount() AS INT_
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetDashPattern|CGpPen.GetDashPattern(BYVAL dashArray AS SINGLE PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.SetCompoundArray|CGpPen.SetCompoundArray(BYVAL compoundArray AS SINGLE PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetCompoundArrayCount|CGpPen.GetCompoundArrayCount() AS GpStatus
AFX\CGDIPLUS\CGPPEN.INC|CGpPen.GetCompoundArray|CGpPen.GetCompoundArray(BYVAL compoundArray AS SINGLE PTR, BYVAL nCount AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Clone|CGpRegion.Clone(BYVAL pRegion AS CGpRegion PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.MakeInfinite|CGpRegion.MakeInfinite() AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.MakeEmpty|CGpRegion.MakeEmpty() AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Intersect|CGpRegion.Intersect(BYVAL rcf AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Intersect|CGpRegion.Intersect(BYVAL rc AS GpRect PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Intersect|CGpRegion.Intersect(BYVAL pPath AS CGpGraphicsPath PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Intersect|CGpRegion.Intersect(BYVAL pRegion AS CGpRegion PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Union_|CGpRegion.Union_(BYVAL rc AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Union_|CGpRegion.Union_(BYVAL rc AS GpRect PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Union_|CGpRegion.Union_(BYVAL pPath AS CGpGraphicsPath PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Union_|CGpRegion.Union_(BYVAL pRegion AS CGpRegion PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Xor_|CGpRegion.Xor_(BYVAL rc AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Xor_|CGpRegion.Xor_(BYVAL rc AS GpRect PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Xor_|CGpRegion.Xor_(BYVAL pPath AS CGpGraphicsPath PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Xor_|CGpRegion.Xor_(BYVAL pRegion AS CGpRegion PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Exclude|CGpRegion.Exclude(BYVAL rc AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Exclude|CGpRegion.Exclude(BYVAL rc AS GpRect PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Exclude|CGpRegion.Exclude(BYVAL pPath AS CGpGraphicsPath PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Exclude|CGpRegion.Exclude(BYVAL pRegion AS CGpRegion PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Complement|CGpRegion.Complement(BYVAL rcf AS GpRectF PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Complement|CGpRegion.Complement(BYVAL rc AS GpRect PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Complement|CGpRegion.Complement(BYVAL pPath AS CGpGraphicsPath PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Complement|CGpRegion.Complement(BYVAL pRegion AS CGpRegion PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Translate|CGpRegion.Translate(BYVAL dx AS SINGLE, BYVAL dy AS SINGLE) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Translate|CGpRegion.Translate(BYVAL dx AS INT_, BYVAL dy AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Transform|CGpRegion.Transform(BYVAL pMatrix AS CGpMatrix PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.GetBounds|CGpRegion.GetBounds(BYVAL rc AS GpRectF PTR, BYVAL pGraphics AS CGpGraphics PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.GetBounds|CGpRegion.GetBounds(BYVAL rc AS GpRect PTR, BYVAL pGraphics AS CGpGraphics PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.GetHRGN|CGpRegion.GetHRGN(BYVAL pGraphics AS CGpGraphics PTR) AS HRGN
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.IsEmpty|CGpRegion.IsEmpty(BYVAL pGraphics AS CGpGraphics PTR) AS BOOLEAN
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.IsInfinite|CGpRegion.IsInfinite(BYVAL pGraphics AS CGpGraphics PTR) AS BOOLEAN
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.Equals|CGpRegion.Equals(BYVAL pRegion AS CGpRegion PTR, BYVAL pGraphics AS CGpGraphics PTR) AS BOOLEAN
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.GetDataSize|CGpRegion.GetDataSize() AS UINT
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.GetData|CGpRegion.GetData(BYVAL buffer AS BYTE PTR, BYVAL bufferSize AS UINT, BYVAL sizeFilled AS UINT PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.IsVisible|CGpRegion.IsVisible(BYVAL pt AS GpPointF PTR, BYVAL pGraphics AS CGpGraphics PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.IsVisible|CGpRegion.IsVisible(BYVAL pt AS GpPoint PTR, BYVAL pGraphics AS CGpGraphics PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.IsVisible|CGpRegion.IsVisible(BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL pGraphics AS CGpGraphics PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.IsVisible|CGpRegion.IsVisible(BYVAL x AS INT_, BYVAL y AS INT_, BYVAL pGraphics AS CGpGraphics PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.IsVisible|CGpRegion.IsVisible(BYVAL rc AS GpRectF PTR, BYVAL pGraphics AS CGpGraphics PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.IsVisible|CGpRegion.IsVisible(BYVAL rc AS GpRect PTR, BYVAL pGraphics AS CGpGraphics PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.IsVisible|CGpRegion.IsVisible(BYVAL x AS SINGLE, BYVAL y AS SINGLE, BYVAL nWidth AS SINGLE, BYVAL nHeight AS SINGLE, BYVAL pGraphics AS CGpGraphics PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.IsVisible|CGpRegion.IsVisible(BYVAL x AS INT_, BYVAL y AS INT_, BYVAL nWidth AS INT_, BYVAL nHeight AS INT_, BYVAL pGraphics AS CGpGraphics PTR) AS GpStatus
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.GetRegionScansCount|CGpRegion.GetRegionScansCount(BYVAL pMatrix AS CGpMatrix PTR) AS UINT
AFX\CGDIPLUS\CGPREGION.INC|CGpRegion.GetRegionScans|CGpRegion.GetRegionScans(BYVAL pMatrix AS CGpMatrix PTR, BYVAL rects AS GpRectF PTR, BYVAL nCount AS INT_ PTR) AS GpStatus
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.Clone|CGpStringFormat.Clone(BYVAL pCloneStringFormat AS CGpStringFormat PTR) AS GpStatus
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.GenericDefault|CGpStringFormat.GenericDefault(BYVAL pStringFormat AS CGpStringFormat PTR) AS GpStatus
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.GenericTypographic|CGpStringFormat.GenericTypographic(BYVAL pStringFormat AS CGpStringFormat PTR) AS GpStatus
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.SetFormatFlags|CGpStringFormat.SetFormatFlags(BYVAL flags AS INT_) AS GpStatus
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.GetFormatFlags|CGpStringFormat.GetFormatFlags() AS INT_
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.SetAlignment|CGpStringFormat.SetAlignment(BYVAL nAlign AS StringAlignment) AS GpStatus
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.GetAlignment|CGpStringFormat.GetAlignment() AS StringAlignment
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.SetLineAlignment|CGpStringFormat.SetLineAlignment(BYVAL nAlign AS StringAlignment) AS GpStatus
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.GetLineAlignment|CGpStringFormat.GetLineAlignment() AS StringAlignment
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.SetHotkeyPrefix|CGpStringFormat.SetHotkeyPrefix(BYVAL nHotkeyPrefix AS HotkeyPrefix) AS GpStatus
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.GetHotkeyPrefix|CGpStringFormat.GetHotkeyPrefix() AS HotkeyPrefix
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.SetTabStops|CGpStringFormat.SetTabStops(BYVAL firstTabOffset AS SINGLE, BYVAL nCount AS INT_, BYVAL tabStops AS SINGLE PTR) AS GpStatus
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.GetTabStopCount|CGpStringFormat.GetTabStopCount() AS INT_
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.GetTabStops|CGpStringFormat.GetTabStops(BYVAL nCount AS INT_, BYVAL firstTabOffset AS SINGLE PTR, BYVAL tabStops AS SINGLE PTR) AS GpStatus
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.SetDigitSubstitution|CGpStringFormat.SetDigitSubstitution(BYVAL language AS LANGID, BYVAL substitute AS StringDigitSubstitute) AS GpStatus
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.GetDigitSubstitutionLanguage|CGpStringFormat.GetDigitSubstitutionLanguage() AS LANGID
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.GetDigitSubstitutionMethod|CGpStringFormat.GetDigitSubstitutionMethod() AS StringDigitSubstitute
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.SetTrimming|CGpStringFormat.SetTrimming(BYVAL trimming AS StringTrimming) AS GpStatus
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.GetTrimming|CGpStringFormat.GetTrimming() AS StringTrimming
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.SetMeasurableCharacterRanges|CGpStringFormat.SetMeasurableCharacterRanges(BYVAL rangeCount AS INT_, BYVAL ranges AS CharacterRange PTR) AS GpStatus
AFX\CGDIPLUS\CGPSTRINGFORMAT.INC|CGpStringFormat.GetMeasurableCharacterRangeCount|CGpStringFormat.GetMeasurableCharacterRangeCount() AS INT_
AFX\CGRAPHCTX.INC|CGraphCtx.CGraphCtxProc|CGraphCtx.CGraphCtxProc(BYVAL hwnd AS HWND, BYVAL uMsg AS UINT, BYVAL wParam AS WPARAM, BYVAL lParam AS LPARAM) AS LRESULT
AFX\CGRAPHCTX.INC|CGraphCtx.hWindow|CGraphCtx.hWindow() AS HWND
AFX\CGRAPHCTX.INC|CGraphCtx.SetVirtualBufferSize|CGraphCtx.SetVirtualBufferSize(BYVAL nWidth AS LONG, BYVAL nHeight AS LONG) AS LONG
AFX\CGRAPHCTX.INC|CGraphCtx.GetMemDC|CGraphCtx.GetMemDC() AS HDC
AFX\CGRAPHCTX.INC|CGraphCtx.GethRC|CGraphCtx.GethRC() AS HGLRC
AFX\CGRAPHCTX.INC|CGraphCtx.GethBmp|CGraphCtx.GethBmp() AS HBITMAP
AFX\CGRAPHCTX.INC|CGraphCtx.GetBits|CGraphCtx.GetBits() AS ANY PTR
AFX\CGRAPHCTX.INC|CGraphCtx.Clear|CGraphCtx.Clear(BYVAL RGBColor AS COLORREF) AS BOOLEAN
AFX\CGRAPHCTX.INC|CGraphCtx.GetVirtualBufferWidth|CGraphCtx.GetVirtualBufferWidth() AS LONG
AFX\CGRAPHCTX.INC|CGraphCtx.GetVirtualBufferHeight|CGraphCtx.GetVirtualBufferHeight() AS LONG
AFX\CGRAPHCTX.INC|CGraphCtx.LoadImageFromFile|CGraphCtx.LoadImageFromFile(BYREF wszFileName AS WSTRING)
AFX\CGRAPHCTX.INC|CGraphCtx.CreateBitmapFromFile|CGraphCtx.CreateBitmapFromFile(BYREF wszFileName AS WSTRING, BYVAL dimPercent AS LONG = 0, BYVAL bGrayScale AS LONG = FALSE)
AFX\CGRAPHCTX.INC|CGraphCtx.LoadImageFromRes|CGraphCtx.LoadImageFromRes(BYVAL hInst AS HINSTANCE, BYREF wszImageName AS WSTRING, BYVAL dimPercent AS LONG = 0, BYVAL bGrayScale AS LONG = FALSE, BYVAL clrBackground AS ARGB = 0)
AFX\CGRAPHCTX.INC|CGraphCtx.DrawBitmap|CGraphCtx.DrawBitmap(BYVAL hbmp AS HBITMAP, BYVAL x AS SINGLE = 0, BYVAL y AS SINGLE = 0, BYVAL nRight AS SINGLE = 0, BYVAL nBottom AS SINGLE = 0) AS GpStatus
AFX\CGRAPHCTX.INC|CGraphCtx.DrawBitmap|CGraphCtx.DrawBitmap(BYVAL pBitmap AS GpBitmap PTR, BYVAL x AS SINGLE = 0, BYVAL y AS SINGLE = 0, BYVAL nRight AS SINGLE = 0, BYVAL nBottom AS SINGLE = 0) AS GpStatus
AFX\CGRAPHCTX.INC|CGraphCtx.DrawBitmap|CGraphCtx.DrawBitmap(BYREF pMemBmp AS CMemBmp, BYVAL x AS SINGLE = 0, BYVAL y AS SINGLE = 0, BYVAL nRight AS SINGLE = 0, BYVAL nBottom AS SINGLE = 0) AS GpStatus
AFX\CGRAPHCTX.INC|CGraphCtx.SaveImage|CGraphCtx.SaveImage(BYREF wszFileName AS WSTRING, BYREF wszMimeType AS WSTRING = "#########") AS LONG
AFX\CGRAPHCTX.INC|CGraphCtx.SaveImageAsBmp|CGraphCtx.SaveImageAsBmp(BYREF wszFileName AS WSTRING) AS LONG
AFX\CGRAPHCTX.INC|CGraphCtx.SaveImageAsJpeg|CGraphCtx.SaveImageAsJpeg(BYREF wszFileName AS WSTRING) AS LONG
AFX\CGRAPHCTX.INC|CGraphCtx.SaveImageAsPng|CGraphCtx.SaveImageAsPng(BYREF wszFileName AS WSTRING) AS LONG
AFX\CGRAPHCTX.INC|CGraphCtx.SaveImageAsGif|CGraphCtx.SaveImageAsGif(BYREF wszFileName AS WSTRING) AS LONG
AFX\CGRAPHCTX.INC|CGraphCtx.SaveImageAsTiff|CGraphCtx.SaveImageAsTiff(BYREF wszFileName AS WSTRING) AS LONG
AFX\CGRAPHCTX.INC|CGraphCtx.PrintImage|CGraphCtx.PrintImage(BYVAL bStretch AS BOOLEAN = FALSE, BYVAL nStretchMode AS LONG = InterpolationModeHighQualityBicubic) AS BOOLEAN
AFX\CGRAPHCTX.INC|CGraphCtx.SetPixelFormat|CGraphCtx.SetPixelFormat(BYVAL nBitsPerPel AS LONG) AS BOOLEAN
AFX\CGRAPHCTX.INC|CGraphCtx.CreateContext|CGraphCtx.CreateContext() AS HGLRC
AFX\CGRAPHCTX.INC|CGraphCtx.DeleteContext|CGraphCtx.DeleteContext() AS BOOLEAN
AFX\CGRAPHCTX.INC|CGraphCtx.MakeCurrent|CGraphCtx.MakeCurrent() AS BOOLEAN
AFX\CGRAPHCTX.INC|CGraphCtx.MakeNotCurrent|CGraphCtx.MakeNotCurrent() AS BOOLEAN
AFX\CGRAPHCTX.INC|AfxCGraphCtxPtr|AfxCGraphCtxPtr(BYVAL hwnd AS HWND) AS CGraphCtx PTR
AFX\CIMAGECTX.INC|CImageCtx.CImageCtxProc|CImageCtx.CImageCtxProc(BYVAL hwnd AS HWND, BYVAL uMsg AS UINT, BYVAL wParam AS WPARAM, BYVAL lParam AS LPARAM) AS LRESULT
AFX\CIMAGECTX.INC|CImageCtx.hWindow|CImageCtx.hWindow() AS HWND
AFX\CIMAGECTX.INC|CImageCtx.DrawImage|CImageCtx.DrawImage(BYVAL hwnd AS HWND, BYVAL hDC AS HDC, BYVAL pImage AS GpImage PTR) AS LONG
AFX\CIMAGECTX.INC|CImageCtx.LoadImageFromFile|CImageCtx.LoadImageFromFile(BYREF wszFileName AS WSTRING) AS LONG
AFX\CIMAGECTX.INC|CImageCtx.LoadBitmapFromResource|CImageCtx.LoadBitmapFromResource(BYVAL hInstance AS HINSTANCE, BYREF wszResourceName AS WSTRING) AS LONG
AFX\CIMAGECTX.INC|CImageCtx.LoadImageFromResource|CImageCtx.LoadImageFromResource(BYVAL hInstance AS HINSTANCE, BYREF wszResourceName AS WSTRING) AS LONG
AFX\CIMAGECTX.INC|CImageCtx.Redraw|
AFX\CIMAGECTX.INC|CImageCtx.SetImageAdjustment|CImageCtx.SetImageAdjustment(BYVAL ImageAdjustment AS LONG, BYVAL fRedraw AS BOOLEAN = FALSE) AS LONG
AFX\CIMAGECTX.INC|CImageCtx.GetImageAdjustment|CImageCtx.GetImageAdjustment() AS LONG
AFX\CIMAGECTX.INC|CImageCtx.GetImageWidth|CImageCtx.GetImageWidth() AS LONG
AFX\CIMAGECTX.INC|CImageCtx.GetImageHeight|CImageCtx.GetImageHeight() AS LONG
AFX\CIMAGECTX.INC|CImageCtx.SetBkColor|CImageCtx.SetBkColor(BYVAL clr AS LONG, BYVAL fRedraw AS BOOLEAN = FALSE) AS LONG
AFX\CIMAGECTX.INC|CImageCtx.GetBkColor|CImageCtx.GetBkColor() AS LONG
AFX\CIMAGECTX.INC|CImageCtx.SetInterpolationMode|CImageCtx.SetInterpolationMode(BYVAL InterpolationMode AS LONG)
AFX\CIMAGECTX.INC|CImageCtx.GetInterpolationMode|CImageCtx.GetInterpolationMode() AS LONG
AFX\CIMAGECTX.INC|CImageCtx.GetImagePtr|CImageCtx.GetImagePtr() AS GpImage PTR
AFX\CIMAGECTX.INC|CImageCtx.Clear|
AFX\CIMAGECTX.INC|AfxCImageCtxPtr|AfxCImageCtxPtr OVERLOAD(BYVAL hCtl AS HWND) AS CImageCtx PTR
AFX\CIMAGECTX.INC|AfxCImageCtxPtr|AfxCImageCtxPtr OVERLOAD(BYVAL hParent AS HWND, BYVAL cID AS LONG) AS CImageCtx PTR
AFX\CINIFILE.INC|CIniFile.GetPath|CIniFile.GetPath() AS CWSTR
AFX\CINIFILE.INC|CIniFile.WriteValue|CIniFile.WriteValue(BYREF wszSectionName AS WSTRING, BYREF wszKeyName AS WSTRING, BYREF wszValue AS WSTRING) AS BOOLEAN
AFX\CINIFILE.INC|CIniFile.WriteValue|CIniFile.WriteValue(BYREF wszSectionName AS WSTRING, BYREF wszKeyName AS WSTRING, BYREF dblValue AS DOUBLE) AS BOOLEAN
AFX\CINIFILE.INC|CIniFile.WriteValue|CIniFile.WriteValue(BYREF wszSectionName AS WSTRING, BYREF wszKeyName AS WSTRING, BYREF intValue AS LONG) AS BOOLEAN
AFX\CINIFILE.INC|CIniFile.GetString|CIniFile.GetString(BYREF wszSectionName AS WSTRING, BYREF wszKeyName AS WSTRING, BYREF wszDefaultValue AS WSTRING = "") AS CWSTR
AFX\CINIFILE.INC|CIniFile.GetDouble|CIniFile.GetDouble(BYREF wszSectionName AS WSTRING, BYREF wszKeyName AS WSTRING, BYVAL nDefaultValue AS DOUBLE = 0) AS DOUBLE
AFX\CINIFILE.INC|CIniFile.GetInt|CIniFile.GetInt(BYREF wszSectionName AS WSTRING, BYREF wszKeyName AS WSTRING, BYVAL nDefaultValue AS LONG = 0) AS LONG
AFX\CINIFILE.INC|CIniFile.DeleteKey|CIniFile.DeleteKey(BYREF wszSectionName AS WSTRING, BYREF wszKeyName AS WSTRING) AS BOOLEAN
AFX\CINIFILE.INC|CIniFile.DeleteSection|CIniFile.DeleteSection(BYREF wszSectionName AS WSTRING) AS BOOLEAN
AFX\CINIFILE.INC|CIniFile.GetSectionNames|CIniFile.GetSectionNames() AS CSafeArray
AFX\CINIFILE.INC|CIniFile.GetKeyNames|CIniFile.GetKeyNames(BYREF wszSectionName AS WSTRING) AS CSafeARray
AFX\CINIFILE.INC|CIniFile.GetSectionValues|CIniFile.GetSectionValues(BYREF wszSectionName AS WSTRING, BYREF pDic AS CDicObj) AS BOOLEAN
AFX\CLAYOUT.INC|CLayout.GetAnchorItem|CLayout.GetAnchorItem(BYVAL hwndCtl AS HWND) AS LONG
AFX\CLAYOUT.INC|CLayout.AnchorControl|CLayout.AnchorControl OVERLOAD(BYVAL hwndCtl AS HWND, BYVAL nAnchorMode AS LONG) AS BOOLEAN
AFX\CLAYOUT.INC|CLayout.AnchorControl|CLayout.AnchorControl OVERLOAD(BYVAL cID AS LONG, BYVAL nAnchorMode AS LONG) AS BOOLEAN
AFX\CLAYOUT.INC|CLayout.AfxLayoutEnumChildProc|CLayout.AfxLayoutEnumChildProc(BYVAL hwndChild AS HWND, BYVAL lParam AS LPARAM) AS LONG
AFX\CLAYOUT.INC|CLayout.AdjustControls|
AFX\CMEMBMP.INC|CMemBmp.GetMemDC|CMemBmp.GetMemDC() AS HDC
AFX\CMEMBMP.INC|CMemBmp.GethBmp|CMemBmp.GethBmp() AS HBITMAP
AFX\CMEMBMP.INC|CMemBmp.DrawBitmap|CMemBmp.DrawBitmap(BYVAL hbmp AS HBITMAP, BYVAL x AS SINGLE = 0, BYVAL y AS SINGLE = 0, BYVAL nRight AS SINGLE = 0, BYVAL nBottom AS SINGLE = 0) AS GpStatus
AFX\CMEMBMP.INC|CMemBmp.DrawBitmap|CMemBmp.DrawBitmap(BYVAL pBitmap AS GpBitmap PTR, BYVAL x AS SINGLE = 0, BYVAL y AS SINGLE = 0, BYVAL nRight AS SINGLE = 0, BYVAL nBottom AS SINGLE = 0) AS GpStatus
AFX\CMEMBMP.INC|CMemBmp.GetWidth|CMemBmp.GetWidth() AS LONG
AFX\CMEMBMP.INC|CMemBmp.GetHeight|CMemBmp.GetHeight() AS LONG
AFX\CMEMBMP.INC|CMemBmp.GetWidthBytes|CMemBmp.GetWidthBytes() AS LONG
AFX\CMEMBMP.INC|CMemBmp.GetPlanes|CMemBmp.GetPlanes() AS LONG
AFX\CMEMBMP.INC|CMemBmp.GetBitsPixel|CMemBmp.GetBitsPixel() AS LONG
AFX\CMEMBMP.INC|CMemBmp.GetPixel|CMemBmp.GetPixel(BYVAL x AS LONG, BYVAL y AS LONG) AS COLORREF
AFX\CMEMBMP.INC|CMemBmp.SetPixel|CMemBmp.SetPixel(BYVAL x AS LONG, BYVAL y AS LONG, BYVAL crColor AS COLORREF) AS COLORREF
AFX\CMEMBMP.INC|CMemBmp.SaveBitmap|CMemBmp.SaveBitmap(BYREF wszFileName AS WSTRING, BYREF wszMimeType AS WSTRING = "#########") AS LONG
AFX\CMEMBMP.INC|CMemBmp.SaveBitmapAsBmp|CMemBmp.SaveBitmapAsBmp(BYREF wszFileName AS WSTRING) AS LONG
AFX\CMEMBMP.INC|CMemBmp.SaveBitmapAsJpeg|CMemBmp.SaveBitmapAsJpeg(BYREF wszFileName AS WSTRING) AS LONG
AFX\CMEMBMP.INC|CMemBmp.SaveBitmapAsPng|CMemBmp.SaveBitmapAsPng(BYREF wszFileName AS WSTRING) AS LONG
AFX\CMEMBMP.INC|CMemBmp.SaveBitmapAsGif|CMemBmp.SaveBitmapAsGif(BYREF wszFileName AS WSTRING) AS LONG
AFX\CMEMBMP.INC|CMemBmp.SaveBitmapAsTiff|CMemBmp.SaveBitmapAsTiff(BYREF wszFileName AS WSTRING) AS LONG
AFX\CMEMBMP.INC|CMemBmp.PrintBitmap|CMemBmp.PrintBitmap(BYVAL bStretch AS BOOLEAN = FALSE, BYVAL nStretchMode AS LONG = InterpolationModeHighQualityBicubic) AS BOOLEAN
AFX\CODBC\CODBC.INC|COdbcBase.GetLastResult|COdbcBase.GetLastResult() AS SQLRETURN
AFX\CODBC\CODBC.INC|COdbcBase.SetResult|COdbcBase.SetResult(BYVAL Result AS SQLRETURN, BYREF wszSrc AS WSTRING = "", BYVAL HandleType AS SQLSMALLINT = 0, BYVAL Handle AS SQLHANDLE = NULL) AS SQLRETURN
AFX\CODBC\CODBC.INC|COdbcBase.Error|COdbcBase.Error() AS BOOLEAN
AFX\CODBC\CODBC.INC|COdbcBase.SetErrorProc|COdbcBase.SetErrorProc(BYVAL pProc AS ANY PTR, BYVAL reportWarnings AS BOOLEAN = FALSE)
AFX\CODBC\CODBC.INC|COdbcBase.GetErrorInfo|COdbcBase.GetErrorInfo(BYVAL HandleType AS SQLSMALLINT, BYVAL Handle AS SQLHANDLE, BYVAL iErrorCode AS SQLRETURN = 0) AS CWSTR
AFX\CODBC\CODBC.INC|COdbcBase.GetSqlState|COdbcBase.GetSqlState(BYVAL HandleType AS SQLSMALLINT, BYVAL Handle AS SQLHANDLE) AS CWSTR
AFX\CODBC\CODBC.INC|COdbcBase.ODBCVersion|COdbcBase.ODBCVersion() AS SQLUINTEGER
AFX\CODBC\CODBC.INC|COdbcBase.GetEnvAttr|COdbcBase.GetEnvAttr(BYVAL Attribute AS SQLINTEGER, BYVAL ValuePtr AS SQLPOINTER, BYVAL BufferLength AS SQLINTEGER, BYVAL StringLength AS SQLINTEGER PTR) AS SQLRETURN
AFX\CODBC\CODBC.INC|COdbcBase.SetEnvAttr|COdbcBase.SetEnvAttr(BYVAL Attribute AS SQLINTEGER, BYVAL ValuePtr AS SQLPOINTER, BYVAL StringLength AS SQLINTEGER) AS SQLRETURN
AFX\CODBC\CODBC.INC|COdbcBase.GetCPMatch|COdbcBase.GetCPMatch() AS SQLUINTEGER
AFX\CODBC\CODBC.INC|COdbcBase.SetCPMatch|COdbcBase.SetCPMatch(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBC.INC|COdbcBase.GetOutputNTS|COdbcBase.GetOutputNTS() AS SQLUINTEGER
AFX\CODBC\CODBC.INC|COdbcBase.SetOutputNTS|COdbcBase.SetOutputNTS(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBC.INC|COdbcBase.GetDataSources|COdbcBase.GetDataSources(BYVAL Direction AS SQLUSMALLINT, BYREF cwsServerName AS CWSTR, BYREF cwsDescription AS CWSTR) AS SQLRETURN
AFX\CODBC\CODBC.INC|COdbcBase.GetDrivers|COdbcBase.GetDrivers(BYVAL Direction AS SQLUSMALLINT, BYREF cwsDriverDesc AS CWSTR, BYREF cwsDriverAttributes AS CWSTR) AS SQLRETURN
AFX\CODBC\CODBCDBC.INC|COdbc.Handle|COdbc.Handle() AS SQLHANDLE
AFX\CODBC\CODBCDBC.INC|COdbc.EnvHandle|COdbc.EnvHandle() AS SQLHANDLE
AFX\CODBC\CODBCDBC.INC|COdbc.GetDiagField|COdbc.GetDiagField(BYVAL RecNumber AS SQLSMALLINT, BYVAL DiagIdentifier AS SQLSMALLINT, BYVAL DiagInfoPtr AS SQLPOINTER, BYVAL BufferLength AS SQLSMALLINT, BYVAL StringLengthPtr AS SQLSMALLINT PTR) AS SQLRETURN
AFX\CODBC\CODBCDBC.INC|COdbc.GetDiagRec|COdbc.GetDiagRec(BYVAL RecNumber AS SQLSMALLINT, BYVAL Sqlstate AS WSTRING PTR, BYVAL NativeError AS SQLINTEGER PTR, BYVAL MessageText AS WSTRING PTR, BYVAL BufferLength AS SQLSMALLINT, BYVAL TextLength AS SQLSMALLINT PTR) AS SQLRETURN
AFX\CODBC\CODBCDBC.INC|COdbc.GetErrorInfo|COdbc.GetErrorInfo(BYVAL iErrorCode AS SQLRETURN = 0) AS CWSTR
AFX\CODBC\CODBCDBC.INC|COdbc.GetSqlState|COdbc.GetSqlState() AS CWSTR
AFX\CODBC\CODBCDBC.INC|COdbc.NativeSql|COdbc.NativeSql(BYREF wszInText AS WSTRING) AS CWSTR
AFX\CODBC\CODBCDBC.INC|COdbc.Functions|COdbc.Functions(BYVAL FunctionId AS SQLUSMALLINT) AS BOOLEAN
AFX\CODBC\CODBCDBC.INC|COdbc.Supports|COdbc.Supports(BYVAL FunctionId AS SQLUSMALLINT) AS BOOLEAN
AFX\CODBC\CODBCDBC.INC|COdbc.CommitTran|COdbc.CommitTran() AS SQLRETURN
AFX\CODBC\CODBCDBC.INC|COdbc.RollbackTran|COdbc.RollbackTran() AS SQLRETURN
AFX\CODBC\CODBCDBC.INC|COdbc.GetConnectAttr|COdbc.GetConnectAttr(BYVAL Attribute AS SQLINTEGER, BYVAL ValuePtr AS SQLPOINTER, BYVAL BufferLength AS SQLINTEGER, BYVAL StringLength AS SQLINTEGER PTR) AS SQLRETURN
AFX\CODBC\CODBCDBC.INC|COdbc.SetConnectAttr|COdbc.SetConnectAttr(BYVAL Attribute AS SQLINTEGER, BYVAL ValuePtr AS SQLPOINTER, BYVAL StringLength AS SQLINTEGER) AS SQLRETURN
AFX\CODBC\CODBCDBC.INC|COdbc.GetConnectAttr|COdbc.GetConnectAttr(BYREF wszAttribute AS WSTRING) AS SQLUINTEGER
AFX\CODBC\CODBCDBC.INC|COdbc.GetConnectAttrStr|COdbc.GetConnectAttrStr(BYREF wszAttribute AS WSTRING) AS CWSTR
AFX\CODBC\CODBCDBC.INC|COdbc.SetConnectAttr|COdbc.SetConnectAttr(BYREF wszAttribute AS WSTRING, BYVAL dwAttribute AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCDBC.INC|COdbc.SetConnectAttr|COdbc.SetConnectAttr(BYREF wszAttribute AS WSTRING, BYREF wszAttrValue AS WSTRING) AS SQLRETURN
AFX\CODBC\CODBCDBC.INC|COdbc.GetInfo|COdbc.GetInfo(BYVAL InfoType AS SQLUSMALLINT, BYVAL InfoValuePtr AS SQLPOINTER, BYVAL BufferLength AS SQLSMALLINT, BYVAL StringLength AS SQLSMALLINT PTR) AS SQLRETURN
AFX\CODBC\CODBCDBC.INC|COdbc.GetInfoStr|COdbc.GetInfoStr(BYREF wszInfoType AS WSTRING) AS CWSTR
AFX\CODBC\CODBCDBC.INC|COdbc.GetInfo|COdbc.GetInfo(BYREF wszInfoType AS WSTRING) AS SQLINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.Handle|COdbcStmt.Handle() AS SQLHANDLE
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.DbcHandle|COdbcStmt.DbcHandle() AS SQLHANDLE
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetDiagField|COdbcStmt.GetDiagField(BYVAL RecNumber AS SQLSMALLINT, BYVAL DiagIdentifier AS SQLSMALLINT, BYVAL DiagInfoPtr AS SQLPOINTER, BYVAL BufferLength AS SQLSMALLINT, BYVAL StringLengthPtr AS SQLSMALLINT PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetDiagRec|COdbcStmt.GetDiagRec(BYVAL RecNumber AS SQLSMALLINT, BYVAL Sqlstate AS WSTRING PTR, BYVAL NativeError AS SQLINTEGER PTR, BYVAL MessageText AS WSTRING PTR, BYVAL BufferLength AS SQLSMALLINT, BYVAL TextLength AS SQLSMALLINT PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetErrorInfo|COdbcStmt.GetErrorInfo(BYVAL iErrorCode AS SQLRETURN = 0) AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetSqlState|COdbcStmt.GetSqlState() AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ExecDirect|COdbcStmt.ExecDirect(BYREF wszSqlStr AS WSTRING) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.RecordCount|COdbcStmt.RecordCount(BYREF wszSqlStr AS WSTRING) AS LONG
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.Cancel|COdbcStmt.Cancel() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.NumResultCols|COdbcStmt.NumResultCols() AS SQLSMALLINT
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.MoreResults|COdbcStmt.MoreResults() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.RowCount|COdbcStmt.RowCount() AS SQLLEN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.Fetch|COdbcStmt.Fetch() AS BOOLEAN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetData|COdbcStmt.GetData(BYVAL ColumnNumber AS SQLUSMALLINT, BYVAL TargetType AS SQLSMALLINT, BYVAL TargetValue AS SQLPOINTER, BYVAL BufferLength AS SQLLEN, BYVAL StrLen_or_Ind AS SQLLEN PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetData|COdbcStmt.GetData(BYREF ColumnName AS WSTRING, BYVAL TargetType AS SQLSMALLINT, BYVAL TargetValue AS SQLPOINTER, BYVAL BufferLength AS SQLLEN, BYVAL StrLen_or_Ind AS SQLLEN PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetData|COdbcStmt.GetData(BYVAL ColumnNumber AS SQLUSMALLINT, BYVAL nMaxChars AS LONG = 256 * 2) AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetData|COdbcStmt.GetData(BYREF ColumnName AS WSTRING, BYVAL nMaxChars AS LONG = 256 * 2) AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetLongVarcharData|COdbcStmt.GetLongVarcharData(BYVAL ColumnNumber AS SQLSMALLINT) AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetLongVarcharData|COdbcStmt.GetLongVarcharData(BYREF ColumnName AS WSTRING) AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.PutData|COdbcStmt.PutData(BYVAL pData AS SQLPOINTER, BYVAL StrLen_or_Ind AS SQLLEN) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ParamData|COdbcStmt.ParamData(BYVAL ValuePtrPtr AS SQLPOINTER PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ResetParams|COdbcStmt.ResetParams() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.Prepare|COdbcStmt.Prepare(BYREF StatementText AS WSTRING) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.Execute|COdbcStmt.Execute() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.DescribeCol|COdbcStmt.DescribeCol(BYVAL ColumnNumber AS SQLUSMALLINT, BYVAL pwszColumnName AS WSTRING PTR, BYVAL BufferLength AS SQLSMALLINT, BYVAL NameLengthPtr AS SQLSMALLINT PTR, BYVAL DataTypePtr AS SQLSMALLINT PTR, BYVAL ColumnSizePtr AS SQLULEN PTR, BYVAL DecimalDigitsPtr AS SQLSMALLINT PTR, BYVAL Nullable AS SQLSMALLINT PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.NumParams|COdbcStmt.NumParams() AS SQLSMALLINT
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.DescribeParam|COdbcStmt.DescribeParam(BYVAL ParameterNumber AS SQLUSMALLINT, BYVAL DataTypePtr AS SQLSMALLINT PTR, BYVAL ParameterSizePtr AS SQLULEN PTR, BYVAL DecimalDigitsPtr AS SQLSMALLINT PTR, BYVAL NullablePtr AS SQLSMALLINT PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColIsNull|COdbcStmt.ColIsNull(BYVAL ColumnNumber AS SQLUSMALLINT) AS BOOLEAN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindCol|COdbcStmt.BindCol(BYVAL ColNumber AS SQLUSMALLINT, BYVAL TargetType AS SQLSMALLINT, BYVAL TargetValue AS SQLPOINTER, BYVAL BufferLength AS SQLLEN, BYVAL StrLen_or_Ind AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindCol|COdbcStmt.BindCol(BYVAL ColNumber AS SQLUSMALLINT, BYVAL TargetValue AS BYTE PTR, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindCol|COdbcStmt.BindCol(BYVAL ColNumber AS SQLUSMALLINT, BYVAL TargetValue AS UBYTE PTR, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindCol|COdbcStmt.BindCol(BYVAL ColNumber AS SQLUSMALLINT, BYVAL TargetValue AS SHORT PTR, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindCol|COdbcStmt.BindCol(BYVAL ColNumber AS SQLUSMALLINT, BYVAL TargetValue AS USHORT PTR, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindCol|COdbcStmt.BindCol(BYVAL ColNumber AS SQLUSMALLINT, BYVAL TargetValue AS LONG PTR, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindCol|COdbcStmt.BindCol(BYVAL ColNumber AS SQLUSMALLINT, BYVAL TargetValue AS ULONG PTR, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindCol|COdbcStmt.BindCol(BYVAL ColNumber AS SQLUSMALLINT, BYVAL TargetValue AS SINGLE PTR, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindCol|COdbcStmt.BindCol(BYVAL ColNumber AS SQLUSMALLINT, BYVAL TargetValue AS DOUBLE PTR, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindCol|COdbcStmt.BindCol(BYVAL ColNumber AS SQLUSMALLINT, BYVAL TargetValue AS LONGINT PTR, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindCol|COdbcStmt.BindCol(BYVAL ColNumber AS SQLUSMALLINT, BYVAL TargetValue AS ULONGINT PTR, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindCol|COdbcStmt.BindCol(BYVAL ColNumber AS SQLUSMALLINT, BYVAL TargetValue AS ZSTRING PTR, BYVAL BufferLenght AS SQLLEN, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindCol|COdbcStmt.BindCol(BYVAL ColNumber AS SQLUSMALLINT, BYVAL TargetValue AS WSTRING PTR, BYVAL BufferLenght AS SQLLEN, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindCol|COdbcStmt.BindCol(BYVAL ColNumber AS SQLUSMALLINT, BYVAL TargetValue AS DATE_STRUCT PTR, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindCol|COdbcStmt.BindCol(BYVAL ColNumber AS SQLUSMALLINT, BYVAL TargetValue AS TIME_STRUCT PTR, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindCol|COdbcStmt.BindCol(BYVAL ColNumber AS SQLUSMALLINT, BYVAL TargetValue AS TIMESTAMP_STRUCT PTR, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindCol|COdbcStmt.BindCol(BYVAL ColNumber AS SQLUSMALLINT, BYVAL TargetValue AS ANY PTR, BYVAL BufferLenght AS SQLLEN, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindColToBit|COdbcStmt.BindColToBit(BYVAL ColNumber AS SQLUSMALLINT, BYVAL TargetValue AS SHORT PTR, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindColToNumeric|COdbcStmt.BindColToNumeric(BYVAL ColNumber AS SQLUSMALLINT, BYREF TargetValue AS ZSTRING, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindColToDecimal|COdbcStmt.BindColToDecimal(BYVAL ColNumber AS SQLUSMALLINT, BYREF TargetValue AS ZSTRING, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.UnbindCol|COdbcStmt.UnbindCol(BYVAL nCol AS SQLUSMALLINT) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.UnbindColumns|COdbcStmt.UnbindColumns() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BindParameter|COdbcStmt.BindParameter(BYVAL ParameterNumber AS SQLUSMALLINT, BYVAL InputOutputType AS SQLSMALLINT, BYVAL ValueType AS SQLSMALLINT, BYVAL ParameterType AS SQLSMALLINT, BYVAL ColumnSize AS SQLULEN, BYVAL DecimalDigits AS SQLSMALLINT, BYVAL ParameterValuePtr AS SQLPOINTER, BYVAL BufferLength AS SQLLEN, BYVAL StrLen_or_IndPtr AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.CloseCursor|COdbcStmt.CloseCursor() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetCursorName|COdbcStmt.GetCursorName() AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetCursorName|COdbcStmt.SetCursorName(BYREF wszCursorName AS WSTRING) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.FetchScroll|COdbcStmt.FetchScroll(BYVAL FetchOrientation AS SQLSMALLINT, BYVAL FetchOffset AS SQLLEN) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ExtendedFetch|COdbcStmt.ExtendedFetch(BYVAL FetchOrientation AS SQLUSMALLINT, BYVAL FetchOffset AS SQLLEN, BYVAL RowCountPtr AS ANY PTR, BYVAL RowStatusArray AS SQLUSMALLINT PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.MoveFirst|COdbcStmt.MoveFirst() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.MoveLast|COdbcStmt.MoveLast() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.MoveNext|COdbcStmt.MoveNext() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.MovePrevious|COdbcStmt.MovePrevious() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.Move|COdbcStmt.Move(BYVAL FetchOffset AS SQLLEN) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetAbsolutePosition|COdbcStmt.SetAbsolutePosition(BYVAL FetchOffset AS SQLLEN) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetRelativePosition|COdbcStmt.SetRelativePosition(BYVAL FetchOffset AS SQLLEN) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetPos|COdbcStmt.SetPos(BYVAL wRow AS SQLSETPOSIROW, BYVAL fOption AS SQLUSMALLINT, BYVAL fLock AS SQLUSMALLINT) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetPosition|COdbcStmt.SetPosition(BYVAL wRow AS SQLSETPOSIROW) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.UpdateRecord|COdbcStmt.UpdateRecord(BYVAL wRow AS SQLSETPOSIROW = 1) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.RefreshRecord|COdbcStmt.RefreshRecord(BYVAL wRow AS SQLSETPOSIROW = 1, BYVAL fLock AS SQLUSMALLINT = SQL_LOCK_NO_CHANGE) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.LockRecord|COdbcStmt.LockRecord(BYVAL wRow AS SQLSETPOSIROW = 1) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.UnlockRecord|COdbcStmt.UnlockRecord(BYVAL wRow AS SQLSETPOSIROW = 1) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.DeleteRecord|COdbcStmt.DeleteRecord(BYVAL wRow AS SQLSETPOSIROW = 1) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.BulkOperations|COdbcStmt.BulkOperations(BYVAL Operation AS SQLSMALLINT) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.AddRecord|COdbcStmt.AddRecord() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.UpdateByBookmark|COdbcStmt.UpdateByBookmark() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.DeleteByBookmark|COdbcStmt.DeleteByBookmark() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.FetchByBookmark|COdbcStmt.FetchByBookmark() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColAttribute|COdbcStmt.ColAttribute(BYVAL ColumnNumber AS SQLUSMALLINT, BYVAL FieldIdentifier AS SQLUSMALLINT, BYVAL CharacterAttribute AS SQLPOINTER, BYVAL BufferLength AS SQLSMALLINT, BYVAL StringLength AS SQLSMALLINT PTR, BYVAL NumericAttribute AS ANY PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColAutoUniqueValue|COdbcStmt.ColAutoUniqueValue(BYVAL ColNum AS SQLUSMALLINT) AS BOOLEAN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColBaseColumnName|COdbcStmt.ColBaseColumnName(BYVAL ColNum AS SQLUSMALLINT) AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColBaseTableName|COdbcStmt.ColBaseTableName(BYVAL ColNum AS SQLUSMALLINT) AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColCaseSensitive|COdbcStmt.ColCaseSensitive(BYVAL ColNum AS SQLUSMALLINT) AS BOOLEAN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColCatalogName|COdbcStmt.ColCatalogName(BYVAL ColNum AS SQLUSMALLINT) AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColConciseType|COdbcStmt.ColConciseType(BYVAL ColNum AS SQLUSMALLINT) AS SQLINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColCount|COdbcStmt.ColCount() AS SQLINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColDisplaySize|COdbcStmt.ColDisplaySize(BYVAL ColNum AS SQLUSMALLINT) AS SQLINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColFixedPrecScale|COdbcStmt.ColFixedPrecScale(BYVAL ColNum AS SQLUSMALLINT) AS BOOLEAN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColLabel|COdbcStmt.ColLabel(BYVAL ColNum AS SQLUSMALLINT) AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColLength|COdbcStmt.ColLength(BYVAL ColNum AS SQLUSMALLINT) AS SQLINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColLiteralPrefix|COdbcStmt.ColLiteralPrefix(BYVAL ColNum AS SQLUSMALLINT) AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColLiteralSuffix|COdbcStmt.ColLiteralSuffix(BYVAL ColNum AS SQLUSMALLINT) AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColLocalTypeName|COdbcStmt.ColLocalTypeName(BYVAL ColNum AS SQLUSMALLINT) AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColName|COdbcStmt.ColName(BYVAL ColNum AS SQLUSMALLINT) AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColNullable|COdbcStmt.ColNullable(BYVAL ColNum AS SQLUSMALLINT) AS SQLINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColNumPrecRadix|COdbcStmt.ColNumPrecRadix(BYVAL ColNum AS SQLUSMALLINT) AS SQLINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColOctetLength|COdbcStmt.ColOctetLength(BYVAL ColNum AS SQLUSMALLINT) AS SQLINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColPrecision|COdbcStmt.ColPrecision(BYVAL ColNum AS SQLUSMALLINT) AS SQLINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColScale|COdbcStmt.ColScale(BYVAL ColNum AS SQLUSMALLINT) AS SQLINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColSchemaName|COdbcStmt.ColSchemaName(BYVAL ColNum AS SQLUSMALLINT) AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColSearchable|COdbcStmt.ColSearchable(BYVAL ColNum AS SQLUSMALLINT) AS SQLINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColTableName|COdbcStmt.ColTableName(BYVAL ColNum AS SQLUSMALLINT) AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColType|COdbcStmt.ColType(BYVAL ColNum AS SQLUSMALLINT) AS SQLINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColTypeName|COdbcStmt.ColTypeName(BYVAL ColNum AS SQLUSMALLINT) AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColUnnamed|COdbcStmt.ColUnnamed(BYVAL ColNum AS SQLUSMALLINT) AS SQLINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColUnsigned|COdbcStmt.ColUnsigned(BYVAL ColNum AS SQLUSMALLINT) AS BOOLEAN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.ColUpdatable|COdbcStmt.ColUpdatable(BYVAL ColNum AS SQLUSMALLINT) AS BOOLEAN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtAttr|COdbcStmt.GetStmtAttr(BYVAL Attribute AS SQLINTEGER, BYVAL ValuePtr AS SQLPOINTER, BYVAL BufferLength AS SQLINTEGER, BYVAL StringLength AS SQLINTEGER PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtAttr|COdbcStmt.SetStmtAttr(BYVAL Attribute AS SQLINTEGER, BYVAL ValuePtr AS SQLPOINTER, BYVAL StringLength AS SQLINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetCursorConcurrency|COdbcStmt.GetCursorConcurrency() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetCursorConcurrency|COdbcStmt.SetCursorConcurrency(BYVAL LockType AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetOptimisticConcurrency|COdbcStmt.SetOptimisticConcurrency() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetLockConcurrency|COdbcStmt.SetLockConcurrency() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetReadOnlyConcurrency|COdbcStmt.SetReadOnlyConcurrency() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetRowVerConcurrency|COdbcStmt.SetRowVerConcurrency() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetCursorType|COdbcStmt.GetCursorType() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetCursorType|COdbcStmt.SetCursorType(BYVAL CursorType AS DWORD) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetForwardOnlyCursor|COdbcStmt.SetForwardOnlyCursor() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetKeysetDrivenCursor|COdbcStmt.SetKeysetDrivenCursor() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStaticCursor|COdbcStmt.SetStaticCursor() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetDynamicCursor|COdbcStmt.SetDynamicCursor() AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetMultiuserKeysetCursor|COdbcStmt.SetMultiuserKeysetCursor(BYVAL pwszCursorName AS WSTRING PTR = NULL) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetCursorKeysetSize|COdbcStmt.GetCursorKeysetSize() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetCursorKeysetSize|COdbcStmt.SetCursorKeysetSize(BYVAL KeysetSize AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetCursorScrollability|COdbcStmt.GetCursorScrollability() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetCursorScrollability|COdbcStmt.SetCursorScrollability(BYVAL CursorScrollability AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetCursorSensitivity|COdbcStmt.GetCursorSensitivity() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetCursorSensitivity|COdbcStmt.SetCursorSensitivity(BYVAL CursorSensitivity AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtAppParamDesc|COdbcStmt.GetStmtAppParamDesc() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtAppParamDesc|COdbcStmt.SetStmtAppParamDesc(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtAppRowDesc|COdbcStmt.GetStmtAppRowDesc() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtAppRowDesc|COdbcStmt.SetStmtAppRowDesc(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtAsyncEnable|COdbcStmt.GetStmtAsyncEnable() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtAsyncEnable|COdbcStmt.SetStmtAsyncEnable(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtFetchBookmarkPtr|COdbcStmt.GetStmtFetchBookmarkPtr() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtFetchBookmarkPtr|COdbcStmt.SetStmtFetchBookmarkPtr(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetImpParamDesc|COdbcStmt.GetImpParamDesc() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetImpParamDescRec|COdbcStmt.GetImpParamDescRec(BYVAL RecNumber AS SQLSMALLINT, BYVAL pwszName AS WSTRING PTR, BYVAL BufferLength AS SQLSMALLINT, BYVAL StringLength AS SQLSMALLINT PTR, BYVAL TypePtr AS SQLSMALLINT PTR, BYVAL SubTypePtr AS SQLSMALLINT PTR, BYVAL LengthPtr AS SQLLEN PTR, BYVAL PrecisionPtr AS SQLSMALLINT PTR, BYVAL ScalePtr AS SQLSMALLINT PTR, BYVAL NullablePtr AS SQLSMALLINT PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetImpParamDescField|COdbcStmt.GetImpParamDescField(BYVAL RecNumber AS SQLSMALLINT, BYVAL FieldIdentifier AS SQLSMALLINT, BYVAL ValuePtr AS SQLPOINTER, BYVAL BufferLength AS SQLINTEGER, BYVAL StringLength AS SQLINTEGER PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetImpParamDescFieldName|COdbcStmt.GetImpParamDescFieldName(BYVAL RecNumber AS SQLSMALLINT) AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetImpParamDescFieldType|COdbcStmt.GetImpParamDescFieldType(BYVAL RecNumber AS SQLSMALLINT) AS SQLSMALLINT
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetImpParamDescFieldOctetLength|COdbcStmt.GetImpParamDescFieldOctetLength(BYVAL RecNumber AS SQLSMALLINT) AS SQLSMALLINT
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetImpParamDescFieldPrecision|COdbcStmt.GetImpParamDescFieldPrecision(BYVAL RecNumber AS SQLSMALLINT) AS SQLSMALLINT
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetImpParamDescFieldScale|COdbcStmt.GetImpParamDescFieldScale(BYVAL RecNumber AS SQLSMALLINT) AS SQLSMALLINT
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetImpParamDescFieldNullable|COdbcStmt.GetImpParamDescFieldNullable(BYVAL RecNumber AS SQLSMALLINT) AS SQLSMALLINT
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetImpRowDesc|COdbcStmt.GetImpRowDesc() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetImpRowDescRec|COdbcStmt.GetImpRowDescRec(BYVAL RecNumber AS SQLSMALLINT, BYVAL pwszName AS WSTRING PTR, BYVAL BufferLength AS SQLSMALLINT, BYVAL StringLength AS SQLSMALLINT PTR, BYVAL TypePtr AS SQLSMALLINT PTR, BYVAL SubTypePtr AS SQLSMALLINT PTR, BYVAL LengthPtr AS SQLLEN PTR, BYVAL PrecisionPtr AS SQLSMALLINT PTR, BYVAL ScalePtr AS SQLSMALLINT PTR, BYVAL NullablePtr AS SQLSMALLINT PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetImpRowDescField|COdbcStmt.GetImpRowDescField(BYVAL RecNumber AS SQLSMALLINT, BYVAL FieldIdentifier AS SQLSMALLINT, BYVAL ValuePtr AS SQLPOINTER, BYVAL BufferLength AS SQLINTEGER, BYVAL StringLength AS SQLINTEGER PTR) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetImpRowDescFieldName|COdbcStmt.GetImpRowDescFieldName(BYVAL RecNumber AS SQLSMALLINT) AS CWSTR
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetImpRowDescFieldType|COdbcStmt.GetImpRowDescFieldType(BYVAL RecNumber AS SQLSMALLINT) AS SQLSMALLINT
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetImpRowDescFieldOctetLength|COdbcStmt.GetImpRowDescFieldOctetLength(BYVAL RecNumber AS SQLSMALLINT) AS SQLSMALLINT
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetImpRowDescFieldPrecision|COdbcStmt.GetImpRowDescFieldPrecision(BYVAL RecNumber AS SQLSMALLINT) AS SQLSMALLINT
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetImpRowDescFieldScale|COdbcStmt.GetImpRowDescFieldScale(BYVAL RecNumber AS SQLSMALLINT) AS SQLSMALLINT
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetImpRowDescFieldNullable|COdbcStmt.GetImpRowDescFieldNullable(BYVAL RecNumber AS SQLSMALLINT) AS SQLSMALLINT
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtMaxLength|COdbcStmt.GetStmtMaxLength() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtMaxLength|COdbcStmt.SetStmtMaxLength(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtMaxRows|COdbcStmt.GetStmtMaxRows() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtMaxRows|COdbcStmt.SetStmtMaxRows(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtNoScan|COdbcStmt.GetStmtNoScan() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtNoScan|COdbcStmt.SetStmtNoScan(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtParamBindOffsetPtr|COdbcStmt.GetStmtParamBindOffsetPtr() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtParamBindOffsetPtr|COdbcStmt.SetStmtParamBindOffsetPtr(BYVAL dwAttr AS DWORD) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtParamBindType|COdbcStmt.GetStmtParamBindType() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtParamBindType|COdbcStmt.SetStmtParamBindType(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtParamOperationPtr|COdbcStmt.GetStmtParamOperationPtr() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtParamOperationPtr|COdbcStmt.SetStmtParamOperationPtr(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtParamsProcessedPtr|COdbcStmt.GetStmtParamsProcessedPtr() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtParamsProcessedPtr|COdbcStmt.SetStmtParamsProcessedPtr(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtParamsetSize|COdbcStmt.GetStmtParamsetSize() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtParamsetSize|COdbcStmt.SetStmtParamsetSize(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtQueryTimeout|COdbcStmt.GetStmtQueryTimeout() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtQueryTimeout|COdbcStmt.SetStmtQueryTimeout(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtRetrieveData|COdbcStmt.GetStmtRetrieveData() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtRetrieveData|COdbcStmt.SetStmtRetrieveData(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtParamStatusPtr|COdbcStmt.GetStmtParamStatusPtr() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtParamStatusPtr|COdbcStmt.SetStmtParamStatusPtr(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtRowArraySize|COdbcStmt.GetStmtRowArraySize() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtRowArraySize|COdbcStmt.SetStmtRowArraySize(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtRowBindOffsetPtr|COdbcStmt.GetStmtRowBindOffsetPtr() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtRowBindOffsetPtr|COdbcStmt.SetStmtRowBindOffsetPtr(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtRowBindType|COdbcStmt.GetStmtRowBindType() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtRowBindType|COdbcStmt.SetStmtRowBindType(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtRowNumber|COdbcStmt.GetStmtRowNumber() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtRowOperationPtr|COdbcStmt.GetStmtRowOperationPtr() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SettmtRowOperationPtr|COdbcStmt.SettmtRowOperationPtr(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtRowStatusPtr|COdbcStmt.GetStmtRowStatusPtr() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtRowStatusPtr|COdbcStmt.SetStmtRowStatusPtr(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtRowsFetchedPtr|COdbcStmt.GetStmtRowsFetchedPtr() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtRowsFetchedPtr|COdbcStmt.SetStmtRowsFetchedPtr(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtSimulateCursor|COdbcStmt.GetStmtSimulateCursor() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtSimulateCursor|COdbcStmt.SetStmtSimulateCursor(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStmtUseBookmarks|COdbcStmt.GetStmtUseBookmarks() AS SQLUINTEGER
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.SetStmtUseBookmarks|COdbcStmt.SetStmtUseBookmarks(BYVAL dwAttr AS SQLUINTEGER) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetStatistics|COdbcStmt.GetStatistics(BYREF wszCatalogName AS WSTRING, BYVAL CatalogNameLength AS SQLSMALLINT, BYREF wszSchemaName AS WSTRING, BYVAL SchemaNameLength AS SQLSMALLINT, BYREF wszTableName AS WSTRING, BYVAL TableNameLength AS SQLSMALLINT, BYVAL fUnique AS SQLUSMALLINT, BYVAL fCardinality AS SQLUSMALLINT) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetColumns|COdbcStmt.GetColumns(BYREF wszCatalogName AS WSTRING, BYVAL CatalogNameLength AS SQLSMALLINT, BYREF wszSchemaName AS WSTRING, BYVAL SchemaNameLength AS SQLSMALLINT, BYREF wszTableName AS WSTRING, BYVAL TableNameLength AS SQLSMALLINT, BYREF wszColumnName AS WSTRING, BYVAL ColumnNameLength AS SQLSMALLINT) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetTypeInfo|COdbcStmt.GetTypeInfo(BYVAL DataType AS SQLSMALLINT) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetTables|COdbcStmt.GetTables(BYREF wszCatalogName AS WSTRING, BYVAL CatalogNameLength AS SQLSMALLINT, BYREF wszSchemaName AS WSTRING, BYVAL SchemaNameLength AS SQLSMALLINT, BYREF wszTableName AS WSTRING, BYVAL TableNameLength AS SQLSMALLINT, BYREF wszTableType AS WSTRING, BYVAL TableTypeLength AS SQLSMALLINT) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetTablePrivileges|COdbcStmt.GetTablePrivileges(BYREF wszCatalogName AS WSTRING, BYVAL CatalogNameLength AS SQLSMALLINT, BYREF wszSchemaName AS WSTRING, BYVAL SchemaNameLength AS SQLSMALLINT, BYREF wszTableName AS WSTRING, BYVAL TableNameLength AS SQLSMALLINT) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetPrimaryKeys|COdbcStmt.GetPrimaryKeys(BYREF wszCatalogName AS WSTRING, BYVAL CatalogNameLength AS SQLSMALLINT, BYREF wszSchemaName AS WSTRING, BYVAL SchemanameLength AS SQLSMALLINT, BYREF wszTableName AS WSTRING, BYVAL TableNameLength AS SQLSMALLINT) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetProcedures|COdbcStmt.GetProcedures(BYREF wszCatalogName AS WSTRING, BYVAL CatalogNameLength AS SQLSMALLINT, BYREF wszSchemaName AS WSTRING, BYVAL SchemaNameLength AS SQLSMALLINT, BYREF wszProcName AS WSTRING, BYVAL ProcNameLength AS SQLSMALLINT) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetSpecialColumns|COdbcStmt.GetSpecialColumns(BYVAL identifierType AS SQLUSMALLINT, BYREF wszCatalogName AS WSTRING, BYVAL CatalogNameLength AS SQLUSMALLINT, BYREF wszSchemaName AS WSTRING, BYVAL SchemaNameLength AS SQLUSMALLINT, BYREF wszTableName AS WSTRING, BYVAL TableNameLength AS SQLUSMALLINT, BYVAL fScope AS SQLUSMALLINT,_
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetColumnPrivileges|COdbcStmt.GetColumnPrivileges(BYREF wszCatalogName AS WSTRING, BYVAL CatalogNameLength AS SQLSMALLINT, BYREF wszSchemaName AS WSTRING, BYVAL SchemaNameLength AS SQLSMALLINT, BYREF wszTableName AS WSTRING, BYVAL TableNameLength AS SQLSMALLINT, BYREF wszColumnName AS WSTRING, BYVAL ColumnNameLength AS SQLSMALLINT) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetForeignKeys|COdbcStmt.GetForeignKeys(BYREF wszPkCatalogName AS WSTRING, BYVAL pkCatalogNameLength AS SQLSMALLINT, BYREF wszPkSchemaName AS WSTRING, BYVAL pkSchemaNameLength AS SQLSMALLINT, BYREF wszPkTableName AS WSTRING, BYVAL pkTableNameLength AS SQLSMALLINT, BYREF wszFkCatalogName AS WSTRING, BYVAL FkCatalogNameLength AS SQLSMALLINT, BYREF wszFkSchemaName AS WSTRING, BYVAL FkSchemaNameLength AS SQLSMALLINT, BYREF wszFkTableName AS WSTRING, BYVAL fkTableNameLength AS SQLSMALLINT) AS SQLRETURN
AFX\CODBC\CODBCSTMT.INC|COdbcStmt.GetProcedureColumns|COdbcStmt.GetProcedureColumns(BYREF wszCatalogName AS WSTRING, BYVAL CatalogNameLength AS SQLSMALLINT, BYREF wszSchemaName AS WSTRING, BYVAL SchemaNameLength AS SQLSMALLINT, BYREF wszProcName AS WSTRING, BYVAL ProcNameLength AS SQLSMALLINT, BYREF wszColumnName AS WSTRING, BYVAL ColumnNameLength AS SQLSMALLINT) AS SQLRETURN
AFX\COLEDATETIME.INC|COleDateTimeSpan.CheckRange|
AFX\COLEDATETIME.INC|COleDateTimeSpan.GetStatus|COleDateTimeSpan.GetStatus() AS BOOLEAN
AFX\COLEDATETIME.INC|COleDateTimeSpan.SetStatus|COleDateTimeSpan.SetStatus(BYVAL nStatus AS BOOLEAN)
AFX\COLEDATETIME.INC|COleDateTimeSpan.SetDateTimeSpan|COleDateTimeSpan.SetDateTimeSpan(BYVAL lDays AS LONG, BYVAL nHours AS LONG, BYVAL nMins AS LONG, BYVAL nSecs AS LONG)
AFX\COLEDATETIME.INC|COleDateTimeSpan.GetTotalDays|COleDateTimeSpan.GetTotalDays() AS LONGINT
AFX\COLEDATETIME.INC|COleDateTimeSpan.GetTotalHours|COleDateTimeSpan.GetTotalHours() AS LONGINT
AFX\COLEDATETIME.INC|COleDateTimeSpan.GetTotalMinutes|COleDateTimeSpan.GetTotalMinutes() AS LONGINT
AFX\COLEDATETIME.INC|COleDateTimeSpan.GetTotalSeconds|COleDateTimeSpan.GetTotalSeconds() AS LONGINT
AFX\COLEDATETIME.INC|COleDateTimeSpan.GetDays|COleDateTimeSpan.GetDays() AS LONG
AFX\COLEDATETIME.INC|COleDateTimeSpan.GetHours|COleDateTimeSpan.GetHours() AS LONG
AFX\COLEDATETIME.INC|COleDateTimeSpan.GetMinutes|COleDateTimeSpan.GetMinutes() AS LONG
AFX\COLEDATETIME.INC|COleDateTimeSpan.GetSeconds|COleDateTimeSpan.GetSeconds() AS LONG
AFX\COLEDATETIME.INC|COleDateTime.GetStatus|COleDateTime.GetStatus() AS BOOLEAN
AFX\COLEDATETIME.INC|COleDateTime.SetStatus|COleDateTime.SetStatus(BYVAL nStatus AS BOOLEAN)
AFX\COLEDATETIME.INC|COleDateTime.SetDateTime|COleDateTime.SetDateTime(BYVAL nYear AS WORD, BYVAL nMonth AS WORD, BYVAL nDay AS WORD, BYVAL nHour AS WORD, BYVAL nMin AS WORD, BYVAL nSec AS WORD) AS LONG
AFX\COLEDATETIME.INC|COleDateTime.SetDate|COleDateTime.SetDate(BYVAL nYear AS WORD, BYVAL nMonth AS WORD, BYVAL nDay AS WORD) AS LONG
AFX\COLEDATETIME.INC|COleDateTime.SetTime|COleDateTime.SetTime(BYVAL nHour AS WORD, BYVAL nMin AS WORD, BYVAL nSec AS WORD) AS LONG
AFX\COLEDATETIME.INC|COleDateTime.GetCurrentTime|COleDateTime.GetCurrentTime() AS COleDateTime
AFX\COLEDATETIME.INC|COleDateTime.GetLocalTime|COleDateTime.GetLocalTime() AS COleDateTime
AFX\COLEDATETIME.INC|COleDateTime.GetSystemTime|COleDateTime.GetSystemTime() AS COleDateTime
AFX\COLEDATETIME.INC|COleDateTime.GetAsSystemTime|COleDateTime.GetAsSystemTime(BYREF sysTime AS SYSTEMTIME) AS BOOLEAN
AFX\COLEDATETIME.INC|COleDateTime.GetYear|COleDateTime.GetYear() AS WORD
AFX\COLEDATETIME.INC|COleDateTime.GetMonth|COleDateTime.GetMonth() AS WORD
AFX\COLEDATETIME.INC|COleDateTime.GetDay|COleDateTime.GetDay() AS WORD
AFX\COLEDATETIME.INC|COleDateTime.GetHour|COleDateTime.GetHour() AS WORD
AFX\COLEDATETIME.INC|COleDateTime.GetMinute|COleDateTime.GetMinute() AS WORD
AFX\COLEDATETIME.INC|COleDateTime.GetSecond|COleDateTime.GetSecond() AS WORD
AFX\COLEDATETIME.INC|COleDateTime.GetDayOfWeek|COleDateTime.GetDayOfWeek() AS WORD
AFX\COLEDATETIME.INC|COleDateTime.GetAsUDATE|COleDateTime.GetAsUDATE(BYREF ud AS UDATE) AS BOOLEAN
AFX\COLEDATETIME.INC|COleDateTime.GetDayOfYear|COleDateTime.GetDayOfYear() AS WORD
AFX\COLEDATETIME.INC|COleDateTime.GetAsDBTIMESTAMP|COleDateTime.GetAsDBTIMESTAMP(BYREF dbts AS DBTIMESTAMP) AS BOOLEAN
AFX\COLEDATETIME.INC|ColeDateTime.DoubleFromDate|ColeDateTime.DoubleFromDate(BYVAL dt AS DATE_) AS DOUBLE
AFX\COLEDATETIME.INC|COleDateTime.DateFromDouble|COleDateTime.DateFromDouble(BYVAL f AS DOUBLE) AS DATE_
AFX\COLEDATETIME.INC|COleDateTime.CheckRange|
AFX\COLEDATETIME.INC|COleDateTime.Format|COleDateTime.Format(BYVAL dwFlags AS DWORD = 0, BYVAL lcid AS LCID = LANG_USER_DEFAULT) AS CWSTR
AFX\COLEDATETIME.INC|COleDateTime.Format|COleDateTime.Format(BYREF wszFmt AS WSTRING) AS CWSTR
AFX\CPGBAR3D.INC|CPgBar3D.CPgBar3DProc|CPgBar3D.CPgBar3DProc(BYVAL hwnd AS HWND, BYVAL uMsg AS UINT, BYVAL wParam AS WPARAM, BYVAL lParam AS LPARAM) AS LRESULT
AFX\CPGBAR3D.INC|CPgBar3D.hWindow|CPgBar3D.hWindow() AS HWND
AFX\CPGBAR3D.INC|CPgBar3D.Redraw|
AFX\CPGBAR3D.INC|CPgBar3D.Clear|
AFX\CPGBAR3D.INC|CPgBar3D.CreateGradientBars|
AFX\CPGBAR3D.INC|CPgBar3D.GetMaxSteps|CPgBar3D.GetMaxSteps() AS LONG
AFX\CPGBAR3D.INC|CPgBar3D.SetMaxSteps|CPgBar3D.SetMaxSteps(BYVAL nMaxSteps AS LONG)
AFX\CPGBAR3D.INC|CPgBar3D.GetStep|CPgBar3D.GetStep() AS LONG
AFX\CPGBAR3D.INC|CPgBar3D.SetStep|CPgBar3D.SetStep(BYVAL nStepValue AS LONG, BYVAL fRedraw AS LONG = FALSE)
AFX\CPGBAR3D.INC|CPgBar3D.GetTextOn|CPgBar3D.GetTextOn() AS LONG
AFX\CPGBAR3D.INC|CPgBar3D.SetTextOn|CPgBar3D.SetTextOn(BYVAL nMode AS LONG)
AFX\CPGBAR3D.INC|CPgBar3D.GetTextPos|CPgBar3D.GetTextPos() AS LONG
AFX\CPGBAR3D.INC|CPgBar3D.SetTextPos|CPgBar3D.SetTextPos(BYVAL nPos AS LONG)
AFX\CPGBAR3D.INC|CPgBar3D.GetBarColor|CPgBar3D.GetBarColor() AS LONG
AFX\CPGBAR3D.INC|CPgBar3D.SetBarColor|CPgBar3D.SetBarColor(BYVAL nColor AS LONG)
AFX\CPGBAR3D.INC|CPgBar3D.GetBarTextColor|CPgBar3D.GetBarTextColor() AS LONG
AFX\CPGBAR3D.INC|CPgBar3D.SetBarTextColor|CPgBar3D.SetBarTextColor(BYVAL nColor AS LONG, BYVAL fRedraw AS LONG = FALSE)
AFX\CPGBAR3D.INC|CPgBar3D.GetBarDirection|CPgBar3D.GetBarDirection() AS LONG
AFX\CPGBAR3D.INC|CPgBar3D.SetBarDirection|CPgBar3D.SetBarDirection(BYVAL nDirection AS LONG, BYVAL fRedraw AS LONG = FALSE)
AFX\CPGBAR3D.INC|CPgBar3D.GetBackColor|CPgBar3D.GetBackColor() AS LONG
AFX\CPGBAR3D.INC|CPgBar3D.SetBackColor|CPgBar3D.SetBackColor(BYVAL nColor AS LONG, BYVAL fRedraw AS LONG = FALSE)
AFX\CPGBAR3D.INC|CPgBar3D.GetTextBackColor|CPgBar3D.GetTextBackColor() AS LONG
AFX\CPGBAR3D.INC|CPgBar3D.SetTextBackColor|CPgBar3D.SetTextBackColor(BYVAL nColor AS LONG, BYVAL fRedraw AS LONG = FALSE)
AFX\CPGBAR3D.INC|CPgBar3D.GetGradientDirection|CPgBar3D.GetGradientDirection() AS LONG
AFX\CPGBAR3D.INC|CPgBar3D.SetGradientDirection|CPgBar3D.SetGradientDirection(BYVAL nDirection AS LONG)
AFX\CPGBAR3D.INC|CPgBar3D.GetTextAngle|CPgBar3D.GetTextAngle() AS LONG
AFX\CPGBAR3D.INC|CPgBar3D.SetTextAngle|CPgBar3D.SetTextAngle(BYVAL nAngle AS LONG, BYVAL fRebuild AS LONG = FALSE)
AFX\CPGBAR3D.INC|CPgBar3D.StepUp|
AFX\CPGBAR3D.INC|CPgBar3D.StepDown|
AFX\CPGBAR3D.INC|CPgBar3D.BuildBar|CPgBar3D.BuildBar(BYVAL fRedraw AS LONG = FALSE)
AFX\CPGBAR3D.INC|CPgBar3D.SetBarText|CPgBar3D.SetBarText(BYREF wszText AS WSTRING, BYVAL fRedraw AS LONG = FALSE)
AFX\CPGBAR3D.INC|CPgBar3D.SetBackText|CPgBar3D.SetBackText(BYREF wszText AS WSTRING, BYVAL fRedraw AS LONG = FALSE)
AFX\CPGBAR3D.INC|CPgBar3D.SetFont|CPgBar3D.SetFont(BYVAL hFont AS HFONT, BYVAL fRedraw AS LONG = FALSE)
AFX\CPGBAR3D.INC|CPgBar3D.GetFont|CPgBar3D.GetFont() AS HFONT
AFX\CPROPVAR.INC|AfxClearPropVariantArray|AfxClearPropVariantArray(BYVAL rgPropVar AS PROPVARIANT PTR, BYVAL cVars AS UINT)
AFX\CPROPVAR.INC|AfxStgSerializePropVariant|AfxStgSerializePropVariant(BYVAL ppropvar AS PROPVARIANT PTR, BYVAL ppProp AS SERIALIZEDPROPERTYVALUE PTR, BYVAL pcb AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxStgDeserializePropVariant|AfxStgDeserializePropVariant(BYVAL pProp AS SERIALIZEDPROPERTYVALUE PTR, BYVAL cbMax AS ULONG PTR, BYVAL ppropvar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantChangeType|AfxPropVariantChangeType(BYVAL ppropvarDest AS PROPVARIANT PTR, BYVAL propvarSrc AS PROPVARIANT PTR, BYVAL wFlags AS USHORT, BYVAL vt AS VARTYPE) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantFromBuffer|AfxPropVariantFromBuffer(BYVAL pv AS VOID PTR, BYVAL cb AS UINT, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToBuffer|AfxPropVariantToBuffer(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL pv AS LPVOID, BYVAL cb AS ULONG) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantFromResource|AfxPropVariantFromResource(BYVAL hinst AS HINSTANCE, BYVAL id AS UINT, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantFromGUIDAsString|AfxPropVariantFromGUIDAsString(BYVAL guid AS IID PTR, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantFromClsid|AfxPropVariantFromClsid(BYVAL rclsid AS CLSID PTR, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantFromFileTime|AfxPropVariantFromFileTime(BYVAL pft AS FILETIME PTR, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantFromStrRet|AfxPropVariantFromStrRet(BYVAL pstrret AS STRRET PTR, BYVAL pidl AS PCUITEMID_CHILD, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantFromBooleanVector|AfxPropVariantFromBooleanVector(BYVAL prgf AS WINBOOL PTR, BYVAL cElems AS ULONG, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantFromInt16Vector|AfxPropVariantFromInt16Vector(BYVAL prgf AS SHORT PTR, BYVAL cElems AS ULONG, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantFromUInt16Vector|AfxPropVariantFromUInt16Vector(BYVAL prgf AS USHORT PTR, BYVAL cElems AS ULONG, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantFromInt32Vector|AfxPropVariantFromInt32Vector(BYVAL prgn AS LONG PTR, BYVAL cElems AS ULONG, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantFromUInt32Vector|AfxPropVariantFromUInt32Vector(BYVAL prgn AS ULONG PTR, BYVAL cElems AS ULONG, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantFromInt64Vector|AfxPropVariantFromInt64Vector(BYVAL prgn AS LONGINT PTR, BYVAL cElems AS ULONG, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantFromUInt64Vector|AfxPropVariantFromUInt64Vector(BYVAL prgn AS ULONGINT PTR, BYVAL cElems AS ULONG, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantFromDoubleVector|AfxPropVariantFromDoubleVector(BYVAL prgn AS DOUBLE PTR, BYVAL cElems AS ULONG, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantFromFileTimeVector|AfxPropVariantFromFileTimeVector(BYVAL prgft AS FILETIME PTR, BYVAL cElems AS ULONG, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantFromStringVector|AfxPropVariantFromStringVector(BYVAL prgsz AS PCWSTR, BYVAL cElems AS ULONG, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantFromStringAsVector|AfxPropVariantFromStringAsVector(BYVAL pwsz AS WSTRING PTR, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantFromPropVariantVectorElem|AfxPropVariantFromPropVariantVectorElem(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL iElem AS ULONG, BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantGetElementCount|AfxPropVariantGetElementCount(BYVAL pPropVarIn AS PROPVARIANT PTR) AS ULONG
AFX\CPROPVAR.INC|AfxPropVariantGetBooleanElem|AfxPropVariantGetBooleanElem(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL iElem AS ULONG, BYVAL pfVal AS WINBOOL PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantGetInt16Elem|AfxPropVariantGetInt16Elem(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL iElem AS ULONG, BYVAL pfVal AS SHORT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantGetUInt16Elem|AfxPropVariantGetUInt16Elem(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL iElem AS ULONG, BYVAL pnVal AS USHORT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantGetInt32Elem|AfxPropVariantGetInt32Elem(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL iElem AS ULONG, BYVAL pnVal AS LONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantGetUInt32Elem|AfxPropVariantGetUInt32Elem(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL iElem AS ULONG, BYVAL pnVal AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantGetInt64Elem|AfxPropVariantGetInt64Elem(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL iElem AS ULONG, BYVAL pnVal AS LONGINT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantGetUInt64Elem|AfxPropVariantGetUInt64Elem(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL iElem AS ULONG, BYVAL pnVal AS ULONGINT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantGetDoubleElem|AfxPropVariantGetDoubleElem(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL iElem AS ULONG, BYVAL pnVal AS DOUBLE PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantGetStringElem|AfxPropVariantGetStringElem(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL iElem AS ULONG, BYVAL ppszVal AS PWSTR PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantGetFileTimeElem|AfxPropVariantGetFileTimeElem(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL iElem AS ULONG, BYVAL pftVal AS FILETIME PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToBoolean|AfxPropVariantToBoolean(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL pfRet AS WINBOOL PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToInt16|AfxPropVariantToInt16(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL piRet AS SHORT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToUInt16|AfxPropVariantToUInt16(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL puiRet AS USHORT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToInt32|AfxPropVariantToInt32(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL plRet AS LONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToUInt32|AfxPropVariantToUInt32(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL pulRet AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToInt64|AfxPropVariantToInt64(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL pllRet AS LONGLONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToUInt64|AfxPropVariantToUInt64(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL pullRet AS ULONGLONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToDouble|AfxPropVariantToDouble(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL pdblRet AS DOUBLE PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToString|AfxPropVariantToString(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL psz AS ZSTRING PTR, BYVAL cch AS UINT) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToBSTR|AfxPropVariantToBSTR(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL pbstrOut AS BSTR PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToGUID|AfxPropVariantToGUID(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL pguid AS GUID PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToFileTime|AfxPropVariantToFileTime(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL stfOut AS AFX_PSTIME_FLAGS, BYVAL pftOut AS FILETIME PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToStrRet|AfxPropVariantToStrRet(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL pstrret AS STRRET PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToBooleanVector|AfxPropVariantToBooleanVector(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL prgf AS WINBOOL PTR, BYVAL crgn AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToBooleanVectorAlloc|AfxPropVariantToBooleanVectorAlloc(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL pprgf AS WINBOOL PTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToInt16Vector|AfxPropVariantToInt16Vector(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL prgn AS SHORT PTR, BYVAL crgn AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToInt16VectorAlloc|AfxPropVariantToInt16VectorAlloc(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL pprgn AS SHORT PTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToUInt16Vector|AfxPropVariantToUInt16Vector(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL prgn AS USHORT PTR, BYVAL crgn AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToUInt16VectorAlloc|AfxPropVariantToUInt16VectorAlloc(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL pprgn AS USHORT PTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToInt32Vector|AfxPropVariantToInt32Vector(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL prgn AS LONG PTR, BYVAL crgn AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToInt32VectorAlloc|AfxPropVariantToInt32VectorAlloc(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL pprgn AS LONG PTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToUInt32Vector|AfxPropVariantToUInt32Vector(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL prgn AS ULONG PTR, BYVAL crgn AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToUInt32VectorAlloc|AfxPropVariantToUInt32VectorAlloc(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL pprgn AS ULONG PTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToInt64Vector|AfxPropVariantToInt64Vector(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL prgn AS LONGINT PTR, BYVAL crgn AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToInt64VectorAlloc|AfxPropVariantToInt64VectorAlloc(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL pprgn AS LONGINT PTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToUInt64Vector|AfxPropVariantToUInt64Vector(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL prgn AS ULONGINT PTR, BYVAL crgn AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToUInt64VectorAlloc|AfxPropVariantToUInt64VectorAlloc(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL pprgn AS ULONGINT PTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToDoubleVector|AfxPropVariantToDoubleVector(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL prgn AS DOUBLE PTR, BYVAL crgn AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToDoubleVectorAlloc|AfxPropVariantToDoubleVectorAlloc(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL pprgn AS DOUBLE PTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToStringVector|AfxPropVariantToStringVector(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL prgsz AS PWSTR, BYVAL crgsz AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToStringVectorAlloc|AfxPropVariantToStringVectorAlloc(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL pprgsz AS PWSTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToFileTimeVector|AfxPropVariantToFileTimeVector(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL prgft AS FILETIME PTR, BYVAL crgft AS ULONG, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToFileTimeVectorAlloc|AfxPropVariantToFileTimeVectorAlloc(BYVAL pPropVar AS PROPVARIANT PTR, BYVAL pprgft AS FILETIME PTR PTR, BYVAL pcElem AS ULONG PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantArrayFromPropVariant|AfxPropVariantArrayFromPropVariant(BYVAL propvarSingle AS PROPVARIANT PTR, BYVAL ppropvarVector AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantToBooleanWithDefault|AfxPropVariantToBooleanWithDefault(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL fDefault AS WINBOOL) AS WINBOOL
AFX\CPROPVAR.INC|AfxPropVariantToInt16WithDefault|AfxPropVariantToInt16WithDefault(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL iDefault AS SHORT) AS SHORT
AFX\CPROPVAR.INC|AfxPropVariantToUInt16WithDefault|AfxPropVariantToUInt16WithDefault(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL uiDefault AS USHORT) AS USHORT
AFX\CPROPVAR.INC|AfxPropVariantToInt32WithDefault|AfxPropVariantToInt32WithDefault(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL lDefault AS LONG) AS LONG
AFX\CPROPVAR.INC|AfxPropVariantToUInt32WithDefault|AfxPropVariantToUInt32WithDefault(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL ulDefault AS ULONG) AS ULONG
AFX\CPROPVAR.INC|AfxPropVariantToInt64WithDefault|AfxPropVariantToInt64WithDefault(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL llDefault AS LONGLONG) AS LONGLONG
AFX\CPROPVAR.INC|AfxPropVariantToUInt64WithDefault|AfxPropVariantToUInt64WithDefault(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL llDefault AS LONGLONG) AS LONGLONG
AFX\CPROPVAR.INC|AfxPropVariantToDoubleWithDefault|AfxPropVariantToDoubleWithDefault(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL dblDefault AS DOUBLE) AS DOUBLE
AFX\CPROPVAR.INC|AfxPropVariantToStringWithDefault|AfxPropVariantToStringWithDefault(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL pszDefault AS LPCWSTR) AS PCWSTR
AFX\CPROPVAR.INC|AfxPropVariantToStringAlloc|AfxPropVariantToStringAlloc(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL ppwszBuf AS WSTRING PTR PTR) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVarToStr|AfxPropVarToStr OVERLOAD(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL bClear AS BOOLEAN = FALSE) AS CWSTR
AFX\CPROPVAR.INC|AfxPropVarToStr|AfxPropVarToStr OVERLOAD(BYREF PropVarIn AS PROPVARIANT, BYVAL bClear AS BOOLEAN = FALSE) AS CWSTR
AFX\CPROPVAR.INC|CPropVar.vptr|CPropVar.vptr() AS PROPVARIANT PTR
AFX\CPROPVAR.INC|CPropVar.sptr|CPropVar.sptr() AS PROPVARIANT PTR
AFX\CPROPVAR.INC|CPropVar.ToStr|CPropVar.ToStr() AS CWSTR
AFX\CPROPVAR.INC|CPropVar.ToWStr|CPropVar.ToWStr() AS CWSTR
AFX\CPROPVAR.INC|CPropVar.wstr|CPropVar.wstr() AS CWSTR
AFX\CPROPVAR.INC|CPropVar.ToBStr|CPropVar.ToBStr() AS CBSTR
AFX\CPROPVAR.INC|CPropVar.bstr|CPropVar.bstr() AS CBSTR
AFX\CPROPVAR.INC|CPropVar.ToUtf8|CPropVar.ToUtf8() AS STRING
AFX\CPROPVAR.INC|CPropVar.ToBuffer|CPropVar.ToBuffer(BYVAL pv AS ANY PTR, BYVAL cb AS UINT) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.ToBuffer|CPropVar.ToBuffer() AS STRING
AFX\CPROPVAR.INC|CPropVar.ToUnknown|CPropVar.ToUnknown() AS ANY PTR
AFX\CPROPVAR.INC|CPropVar.ToDispatch|CPropVar.ToDispatch() AS ANY PTR
AFX\CPROPVAR.INC|CPropVar.ToVariant|CPropVar.ToVariant() AS VARIANT
AFX\CPROPVAR.INC|CPropVar.DecToDouble|CPropVar.DecToDouble() AS DOUBLE
AFX\CPROPVAR.INC|CPropVar.DecToCy|CPropVar.DecToCy() AS CY
AFX\CPROPVAR.INC|CPropVar.ToVbDate|CPropVar.ToVbDate() AS DATE_
AFX\CPROPVAR.INC|CPropVar.ToSystemTime|CPropVar.ToSystemTime() AS SYSTEMTIME
AFX\CPROPVAR.INC|CPropVar.ToGuid|CPropVar.ToGuid() AS GUID
AFX\CPROPVAR.INC|CPropVar.ToClsid|CPropVar.ToClsid() AS CLSID
AFX\CPROPVAR.INC|CPropVar.ToGuidStr|CPropVar.ToGuidStr() AS CWSTR
AFX\CPROPVAR.INC|CPropVar.ToGuidWStr|CPropVar.ToGuidWStr() AS CWSTR
AFX\CPROPVAR.INC|CPropVar.ToGuidBStr|CPropVar.ToGuidBStr() AS CBSTR
AFX\CPROPVAR.INC|CPropVar.ToFileTime|CPropVar.ToFileTime(BYVAL stfOut AS AFX_PSTIME_FLAGS) AS FILETIME
AFX\CPROPVAR.INC|CPropVar.ToStrRet|CPropVar.ToStrRet() AS STRRET
AFX\CPROPVAR.INC|CPropVar.ToBooleanArray|CPropVar.ToBooleanArray(BYVAL prgf AS WINBOOL PTR, BYVAL crgn AS ULONG) AS ULONG
AFX\CPROPVAR.INC|CPropVar.ToBooleanArrayAlloc|CPropVar.ToBooleanArrayAlloc(BYVAL pprgf AS WINBOOL PTR PTR) AS ULONG
AFX\CPROPVAR.INC|CPropVar.ToShortArray|CPropVar.ToShortArray(BYVAL prgn AS SHORT PTR, BYVAL crgn AS ULONG) AS ULONG
AFX\CPROPVAR.INC|CPropVar.ToShortArrayAlloc|CPropVar.ToShortArrayAlloc(BYVAL pprgn AS SHORT PTR PTR) AS ULONG
AFX\CPROPVAR.INC|CPropVar.ToUShortArray|CPropVar.ToUShortArray(BYVAL prgn AS USHORT PTR, BYVAL crgn AS ULONG) AS ULONG
AFX\CPROPVAR.INC|CPropVar.ToUShortArrayAlloc|CPropVar.ToUShortArrayAlloc(BYVAL pprgn AS USHORT PTR PTR) AS ULONG
AFX\CPROPVAR.INC|CPropVar.ToLongArray|CPropVar.ToLongArray(BYVAL prgn AS LONG PTR, BYVAL crgn AS ULONG) AS ULONG
AFX\CPROPVAR.INC|CPropVar.ToLongArrayAlloc|CPropVar.ToLongArrayAlloc(BYVAL pprgn AS LONG PTR PTR) AS ULONG
AFX\CPROPVAR.INC|CPropVar.ToULongArray|CPropVar.ToULongArray(BYVAL prgn AS ULONG PTR, BYVAL crgn AS ULONG) AS ULONG
AFX\CPROPVAR.INC|CPropVar.ToULongArrayAlloc|CPropVar.ToULongArrayAlloc(BYVAL pprgn AS ULONG PTR PTR) AS ULONG
AFX\CPROPVAR.INC|CPropVar.ToLongIntArray|CPropVar.ToLongIntArray(BYVAL prgn AS LONGINT PTR, BYVAL crgn AS ULONG) AS ULONG
AFX\CPROPVAR.INC|CPropVar.ToLongIntArrayAlloc|CPropVar.ToLongIntArrayAlloc(BYVAL pprgn AS LONGINT PTR PTR) AS ULONG
AFX\CPROPVAR.INC|CPropVar.ToULongIntArray|CPropVar.ToULongIntArray(BYVAL prgn AS ULONGINT PTR, BYVAL crgn AS ULONG) AS ULONG
AFX\CPROPVAR.INC|CPropVar.ToULongIntArrayAlloc|CPropVar.ToULongIntArrayAlloc(BYVAL pprgn AS ULONGINT PTR PTR) AS ULONG
AFX\CPROPVAR.INC|CPropVar.ToDoubleArray|CPropVar.ToDoubleArray(BYVAL prgn AS DOUBLE PTR, BYVAL crgn AS ULONG) AS ULONG
AFX\CPROPVAR.INC|CPropVar.ToDoubleArrayAlloc|CPropVar.ToDoubleArrayAlloc(BYVAL pprgn AS DOUBLE PTR PTR) AS ULONG
AFX\CPROPVAR.INC|CPropVar.ToStringArray|CPropVar.ToStringArray(BYVAL prgsz AS PWSTR, BYVAL crgsz AS ULONG) AS ULONG
AFX\CPROPVAR.INC|CPropVar.ToStringArrayAlloc|CPropVar.ToStringArrayAlloc(BYVAL pprgsz AS PWSTR PTR) AS ULONG
AFX\CPROPVAR.INC|CPropVar.ToFileTimeArray|CPropVar.ToFileTimeArray(BYVAL prgft AS FILETIME PTR, BYVAL crgft AS ULONG) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.ToFileTimeArrayAlloc|CPropVar.ToFileTimeArrayAlloc(BYVAL prgft AS FILETIME PTR PTR) AS ULONG
AFX\CPROPVAR.INC|CPropVar.Put|CPropVar.Put(BYREF cpv AS CPropVar) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.Put|CPropVar.Put(BYREF pv AS PROPVARIANT) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.Put|CPropVar.Put(BYREF wszStr AS WSTRING)
AFX\CPROPVAR.INC|CPropVar.Put|CPropVar.Put(BYVAL pPropVar AS PROPVARIANT PTR) As HRESULT
AFX\CPROPVAR.INC|CPropVar.Put|CPropVar.Put(BYREF cws AS CWSTR)
AFX\CPROPVAR.INC|CPropVar.Put|CPropVar.Put(BYREF cbs AS CBSTR)
AFX\CPROPVAR.INC|CPropVar.Put|CPropVar.Put(BYVAL pdisp AS IDispatch PTR, BYVAL fAddRef AS BOOLEAN = FALSE) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.Put|CPropVar.Put(BYVAL punk AS IUnknown PTR, BYVAL fAddRef AS BOOLEAN = FALSE) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.Put|CPropVar.Put(BYVAL _value AS LONGINT, BYVAL _vType AS WORD)
AFX\CPROPVAR.INC|CPropVar.Put|CPropVar.Put(BYVAL _value AS LONGINT, BYREF strType AS STRING)
AFX\CPROPVAR.INC|CPropVar.Put|CPropVar.Put(BYVAL _value AS DOUBLE, BYVAL _vType AS WORD = VT_R8)
AFX\CPROPVAR.INC|CPropVar.Put|CPropVar.Put(BYVAL _value AS DOUBLE, BYREF strType AS STRING)
AFX\CPROPVAR.INC|CPropVar.PutRef|CPropVar.PutRef(BYVAL _pvar AS ANY PTR, BYVAL _vType AS WORD) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutRef|CPropVar.PutRef(BYVAL _pvar AS ANY PTR, BYREF strType AS STRING) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutNull|
AFX\CPROPVAR.INC|CPropVar.PutBool|CPropVar.PutBool(BYVAL _value AS BOOL)
AFX\CPROPVAR.INC|CPropVar.PutBoolean|CPropVar.PutBoolean(BYVAL _value AS BOOLEAN)
AFX\CPROPVAR.INC|CPropVar.PutByte|CPropVar.PutByte(BYVAL _value AS BYTE)
AFX\CPROPVAR.INC|CPropVar.PutUByte|CPropVar.PutUByte(BYVAL _value AS UBYTE)
AFX\CPROPVAR.INC|CPropVar.PutShort|CPropVar.PutShort(BYVAL _value AS SHORT)
AFX\CPROPVAR.INC|CPropVar.PutUShort|CPropVar.PutUShort(BYVAL _value AS USHORT)
AFX\CPROPVAR.INC|CPropVar.PutInt|CPropVar.PutInt(BYVAL _value AS INT_)
AFX\CPROPVAR.INC|CPropVar.PutUInt|CPropVar.PutUInt(BYVAL _value AS UINT)
AFX\CPROPVAR.INC|CPropVar.PutLong|CPropVar.PutLong(BYVAL _value AS LONG)
AFX\CPROPVAR.INC|CPropVar.PutULong|CPropVar.PutULong(BYVAL _value AS ULONG)
AFX\CPROPVAR.INC|CPropVar.PutLongInt|CPropVar.PutLongInt(BYVAL _value AS LONGINT)
AFX\CPROPVAR.INC|CPropVar.PutULongInt|CPropVar.PutULongInt(BYVAL _value AS ULONGINT)
AFX\CPROPVAR.INC|CPropVar.PutSingle|CPropVar.PutSingle(BYVAL _value AS SINGLE)
AFX\CPROPVAR.INC|CPropVar.PutFloat|CPropVar.PutFloat(BYVAL _value AS SINGLE)
AFX\CPROPVAR.INC|CPropVar.PutDouble|CPropVar.PutDouble(BYVAL _value AS DOUBLE)
AFX\CPROPVAR.INC|CPropVar.PutBuffer|CPropVar.PutBuffer(BYVAL pv AS ANY PTR, BYVAL cb AS UINT) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutUtf8|CPropVar.PutUtf8(BYREF strUtf8 AS STRING) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutSafeArray|CPropVar.PutSafeArray(BYVAL parray AS SAFEARRAY PTR, BYVAL fAttach AS BOOLEAN = FALSE) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutResource|CPropVar.PutResource(BYVAL hinst AS HINSTANCE, BYVAL id AS UINT) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutDateString|CPropVar.PutDateString(BYVAL pwszDate AS WSTRING PTR, BYVAL lcid AS LCID = 0, BYVAL dwFlags AS ULONG = 0) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutVbDate|CPropVar.PutVbDate(BYVAL vbDate AS DATE_) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutSystemTime|CPropVar.PutSystemTime(BYVAL st AS SYSTEMTIME PTR) AS BOOLEAN
AFX\CPROPVAR.INC|CPropVar.PutGuidAsString|CPropVar.PutGuidAsString(BYVAL guid AS GUID PTR) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutGuidAsBuffer|CPropVar.PutGuidAsBuffer(BYVAL guid AS GUID PTR) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutClsid|CPropVar.PutClsid(BYVAL rclsid AS CLSID PTR) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutFileTime|CPropVar.PutFileTime(BYVAL pft AS FILETIME PTR) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutFileTimeArray|CPropVar.PutFileTimeArray(BYVAL prgft AS FILETIME PTR, BYVAL cElems AS ULONG) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutStrRet|CPropVar.PutStrRet(BYVAL pstrret AS STRRET PTR, BYVAL pidl AS PCUITEMID_CHILD) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutDec|CPropVar.PutDec(BYREF dec AS DECIMAL) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutDecFromStr|CPropVar.PutDecFromStr(BYVAL pwszIn AS WSTRING PTR, BYVAL lcid AS LCID = 0, BYVAL dwFlags AS ULONG = 0) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutDecFromDouble|CPropVar.PutDecFromDouble(BYVAL dbIn AS DOUBLE) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutDecFromCy|CPropVar.PutDecFromCy(BYVAL cyIn AS CY) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutBooleanArray|CPropVar.PutBooleanArray(BYVAL prgf AS WINBOOL PTR, BYVAL cElems AS ULONG) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutShortArray|CPropVar.PutShortArray(BYVAL prgf AS SHORT PTR, BYVAL cElems AS ULONG) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutUShortArray|CPropVar.PutUShortArray(BYVAL prgf AS USHORT PTR, BYVAL cElems AS ULONG) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutLongArray|CPropVar.PutLongArray(BYVAL prgn AS LONG PTR, BYVAL cElems AS ULONG) AS CPropVar
AFX\CPROPVAR.INC|CPropVar.PutULongArray|CPropVar.PutULongArray(BYVAL prgn AS ULONG PTR, BYVAL cElems AS ULONG) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutLongIntArray|CPropVar.PutLongIntArray(BYVAL prgn AS LONGINT PTR, BYVAL cElems AS ULONG) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutULongIntArray|CPropVar.PutULongIntArray(BYVAL prgn AS ULONGINT PTR, BYVAL cElems AS ULONG) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutDoubleArray|CPropVar.PutDoubleArray(BYVAL prgn AS DOUBLE PTR, BYVAL cElems AS ULONG) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutStringArray|CPropVar.PutStringArray(BYVAL prgsz AS PCWSTR, BYVAL cElems AS ULONG) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutStringAsArray|CPropVar.PutStringAsArray(BYREF wsz AS WSTRING) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutPropVariant|CPropVar.PutPropVariant(BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.PutPropVariantArrayElem|CPropVar.PutPropVariantArrayElem(BYVAL pPropVarIn AS PROPVARIANT PTR, BYVAL iElem AS ULONG) AS CPropVar
AFX\CPROPVAR.INC|CPropVar.PropVariantArrayFromPropVariant|CPropVar.PropVariantArrayFromPropVariant(BYVAL propvarSingle AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.GetDim|CPropVar.GetDim() AS ULONG
AFX\CPROPVAR.INC|CPropVar.GetLBound|CPropVar.GetLBound(BYVAL nDim AS UINT = 1) AS LONG
AFX\CPROPVAR.INC|CPropVar.GetUBound|CPropVar.GetUBound(BYVAL nDim AS UINT = 1) AS LONG
AFX\CPROPVAR.INC|CPropVar.GetElementCount|CPropVar.GetElementCount() AS ULONG
AFX\CPROPVAR.INC|CPropVar.GetBooleanElem|CPropVar.GetBooleanElem(BYVAL iElem AS ULONG) AS BOOLEAN
AFX\CPROPVAR.INC|CPropVar.GetShortElem|CPropVar.GetShortElem(BYVAL iElem AS ULONG) AS SHORT
AFX\CPROPVAR.INC|CPropVar.GetUShortElem|CPropVar.GetUShortElem(BYVAL iElem AS ULONG) AS USHORT
AFX\CPROPVAR.INC|CPropVar.GetLongElem|CPropVar.GetLongElem(BYVAL iElem AS ULONG) AS LONG
AFX\CPROPVAR.INC|CPropVar.GetULongElem|CPropVar.GetULongElem(BYVAL iElem AS ULONG) AS ULONG
AFX\CPROPVAR.INC|CPropVar.GetLongIntElem|CPropVar.GetLongIntElem(BYVAL iElem AS ULONG) AS LONGINT
AFX\CPROPVAR.INC|CPropVar.GetULongIntElem|CPropVar.GetULongIntElem(BYVAL iElem AS ULONG) AS ULONGINT
AFX\CPROPVAR.INC|CPropVar.GetDoubleElem|CPropVar.GetDoubleElem(BYVAL iElem AS ULONG) AS DOUBLE
AFX\CPROPVAR.INC|CPropVar.GetStringElem|CPropVar.GetStringElem(BYVAL iElem AS ULONG) AS CWSTR
AFX\CPROPVAR.INC|CPropVar.GetFileTimeElem|CPropVar.GetFileTimeElem(BYVAL iElem AS ULONG) AS FILETIME
AFX\CPROPVAR.INC|CPropVar.GetPropVariantElem|CPropVar.GetPropVariantElem(BYVAL iElem AS ULONG) AS CPropVar
AFX\CPROPVAR.INC|CPropVar.FormatNumber|CPropVar.FormatNumber(BYVAL iNumDig AS LONG = -1, BYVAL iIncLead AS LONG = -2, BYVAL iUseParens AS LONG = -2, BYVAL iGroup AS LONG = -2, BYVAL dwFlags AS DWORD = 0) AS CWSTR
AFX\CPROPVAR.INC|CPropVar.Clear|
AFX\CPROPVAR.INC|CPropVar.Attach|CPropVar.Attach(BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.Attach|CPropVar.Attach(BYREF pv AS PROPVARIANT) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.Detach|CPropVar.Detach(BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.Detach|CPropVar.Detach(BYREF pv AS PROPVARIANT) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.vType|CPropVar.vType() AS VARTYPE
AFX\CPROPVAR.INC|CPropVar.ChangeType|CPropVar.ChangeType(BYVAL vtNew AS VARTYPE) AS HRESULT
AFX\CPROPVAR.INC|CPropVar.ValLong|CPropVar.ValLong() AS LONG
AFX\CPROPVAR.INC|CPropVar.ValInt|CPropVar.ValInt() AS LONG
AFX\CPROPVAR.INC|CPropVar.ValULong|CPropVar.ValULong() AS ULONG
AFX\CPROPVAR.INC|CPropVar.ValUInt|CPropVar.ValUInt() AS ULONG
AFX\CPROPVAR.INC|CPropVar.ValLongInt|CPropVar.ValLongInt() AS LONGINT
AFX\CPROPVAR.INC|CPropVar.ValULongInt|CPropVar.ValULongInt() AS ULONGINT
AFX\CPROPVAR.INC|CPropVar.ValDouble|CPropVar.ValDouble() AS DOUBLE
AFX\CPROPVAR.INC|CPropVar.Value|CPropVar.Value() AS DOUBLE
AFX\CPROPVAR.INC|AfxGetPropVarType|AfxGetPropVarType(BYVAL pPropVar AS PROPVARIANT PTR) AS VARTYPE
AFX\CPROPVAR.INC|AfxIsPropVarTypeFloat|AfxIsPropVarTypeFloat(BYVAL vt AS VARTYPE) AS BOOLEAN
AFX\CPROPVAR.INC|AfxIsPropVariantArray|AfxIsPropVariantArray(BYVAL pPropVar AS PROPVARIANT PTR) AS BOOLEAN
AFX\CPROPVAR.INC|AfxIsPropVariantVector|AfxIsPropVariantVector(BYVAL pPropVar AS PROPVARIANT PTR) AS BOOLEAN
AFX\CPROPVAR.INC|AfxIsPropVariantString|AfxIsPropVariantString(BYVAL pPropVar AS PROPVARIANT PTR) AS BOOLEAN
AFX\CPROPVAR.INC|AfxIsPropVarTypeSignedInteger|AfxIsPropVarTypeSignedInteger(BYVAL vt AS VARTYPE) AS BOOLEAN
AFX\CPROPVAR.INC|AfxIsPropVarTypeUnsignedInteger|AfxIsPropVarTypeUnsignedInteger(BYVAL vt AS VARTYPE) AS BOOLEAN
AFX\CPROPVAR.INC|AfxIsPropVarTypeInteger|AfxIsPropVarTypeInteger(BYVAL vt AS VARTYPE) AS BOOLEAN
AFX\CPROPVAR.INC|AfxIsPropVarTypeNumber|AfxIsPropVarTypeNumber(BYVAL vt AS VARTYPE) AS BOOLEAN
AFX\CPROPVAR.INC|AfxCPropVarToStr|AfxCPropVarToStr OVERLOAD(BYREF cpv AS CPROPVAR) AS CWSTR
AFX\CPROPVAR.INC|AfxCPropVarToStr|AfxCPropVarToStr OVERLOAD(BYVAL pcpv AS CPROPVAR PTR) AS CWSTR
AFX\CPROPVAR.INC|AfxCPropVarOptPrm|AfxCPropVarOptPrm() AS CPROPVAR
AFX\CPROPVAR.INC|AfxCPropVariantToBuffer|AfxCPropVariantToBuffer(BYREF cvIn AS CPropVar, BYVAL pv AS LPVOID, BYVAL cb AS ULONG) AS ULONG
AFX\CPROPVAR.INC|AfxPropVariantCompareEx|AfxPropVariantCompareEx(BYVAL propvar1 AS PROPVARIANT PTR, BYVAL propvar2 AS PROPVARIANT PTR, BYVAL unit AS PROPVAR_COMPARE_UNIT, BYVAL flags AS PROPVAR_COMPARE_FLAGS) AS HRESULT
AFX\CPROPVAR.INC|AfxPropVariantCompare|AfxPropVariantCompare(BYVAL propvar1 AS PROPVARIANT PTR, BYVAL propvar2 AS PROPVARIANT PTR) AS HRESULT
AFX\CPROPVAR.INC|Left|Left OVERLOAD(BYREF cpv AS CPropVar, BYVAL nChars AS INTEGER) AS CWSTR
AFX\CPROPVAR.INC|Right|Right OVERLOAD(BYREF cpv AS CPropVar, BYVAL nChars AS INTEGER) AS CWSTR
AFX\CPROPVAR.INC|Val|Val OVERLOAD(BYREF cpv AS CPropVar) AS DOUBLE
AFX\CPROPVAR.INC|AfxMsg|AfxMsg OVERLOAD(BYREF cpv AS CPropVar, BYREF wszCaption AS WSTRING = "#######", BYVAL uType AS DWORD = 0) AS LONG
AFX\CREGEXP.INC|CRegExp.GetLastResult|CRegExp.GetLastResult() AS HRESULT
AFX\CREGEXP.INC|CRegExp.SetResult|CRegExp.SetResult(BYVAL Result AS HRESULT) AS HRESULT
AFX\CREGEXP.INC|CRegExp.Execute|CRegExp.Execute(BYREF cbsSourceString AS CBSTR, BYVAL bIgnoreCase AS BOOLEAN = FALSE, BYVAL bGlobal AS BOOLEAN = TRUE, BYVAL bMultiline AS BOOLEAN = FALSE) AS CRegExp
AFX\CREGEXP.INC|CRegExp.Execute|CRegExp.Execute(BYREF cbsSourceString AS CBSTR, BYREF cbsPattern AS CBSTR, BYVAL bIgnoreCase AS BOOLEAN = FALSE, BYVAL bGlobal AS BOOLEAN = TRUE, BYVAL bMultiline AS BOOLEAN = FALSE) AS CRegExp
AFX\CREGEXP.INC|CRegExp.MatchesCount|CRegExp.MatchesCount() AS LONG
AFX\CREGEXP.INC|CRegExp.MatchValue|CRegExp.MatchValue(BYVAL index AS LONG) AS CBSTR
AFX\CREGEXP.INC|CRegExp.MatchPos|CRegExp.MatchPos(BYVAL index AS LONG) AS LONG
AFX\CREGEXP.INC|CRegExp.MatchLen|CRegExp.MatchLen(BYVAL index AS LONG) AS LONG
AFX\CREGEXP.INC|CRegExp.SubMatchesCount|CRegExp.SubMatchesCount(BYVAL index AS LONG) AS LONG
AFX\CREGEXP.INC|CRegExp.SubMatchValue|CRegExp.SubMatchValue(BYVAL MatchIndex AS LONG, BYVAL SubMatchIndex AS LONG) AS CVAR
AFX\CREGEXP.INC|CRegExp.Test|CRegExp.Test(BYREF cbsSourceString AS CBSTR, BYVAL bIgnoreCase AS BOOLEAN = FALSE, BYVAL bMultiline AS BOOLEAN = FALSE) AS BOOLEAN
AFX\CREGEXP.INC|CRegExp.Test|CRegExp.Test(BYREF cbsSourceString AS CBSTR, BYREF cbsPattern AS CBSTR, BYVAL bIgnoreCase AS BOOLEAN = FALSE, BYVAL bMultiline AS BOOLEAN = FALSE) AS BOOLEAN
AFX\CREGEXP.INC|CRegExp.Find|CRegExp.Find(BYREF cbsSourceString AS CBSTR, BYVAL bIgnoreCase AS BOOLEAN = FALSE) AS LONG
AFX\CREGEXP.INC|CRegExp.Find|CRegExp.Find(BYREF cbsSourceString AS CBSTR, BYREF cbsPattern AS CBSTR, BYVAL bIgnoreCase AS BOOLEAN = FALSE) AS LONG
AFX\CREGEXP.INC|CRegExp.Find|CRegExp.Find(BYVAL nStart AS LONG, BYREF cbsSourceString AS CBSTR, BYVAL bIgnoreCase AS BOOLEAN = FALSE) AS LONG
AFX\CREGEXP.INC|CRegExp.Find|CRegExp.Find(BYVAL nStart AS LONG, BYREF cbsSourceString AS CBSTR, BYREF cbsPattern AS CBSTR, BYVAL bIgnoreCase AS BOOLEAN = FALSE) AS LONG
AFX\CREGEXP.INC|CRegExp.FindEx|CRegExp.FindEx(BYREF cbsSourceString AS CBSTR, BYVAL bIgnoreCase AS BOOLEAN = FALSE, BYVAL bGlobal AS BOOLEAN = TRUE, BYVAL bMultiline AS BOOLEAN = TRUE) AS CBSTR
AFX\CREGEXP.INC|CRegExp.FindEx|CRegExp.FindEx(BYREF cbsSourceString AS CBSTR, BYREF cbsPattern AS CBSTR, BYVAL bIgnoreCase AS BOOLEAN = FALSE, BYVAL bGlobal AS BOOLEAN = TRUE, BYVAL bMultiline AS BOOLEAN = TRUE) AS CBSTR
AFX\CREGEXP.INC|CRegExp.Replace|CRegExp.Replace(BYREF cbsSourceString AS CBSTR, BYREF cvReplaceString AS CVAR, BYVAL bIgnoreCase AS BOOLEAN = FALSE, BYVAL bGlobal AS BOOLEAN = TRUE, BYVAL bMultiline AS BOOLEAN = FALSE) AS CBSTR
AFX\CREGEXP.INC|CRegExp.Replace|CRegExp.Replace(BYREF cbsSourceString AS CBSTR, BYREF cbsPattern AS CBSTR, BYREF cvReplaceString AS CVAR, BYVAL bIgnoreCase AS BOOLEAN = FALSE, BYVAL bGlobal AS BOOLEAN = TRUE, BYVAL bMultiline AS BOOLEAN = FALSE) AS CBSTR
AFX\CREGEXP.INC|CRegExp.Remove|CRegExp.Remove(BYREF cbsSourceString AS CBSTR, BYVAL bIgnoreCase AS BOOLEAN = FALSE, BYVAL bGlobal AS BOOLEAN = TRUE, BYVAL bMultiline AS BOOLEAN = FALSE) AS CBSTR
AFX\CREGEXP.INC|CRegExp.Remove|CRegExp.Remove(BYREF cbsSourceString AS CBSTR, BYREF cbsPattern AS CBSTR, BYVAL bIgnoreCase AS BOOLEAN = FALSE, BYVAL bGlobal AS BOOLEAN = TRUE, BYVAL bMultiline AS BOOLEAN = FALSE) AS CBSTR
AFX\CREGEXP.INC|CRegExp.Extract|CRegExp.Extract(BYREF cbsSourceString AS CBSTR, BYVAL bIgnoreCase AS BOOLEAN = FALSE, BYVAL bGlobal AS BOOLEAN = FALSE, BYVAL bMultiline AS BOOLEAN = FALSE) AS CBSTR
AFX\CREGEXP.INC|CRegExp.Extract|CRegExp.Extract(BYREF cbsSourceString AS CBSTR, BYREF cbsPattern AS CBSTR, BYVAL bIgnoreCase AS BOOLEAN = FALSE, BYVAL bGlobal AS BOOLEAN = FALSE, BYVAL bMultiline AS BOOLEAN = FALSE) AS CBSTR
AFX\CREGEXP.INC|CRegExp.Extract|CRegExp.Extract(BYVAL nStart AS LONG, BYREF cbsSourceString AS CBSTR, BYVAL bIgnoreCase AS BOOLEAN = FALSE, BYVAL bGlobal AS BOOLEAN = FALSE, BYVAL bMultiline AS BOOLEAN = FALSE) AS CBSTR
AFX\CREGEXP.INC|CRegExp.Extract|CRegExp.Extract(BYVAL nStart AS LONG, BYREF cbsSourceString AS CBSTR, BYREF cbsPattern AS CBSTR, BYVAL bIgnoreCase AS BOOLEAN = FALSE, BYVAL bGlobal AS BOOLEAN = FALSE, BYVAL bMultiline AS BOOLEAN = FALSE) AS CBSTR
AFX\CSAFEARRAY.INC|CSafeArray.GetPtr|CSafeArray.GetPtr() AS SAFEARRAY PTR
AFX\CSAFEARRAY.INC|CSafeArray.Create|CSafeArray.Create(BYVAL vt AS VARTYPE, BYVAL cDims AS UINT, BYVAL prgsabound AS SAFEARRAYBOUND PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Create|CSafeArray.Create(BYVAL vt AS VARTYPE, BYVAL cElements AS ULONG, BYVAL lLBound AS LONG) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Create|CSafeArray.Create(BYVAL vt AS VARTYPE, BYVAL cElements1 AS ULONG, BYVAL lLBound1 AS LONG, BYVAL cElements2 AS ULONG, BYVAL lLBound2 AS LONG) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.CreateEx|CSafeArray.CreateEx(BYVAL vt AS VARTYPE, BYVAL cDims AS UINT, BYVAL prgsabound AS SAFEARRAYBOUND PTR, BYVAL pvExtra AS PVOID) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.CreateEx|CSafeArray.CreateEx(BYVAL vt AS VARTYPE, BYVAL cElements AS ULONG, BYVAL lLBound AS LONG, BYVAL pvExtra AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.CreateEx|CSafeArray.CreateEx(BYVAL vt AS VARTYPE, BYVAL cElements1 AS ULONG, BYVAL lLBound1 AS LONG, BYVAL cElements2 AS ULONG, BYVAL lLBound2 AS LONG, BYVAL pvExtra AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.CreateVector|CSafeArray.CreateVector(BYVAL vt AS VARTYPE, BYVAL cElements AS ULONG, BYVAL lLBound AS LONG) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.CreateVectorEx|CSafeArray.CreateVectorEx(BYVAL vt AS VARTYPE, BYVAL cElements AS ULONG, BYVAL lLBound AS LONG, BYVAL pvExtra AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.NumDims|CSafeArray.NumDims() AS UINT
AFX\CSAFEARRAY.INC|CSafeArray.LBound|CSafeArray.LBound(BYVAL nDim AS UINT = 1) AS LONG
AFX\CSAFEARRAY.INC|CSafeArray.UBound|CSafeArray.UBound(BYVAL nDim AS UINT = 1) AS LONG
AFX\CSAFEARRAY.INC|CSafeArray.Count|CSafeArray.Count(BYVAL nDim AS UINT = 1) AS UINT
AFX\CSAFEARRAY.INC|CSafeArray.ElemSize|CSafeArray.ElemSize() AS UINT
AFX\CSAFEARRAY.INC|CSafeArray.IsResizable|CSafeArray.IsResizable() AS BOOLEAN
AFX\CSAFEARRAY.INC|CSafeArray.GetType|CSafeArray.GetType() AS VARTYPE
AFX\CSAFEARRAY.INC|CSafeArray.LocksCount|CSafeArray.LocksCount() AS UINT
AFX\CSAFEARRAY.INC|CSafeArray.Flags|CSafeArray.Flags() AS USHORT
AFX\CSAFEARRAY.INC|CSafeArray.Features|CSafeArray.Features() AS USHORT
AFX\CSAFEARRAY.INC|CSafeArray.AccessData|CSafeArray.AccessData() AS ANY PTR
AFX\CSAFEARRAY.INC|CSafeArray.UnaccessData|CSafeArray.UnaccessData() AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Redim|CSafeArray.Redim(BYVAL pnewsabounds AS SAFEARRAYBOUND PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Redim|CSafeArray.Redim(BYVAL cElements AS ULONG, BYVAL lLBound AS LONG) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Redim|CSafeArray.Redim(BYVAL cElements1 AS ULONG, BYVAL lLBound1 AS LONG, BYVAL cElements2 AS ULONG, BYVAL lLBound2 AS LONG) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Copy|CSafeArray.Copy() AS SAFEARRAY PTR
AFX\CSAFEARRAY.INC|CSafeArray.CopyData|CSafeArray.CopyData(BYVAL psaTarget AS SAFEARRAY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.CopyFrom|CSafeArray.CopyFrom(BYVAL psaSrc AS SAFEARRAY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.PtrOfIndex|CSafeArray.PtrOfIndex(BYVAL prgIndices AS LONG PTR) AS ANY PTR
AFX\CSAFEARRAY.INC|CSafeArray.PtrOfIndex|CSafeArray.PtrOfIndex(BYVAL idx AS LONG) AS ANY PTR
AFX\CSAFEARRAY.INC|CSafeArray.PtrOfIndex|CSafeArray.PtrOfIndex(BYVAL cElem AS LONG, BYVAL cDim AS LONG) AS ANY PTR
AFX\CSAFEARRAY.INC|CSafeArray.Destroy|CSafeArray.Destroy() AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.DestroyData|CSafeArray.DestroyData() AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Clear|CSafeArray.Clear() AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Erase|CSafeArray.Erase() AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Reset|CSafeArray.Reset() AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.CopyFromVariant|CSafeArray.CopyFromVariant(BYVAL pvar AS VARIANT PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.MoveFromVariant|CSafeArray.MoveFromVariant(BYVAL pvar AS VARIANT PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.CopyToVariant|CSafeArray.CopyToVariant(BYVAL pvar AS VARIANT PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.MoveToVariant|CSafeArray.MoveToVariant(BYVAL pvar AS VARIANT PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Attach|CSafeArray.Attach(BYVAL psaSrc AS SAFEARRAY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Detach|CSafeArray.Detach() AS SAFEARRAY PTR
AFX\CSAFEARRAY.INC|CSafeArray.GetIID|CSafeArray.GetIID() AS GUID
AFX\CSAFEARRAY.INC|CSafeArray.SetIID|CSafeArray.SetIID(BYVAL pguid AS GUID PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.GetRecordInfo|CSafeArray.GetRecordInfo() AS IRecordInfo PTR
AFX\CSAFEARRAY.INC|CSafeArray.SetRecordInfo|CSafeArray.SetRecordInfo(BYVAL prinfo AS IRecordInfo PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.GetElement|CSafeArray.GetElement(BYVAL prgIndices AS LONG PTR, BYVAL pData AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Get|CSafeArray.Get(BYVAL prgIndices AS LONG PTR, BYVAL pData AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.GetElement|CSafeArray.GetElement(BYVAL idx AS LONG, BYVAL pData AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Get|CSafeArray.Get(BYVAL idx AS LONG, BYVAL pData AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.GetElement|CSafeArray.GetElement(BYVAL cElem AS LONG, BYVAL cDim AS LONG, BYVAL pData AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Get|CSafeArray.Get(BYVAL cElem AS LONG, BYVAL cDim AS LONG, BYVAL pData AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.GetElement|CSafeArray.GetElement(BYVAL prgIndices AS LONG PTR, BYREF cbsData AS CBSTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Get|CSafeArray.Get(BYVAL prgIndices AS LONG PTR, BYREF cbsData AS CBSTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.GetStr|CSafeArray.GetStr(BYVAL prgIndices AS LONG PTR) AS CBSTR
AFX\CSAFEARRAY.INC|CSafeArray.GetElement|CSafeArray.GetElement(BYVAL idx AS LONG, BYREF cbsData AS CBSTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Get|CSafeArray.Get(BYVAL idx AS LONG, BYREF cbsData AS CBSTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.GetStr|CSafeArray.GetStr(BYVAL idx AS LONG) AS CBSTR
AFX\CSAFEARRAY.INC|CSafeArray.GetElement|CSafeArray.GetElement(BYVAL cElem AS LONG, BYVAL cDim AS LONG, BYREF cbsData AS CBSTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Get|CSafeArray.Get(BYVAL cElem AS LONG, BYVAL cDim AS LONG, BYREF cbsData AS CBSTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.GetStr|CSafeArray.GetStr(BYVAL cElem AS LONG, BYVAL cDim AS LONG) AS CBSTR
AFX\CSAFEARRAY.INC|CSafeArray.GetElement|CSafeArray.GetElement(BYVAL prgIndices AS LONG PTR, BYREF cvData AS CVAR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Get|CSafeArray.Get(BYVAL prgIndices AS LONG PTR, BYREF cvData AS CVAR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.GetVar|CSafeArray.GetVar(BYVAL prgIndices AS LONG PTR) AS CVAR
AFX\CSAFEARRAY.INC|CSafeArray.GetElement|CSafeArray.GetElement(BYVAL idx AS LONG, BYREF cvData AS CVAR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Get|CSafeArray.Get(BYVAL idx AS LONG, BYREF cvData AS CVAR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.GetVar|CSafeArray.GetVar(BYVAL idx AS LONG) AS CVAR
AFX\CSAFEARRAY.INC|CSafeArray.GetElement|CSafeArray.GetElement(BYVAL cElem AS LONG, BYVAL cDim AS LONG, BYREF cvData AS CVAR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Get|CSafeArray.Get(BYVAL cElem AS LONG, BYVAL cDim AS LONG, BYREF cvData AS CVAR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.GetVar|CSafeArray.GetVar(BYVAL cElem AS LONG, BYVAL cDim AS LONG) AS CVAR
AFX\CSAFEARRAY.INC|CSafeArray.PutElement|CSafeArray.PutElement(BYVAL prgIndices AS LONG PTR, BYVAL pData AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Put|CSafeArray.Put(BYVAL prgIndices AS LONG PTR, BYVAL pData AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.PutElement|CSafeArray.PutElement(BYVAL idx AS LONG, BYVAL pData AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Put|CSafeArray.Put(BYVAL idx AS LONG, BYVAL pData AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.PutElement|CSafeArray.PutElement(BYVAL cElem AS LONG, BYVAL cDim AS LONG, BYVAL pData AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Put|CSafeArray.Put(BYVAL cElem AS LONG, BYVAL cDim AS LONG, BYVAL pData AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.PutElement|CSafeArray.PutElement(BYVAL prgIndices AS LONG PTR, BYREF cbsData AS CBSTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.PutStr|CSafeArray.PutStr(BYVAL prgIndices AS LONG PTR, BYREF cbsData AS CBSTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.PutElement|CSafeArray.PutElement(BYVAL idx AS LONG, BYREF cbsData AS CBSTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.PutStr|CSafeArray.PutStr(BYVAL idx AS LONG, BYREF cbsData AS CBSTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.PutElement|CSafeArray.PutElement(BYVAL cElem AS LONG, BYVAL cDim AS LONG, BYREF cbsData AS CBSTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.PutStr|CSafeArray.PutStr(BYVAL cElem AS LONG, BYVAL cDim AS LONG, BYREF cbsData AS CBSTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.PutElement|CSafeArray.PutElement(BYVAL prgIndices AS LONG PTR, BYREF cvData AS CVAR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.PutVar|CSafeArray.PutVar(BYVAL prgIndices AS LONG PTR, BYREF cvData AS CVAR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.PutElement|CSafeArray.PutElement(BYVAL idx AS LONG, BYREF cvData AS CVAR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.PutVar|CSafeArray.PutVar(BYVAL idx AS LONG, BYREF cvData AS CVAR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.PutElement|CSafeArray.PutElement(BYVAL cElem AS LONG, BYVAL cDim AS LONG, BYREF cvData AS CVAR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.PutVar|CSafeArray.PutVar(BYVAL cElem AS LONG, BYVAL cDim AS LONG, BYREF cvData AS CVAR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.AppendElement|CSafeArray.AppendElement(BYVAL pData AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Append|CSafeArray.Append(BYVAL pData AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.AppendElement|CSafeArray.AppendElement(BYREF cbsData AS CBSTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Append|CSafeArray.Append(BYREF cbsData AS CBSTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.AppendStr|CSafeArray.AppendStr(BYVAL pwszData AS WSTRING PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.AppendElement|CSafeArray.AppendElement(BYREF cvData AS CVAR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Append|CSafeArray.Append(BYREF cvData AS CVAR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.AppendElement|CSafeArray.AppendElement(BYVAL vData AS VARIANT) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Append|CSafeArray.Append(BYVAL vData AS VARIANT) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.InsertElement|CSafeArray.InsertElement(BYVAL nPos AS LONG, BYVAL pData AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.InsertElement|CSafeArray.InsertElement(BYVAL pData AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Insert|CSafeArray.Insert(BYVAL nPos AS LONG, BYVAL pData AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Insert|CSafeArray.Insert(BYVAL pData AS ANY PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.InsertElement|CSafeArray.InsertElement(BYVAL nPos AS LONG, BYREF cbsData AS CBSTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.InsertElement|CSafeArray.InsertElement(BYREF cbsData AS CBSTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Insert|CSafeArray.Insert(BYVAL nPos AS LONG, BYREF cbsData AS CBSTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Insert|CSafeArray.Insert(BYREF cbsData AS CBSTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.InsertStr|CSafeArray.InsertStr(BYVAL nPos AS LONG, BYVAL pwszData AS WSTRING PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.InsertStr|CSafeArray.InsertStr(BYVAL pwszData AS WSTRING PTR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.InsertElement|CSafeArray.InsertElement(BYVAL nPos AS LONG, BYREF cvData AS CVAR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.InsertElement|CSafeArray.InsertElement(BYREF cvData AS CVAR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Insert|CSafeArray.Insert(BYVAL nPos AS LONG, BYREF cvData AS CVAR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Insert|CSafeArray.Insert(BYREF cvData AS CVAR) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.InsertElement|CSafeArray.InsertElement(BYVAL nPos AS LONG, BYVAL vData AS VARIANT) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.InsertElement|CSafeArray.InsertElement(BYVAL vData AS VARIANT) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Insert|CSafeArray.Insert(BYVAL nPos AS LONG, BYVAL vData AS VARIANT) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Insert|CSafeArray.Insert(BYVAL vData AS VARIANT) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.DeleteElement|CSafeArray.DeleteElement(BYVAL nPos AS LONG) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.Remove|CSafeArray.Remove(BYVAL nPos AS LONG) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.DeleteStringElement|CSafeArray.DeleteStringElement(BYVAL nPos AS LONG) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.RemoveStr|CSafeArray.RemoveStr(BYVAL nPos AS LONG) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.DeleteVariantElement|CSafeArray.DeleteVariantElement(BYVAL nPos AS LONG) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.RemoveVar|CSafeArray.RemoveVar(BYVAL nPos AS LONG) AS HRESULT
AFX\CSAFEARRAY.INC|CSafeArray.FindElement|CSafeArray.FindElement(BYREF wszFind AS WSTRING, BYVAL bNoCase AS BOOLEAN = FALSE) AS LONG
AFX\CSAFEARRAY.INC|CSafeArray.Find|CSafeArray.Find(BYREF wszFind AS WSTRING, BYVAL bNoCase AS BOOLEAN = FALSE) AS LONG
AFX\CSAFEARRAY.INC|AfxCSafeArrayCompare|AfxCSafeArrayCompare CDECL(BYVAL a AS AFX_BSTR PTR, BYVAL b AS AFX_BSTR PTR) AS LONG
AFX\CSAFEARRAY.INC|AfxCSafeArrayReverseCompare|AfxCSafeArrayReverseCompare CDECL(BYVAL a AS AFX_BSTR PTR, BYVAL b AS AFX_BSTR PTR) AS LONG
AFX\CSAFEARRAY.INC|CSafeArray.Sort|CSafeArray.Sort(BYVAL bAscend AS BOOLEAN = TRUE) AS HRESULT
AFX\CSAFEARRAY.INC|AfxStrSplit|AfxStrSplit(BYREF wszStr AS WSTRING, BYREF wszDelimiters AS WSTRING) AS CSafeArray
AFX\CSAFEARRAY.INC|AfxStrJoin|AfxStrJoin(BYREF csa AS CSafeArray, BYREF wszDelimiter AS WSTRING) AS CWSTR
AFX\CSAFEARRAY.INC|AfxXmlBase64Encode|AfxXmlBase64Encode(BYREF strData AS STRING) AS STRING
AFX\CSAFEARRAY.INC|AfxXmlBase64Decode|AfxXmlBase64Decode(BYREF strData AS STRING) AS STRING
AFX\CSAFEARRAY.INC|AfxFileReadAllLinesA|AfxFileReadAllLinesA(BYREF wszFileName AS WSTRING, BYREF szDelimiter AS CONST ZSTRING = CHR(13, 10)) AS CSafeArray
AFX\CSAFEARRAY.INC|AfxFileReadAllLinesW|AfxFileReadAllLinesW(BYREF wszFileName AS WSTRING, BYREF wszDelimiter AS CONST WSTRING = CHR(13, 10)) AS CSafeArray
AFX\CSHORTCUT.INC|CShortcut.GetLastResult|CShortcut.GetLastResult() AS HRESULT
AFX\CSHORTCUT.INC|CShortcut.Save|CShortcut.Save() AS HRESULT
AFX\CSHORTCUT.INC|CURLShortcut.GetLastResult|CURLShortcut.GetLastResult() AS HRESULT
AFX\CSHORTCUT.INC|CURLShortcut.Save|CURLShortcut.Save() AS HRESULT
AFX\CSQLITE3.INC|CSQLite.RefCount|CSQLite.RefCount(BYVAL bIncrement AS BOOLEAN, BYREF wszDllPath AS WSTRING = "###########") AS LONG
AFX\CSQLITE3.INC|CSQLite.GetLastResult|CSQLite.GetLastResult() AS HRESULT
AFX\CSQLITE3.INC|CSQLite.SetResult|CSQLite.SetResult(BYVAL Result AS HRESULT) AS HRESULT
AFX\CSQLITE3.INC|CSQLite.Version|CSQLite.Version() AS STRING
AFX\CSQLITE3.INC|CSQLite.VersionNumber|CSQLite.VersionNumber() AS LONG
AFX\CSQLITE3.INC|CSQLite.SourceID|CSQLite.SourceID() AS STRING
AFX\CSQLITE3.INC|CSQLite.Complete|CSQLite.Complete(BYREF wszSql AS CONST WSTRING) AS LONG
AFX\CSQLITE3.INC|CSQLite.ThreadSafe|CSQLite.ThreadSafe() AS BOOLEAN
AFX\CSQLITE3.INC|CSQLite.CompileOptionUsed|CSQLite.CompileOptionUsed(BYREF szOptName AS ZSTRING) AS BOOLEAN
AFX\CSQLITE3.INC|CSQLite.GetCompileOption|CSQLite.GetCompileOption(BYVAL nOption AS LONG) AS STRING
AFX\CSQLITE3.INC|CSQLite.Malloc|CSQLite.Malloc(BYVAL nBytes AS LONG) AS ANY PTR
AFX\CSQLITE3.INC|CSQLite.Malloc64|CSQLite.Malloc64(BYVAL nBytes AS sqlite3_uint64) AS ANY PTR
AFX\CSQLITE3.INC|CSQLite.Realloc|CSQLite.Realloc(BYVAL pMem AS ANY PTR, BYVAL nBytes AS LONG) AS ANY PTR
AFX\CSQLITE3.INC|CSQLite.Realloc64|CSQLite.Realloc64(BYVAL pMem AS ANY PTR, BYVAL nBytes AS sqlite3_uint64) AS ANY PTR
AFX\CSQLITE3.INC|CSQLite.Free|CSQLite.Free(BYVAL pMem AS ANY PTR)
AFX\CSQLITE3.INC|CSQLite.MemorySize|CSQLite.MemorySize(BYVAL pMem AS ANY PTR) AS sqlite3_uint64
AFX\CSQLITE3.INC|CSQLite.MemoryUsed|CSQLite.MemoryUsed() AS sqlite3_uint64
AFX\CSQLITE3.INC|CSQLite.MemoryHighwater|CSQLite.MemoryHighwater(BYVAL resetFlag AS BOOLEAN) AS sqlite3_uint64
AFX\CSQLITE3.INC|CSQLite.Randomness|CSQLite.Randomness(BYVAL nBytes AS LONG, BYVAL pbuffer AS ANY PTR)
AFX\CSQLITE3.INC|CSQLite.EnableSharedCache|CSQLite.EnableSharedCache(BYVAL bSharing AS BOOLEAN) AS LONG
AFX\CSQLITE3.INC|CSQLite.ReleaseMemory|CSQLite.ReleaseMemory(BYVAL nBytes AS LONG) AS LONG
AFX\CSQLITE3.INC|CSQLite.Sleep|CSQLite.Sleep(BYVAL ms AS LONG) AS LONG
AFX\CSQLITE3.INC|CSQLite.SoftHeapLimit64|CSQLite.SoftHeapLimit64(BYVAL nBytes AS LONG) AS LONG
AFX\CSQLITE3.INC|CSQLite.Status|CSQLite.Status(BYVAL op AS LONG, BYREF pCurrent AS LONG, BYREF pHighwater AS LONG, BYVAL resetFlag AS BOOLEAN = FALSE) AS LONG
AFX\CSQLITE3.INC|CSQLite.Status64|CSQLite.Status64(BYVAL op AS LONG, BYREF pCurrent AS sqlite3_int64, BYREF pHighwater AS sqlite3_int64, BYVAL resetFlag AS BOOLEAN = FALSE) AS LONG
AFX\CSQLITE3.INC|CSQLite.ErrStr|CSQLite.ErrStr(BYVAL nErrorCode AS LONG) AS STRING
AFX\CSQLITE3.INC|CSQLite.StrGlob|CSQLite.StrGlob(BYREF szGlob AS ZSTRING, BYREF szStr AS ZSTRING) AS LONG
AFX\CSQLITE3.INC|CSQLiteDb.OpenDb|CSQLiteDb.OpenDb(BYREF wszFileName AS CONST WSTRING) AS LONG
AFX\CSQLITE3.INC|CSQLiteDb.CloseDb|CSQLiteDb.CloseDb() AS LONG
AFX\CSQLITE3.INC|CSQLiteDb.ErrCode|CSQLiteDb.ErrCode() AS LONG
AFX\CSQLITE3.INC|CSQLiteDb.ExtendedErrCode|CSQLiteDb.ExtendedErrCode() AS LONG
AFX\CSQLITE3.INC|CSQLiteDb.ExtendedResultCodes|CSQLiteDb.ExtendedResultCodes(BYVAL onoff AS BOOLEAN) AS LONG
AFX\CSQLITE3.INC|CSQLiteDb.ErrMsg|CSQLiteDb.ErrMsg() AS STRING
AFX\CSQLITE3.INC|CSQLiteDb.Changes|CSQLiteDb.Changes() AS LONG
AFX\CSQLITE3.INC|CSQLiteDb.TotalChanges|CSQLiteDb.TotalChanges() AS LONG
AFX\CSQLITE3.INC|CSQLiteDb.LastInsertRowId|CSQLiteDb.LastInsertRowId() AS sqlite3_int64
AFX\CSQLITE3.INC|CSQLiteDb.Interrupt|
AFX\CSQLITE3.INC|CSQLiteDb.Limit|CSQLiteDb.Limit(BYVAL id AS LONG, BYVAL newVal AS LONG) AS LONG
AFX\CSQLITE3.INC|CSQLiteDb.ReleaseMemory|CSQLiteDb.ReleaseMemory() AS LONG
AFX\CSQLITE3.INC|CSQLiteDb.Prepare|CSQLiteDb.Prepare(BYREF wszSql AS WSTRING) AS sqlite3_stmt PTR
AFX\CSQLITE3.INC|CSQLiteDb.Exec|CSQLiteDb.Exec(BYREF wszSql AS WSTRING) AS LONG
AFX\CSQLITE3.INC|CSQLiteDb.Status|CSQLiteDb.Status(BYVAL op AS LONG, BYREF pCurrent AS LONG, BYREF pHighwater AS LONG, BYVAL resetFlag AS BOOLEAN = FALSE) AS LONG
AFX\CSQLITE3.INC|CSQLiteDb.ProgressHandler|CSQLiteDb.ProgressHandler(BYVAL nOps AS LONG, BYVAL pCallback AS ANY PTR, BYVAL pArg AS ANY PTR)
AFX\CSQLITE3.INC|CSQLiteDb.UnlockNotify|CSQLiteDb.UnlockNotify(BYVAL pNotifyCallback AS ANY PTR, BYVAL pNotifyArg AS ANY PTR) AS LONG
AFX\CSQLITE3.INC|CSQLiteDb.OpenBlob|CSQLiteDb.OpenBlob(BYREF szDbName AS ZSTRING, BYREF szTableName AS ZSTRING, BYREF szColumnName AS ZSTRING, BYVAL iRow AS sqlite3_int64, BYVAL flags AS LONG = 0) AS sqlite3_blob PTR
AFX\CSQLITE3.INC|CSQLiteStmt.Finalize|CSQLiteStmt.Finalize() AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.Reset|CSQLiteStmt.Reset() AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.GetRow|CSQLiteStmt.GetRow() AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.Step_|CSQLiteStmt.Step_() AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnCount|CSQLiteStmt.ColumnCount() AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnName|CSQLiteStmt.ColumnName(BYVAL nCol AS LONG) AS CWSTR
AFX\CSQLITE3.INC|CSQLiteStmt.GetColumNames|CSQLiteStmt.GetColumNames() AS CDicObj PTR
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnText|CSQLiteStmt.ColumnText(BYVAL nCol AS LONG) AS CWSTR
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnText|CSQLiteStmt.ColumnText(BYREF wszColName AS WSTRING) AS CWSTR
AFX\CSQLITE3.INC|CSQLiteStmt.DataCount|CSQLiteStmt.DataCount() AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.DbHandle|CSQLiteStmt.DbHandle() AS sqlite3 PTR
AFX\CSQLITE3.INC|CSQLiteStmt.Sql|CSQLiteStmt.Sql() AS STRING
AFX\CSQLITE3.INC|CSQLiteStmt.Busy|CSQLiteStmt.Busy() AS BOOLEAN
AFX\CSQLITE3.INC|CSQLiteStmt.ReadOnly|CSQLiteStmt.ReadOnly() AS BOOLEAN
AFX\CSQLITE3.INC|CSQLiteStmt.BindBlob|CSQLiteStmt.BindBlob(BYVAL idx AS LONG, BYVAL pValue AS ANY PTR, BYVAL numBytes AS LONG, BYVAL pDestructor AS ANY PTR = NULL) AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.BindBlob64|CSQLiteStmt.BindBlob64(BYVAL idx AS LONG, BYVAL pValue AS ANY PTR, BYVAL numBytes AS sqlite3_uint64, BYVAL pDestructor AS ANY PTR = NULL) AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.BindDouble|CSQLiteStmt.BindDouble(BYVAL idx AS LONG, BYVAL dblValue AS DOUBLE) AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.BindLong|CSQLiteStmt.BindLong(BYVAL idx AS LONG, BYVAL longValue AS LONG) AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.BindLongInt|CSQLiteStmt.BindLongInt(BYVAL idx AS LONG, BYVAL longintValue AS sqlite3_int64) AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.BindNull|CSQLiteStmt.BindNull(BYVAL idx AS LONG) AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.BindText|CSQLiteStmt.BindText(BYVAL idx AS LONG, BYREF wszValue AS WSTRING, BYVAL pDestructor AS ANY PTR = NULL) AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.BindZeroBlob|CSQLiteStmt.BindZeroBlob(BYVAL idx AS LONG, BYVAL numBytes AS LONG) AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.BindZeroBlob64|CSQLiteStmt.BindZeroBlob64(BYVAL idx AS LONG, BYVAL numBytes AS sqlite3_uint64) AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.BindParameterCount|CSQLiteStmt.BindParameterCount() AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.BindParameterName|CSQLiteStmt.BindParameterName(BYVAL idx AS LONG) AS STRING
AFX\CSQLITE3.INC|CSQLiteStmt.BindParameterIndex|CSQLiteStmt.BindParameterIndex(BYREF szName AS ZSTRING) AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.ClearBindings|CSQLiteStmt.ClearBindings() AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnDatabaseName|CSQLiteStmt.ColumnDatabaseName(BYVAL nCol AS LONG) AS CWSTR
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnDatabaseName|CSQLiteStmt.ColumnDatabaseName(BYREF wszColName AS WSTRING) AS CWSTR
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnTableName|CSQLiteStmt.ColumnTableName(BYVAL nCol AS LONG) AS CWSTR
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnTableName|CSQLiteStmt.ColumnTableName(BYREF wszColName AS WSTRING) AS CWSTR
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnOriginName|CSQLiteStmt.ColumnOriginName(BYVAL nCol AS LONG) AS CWSTR
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnOriginName|CSQLiteStmt.ColumnOriginName(BYREF wszColName AS WSTRING) AS CWSTR
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnDeclaredType|CSQLiteStmt.ColumnDeclaredType(BYVAL nCol AS LONG) AS CWSTR
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnDeclaredType|CSQLiteStmt.ColumnDeclaredType(BYREF wszColName AS WSTRING) AS CWSTR
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnBlob|CSQLiteStmt.ColumnBlob(BYVAL nCol AS LONG) AS ANY PTR
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnBlob|CSQLiteStmt.ColumnBlob(BYREF wszColName AS WSTRING) AS ANY PTR
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnBytes|CSQLiteStmt.ColumnBytes(BYVAL nCol AS LONG) AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnBytes|CSQLiteStmt.ColumnBytes(BYREF wszColName AS WSTRING) AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnDouble|CSQLiteStmt.ColumnDouble(BYVAL nCol AS LONG) AS DOUBLE
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnDouble|CSQLiteStmt.ColumnDouble(BYREF wszColName AS WSTRING) AS DOUBLE
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnLong|CSQLiteStmt.ColumnLong(BYVAL nCol AS LONG) AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnLong|CSQLiteStmt.ColumnLong(BYREF wszColName AS WSTRING) AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnLongInt|CSQLiteStmt.ColumnLongInt(BYVAL nCol AS LONG) AS LONGINT
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnLongInt|CSQLiteStmt.ColumnLongInt(BYREF wszColName AS WSTRING) AS LONGINT
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnType|CSQLiteStmt.ColumnType(BYVAL nCol AS LONG) AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.ColumnType|CSQLiteStmt.ColumnType(BYREF wszColName AS WSTRING) AS LONG
AFX\CSQLITE3.INC|CSQLiteStmt.IsColumnNull|CSQLiteStmt.IsColumnNull(BYVAL nCol AS LONG) AS BOOLEAN
AFX\CSQLITE3.INC|CSQLiteStmt.IsColumnNull|CSQLiteStmt.IsColumnNull(BYREF wszColName AS WSTRING) AS BOOLEAN
AFX\CSQLITE3.INC|CSQLiteBlob.Close|CSQLiteBlob.Close() AS LONG
AFX\CSQLITE3.INC|CSQLiteBlob.Reopen|CSQLiteBlob.Reopen(BYVAL rowId AS sqlite3_int64) AS LONG
AFX\CSQLITE3.INC|CSQLiteBlob.Bytes|CSQLiteBlob.Bytes() AS LONG
AFX\CSQLITE3.INC|CSQLiteBlob.Read|CSQLiteBlob.Read(BYVAL pBuffer AS ANY PTR, BYVAL numBytes AS LONG, BYVAL iOffset AS LONG = 0) AS LONG
AFX\CSQLITE3.INC|CSQLiteBlob.Write|CSQLiteBlob.Write(BYVAL pBuffer AS ANY PTR, BYVAL numBytes AS LONG, BYVAL iOffset AS LONG = 0) AS LONG
AFX\CSTACK.INC|CStack.Push|CStack.Push(BYREF cvData AS CVAR) AS HRESULT
AFX\CSTACK.INC|CStack.Pop|CStack.Pop() AS CVAR
AFX\CSTACK.INC|CStack.Count|CStack.Count() AS UINT
AFX\CSTACK.INC|CStack.Clear|CStack.Clear() AS HRESULT
AFX\CSTACK.INC|CQueue.Enqueue|CQueue.Enqueue(BYREF cvData AS CVAR) AS HRESULT
AFX\CSTACK.INC|CQueue.Dequeue|CQueue.Dequeue() AS CVAR
AFX\CSTACK.INC|CQueue.Count|CQueue.Count() AS UINT
AFX\CSTACK.INC|CQueue.Clear|CQueue.Clear() AS HRESULT
AFX\CTEXTSTREAM.INC|CTextStream.GetLastResult|CTextStream.GetLastResult() AS HRESULT
AFX\CTEXTSTREAM.INC|CTextStream.SetResult|CTextStream.SetResult(BYVAL Result AS HRESULT) AS HRESULT
AFX\CTEXTSTREAM.INC|CTextStream.GetErrorInfo|CTextStream.GetErrorInfo() AS STRING
AFX\CTEXTSTREAM.INC|CTextStream.Create|CTextStream.Create(BYREF cbsFileName AS CBSTR, BYVAL bOverwrite AS BOOLEAN = TRUE, BYVAL bUnicode AS BOOLEAN = FALSE) AS HRESULT
AFX\CTEXTSTREAM.INC|CTextStream.Open|CTextStream.Open(BYREF cbsFileName AS CBSTR, BYVAL IOMode AS LONG = 1, BYVAL bCreate AS BOOLEAN = FALSE, BYVAL bUnicode AS BOOLEAN = FALSE) AS HRESULT
AFX\CTEXTSTREAM.INC|CTextStream.OpenUnicode|CTextStream.OpenUnicode(BYREF cbsFileName AS CBSTR, BYVAL IOMode AS LONG = 1, BYVAL bCreate AS BOOLEAN = FALSE) AS HRESULT
AFX\CTEXTSTREAM.INC|CTextStream.OpenForInputA|CTextStream.OpenForInputA(BYREF cbsFileName AS CBSTR, BYVAL bCreate AS BOOLEAN = FALSE) AS HRESULT
AFX\CTEXTSTREAM.INC|CTextStream.OpenForOutputA|CTextStream.OpenForOutputA(BYREF cbsFileName AS CBSTR, BYVAL bCreate AS BOOLEAN = FALSE) AS HRESULT
AFX\CTEXTSTREAM.INC|CTextStream.OpenForAppendA|CTextStream.OpenForAppendA(BYREF cbsFileName AS CBSTR, BYVAL bCreate AS BOOLEAN = FALSE) AS HRESULT
AFX\CTEXTSTREAM.INC|CTextStream.OpenForInputW|CTextStream.OpenForInputW(BYREF cbsFileName AS CBSTR, BYVAL bCreate AS BOOLEAN = FALSE) AS HRESULT
AFX\CTEXTSTREAM.INC|CTextStream.OpenForOutputW|CTextStream.OpenForOutputW(BYREF cbsFileName AS CBSTR, BYVAL bCreate AS BOOLEAN = FALSE) AS HRESULT
AFX\CTEXTSTREAM.INC|CTextStream.OpenForAppendW|CTextStream.OpenForAppendW(BYREF cbsFileName AS CBSTR, BYVAL bCreate AS BOOLEAN = FALSE) AS HRESULT
AFX\CTEXTSTREAM.INC|CTextStream.Close|CTextStream.Close() AS HRESULT
AFX\CTEXTSTREAM.INC|CTextStream.EOS|CTextStream.EOS() AS BOOLEAN
AFX\CTEXTSTREAM.INC|CTextStream.EOL|CTextStream.EOL() AS BOOLEAN
AFX\CTEXTSTREAM.INC|CTextStream.Read|CTextStream.Read(BYVAL numChars AS LONG) AS CBSTR
AFX\CTEXTSTREAM.INC|CTextStream.ReadLine|CTextStream.ReadLine() AS CBSTR
AFX\CTEXTSTREAM.INC|CTextStream.ReadAll|CTextStream.ReadAll() AS CBSTR
AFX\CTEXTSTREAM.INC|CTextStream.Write|CTextStream.Write(BYREF cbsText AS CBSTR) AS HRESULT
AFX\CTEXTSTREAM.INC|CTextStream.WriteLine|CTextStream.WriteLine(BYREF cbsText AS CBSTR) AS HRESULT
AFX\CTEXTSTREAM.INC|CTextStream.WriteBlankLines|CTextStream.WriteBlankLines(BYVAL numLines AS LONG) AS HRESULT
AFX\CTEXTSTREAM.INC|CTextStream.Skip|CTextStream.Skip(BYVAL numChars AS LONG) AS HRESULT
AFX\CTEXTSTREAM.INC|CTextStream.SkipLine|CTextStream.SkipLine() AS HRESULT
AFX\CTIME64.INC|CTimeSpan.SetTimeSpan|CTimeSpan.SetTimeSpan(BYVAL lltime AS LONGLONG)
AFX\CTIME64.INC|CTimeSpan.SetTimeSpan|CTimeSpan.SetTimeSpan(BYVAL lDays AS LONG, BYVAL nHours AS LONG, BYVAL nMins AS LONG, BYVAL nSecs AS LONG)
AFX\CTIME64.INC|CTimeSpan.GetTimeSpan|CTimeSpan.GetTimeSpan() AS LONGLONG
AFX\CTIME64.INC|CTimeSpan.GetTotalHours|CTimeSpan.GetTotalHours() AS LONGLONG
AFX\CTIME64.INC|CTimeSpan.GetTotalMinutes|CTimeSpan.GetTotalMinutes() AS LONGLONG
AFX\CTIME64.INC|CTimeSpan.GetTotalSeconds|CTimeSpan.GetTotalSeconds() AS LONGLONG
AFX\CTIME64.INC|CTimeSpan.GetDays|CTimeSpan.GetDays() AS LONG
AFX\CTIME64.INC|CTimeSpan.GetHours|CTimeSpan.GetHours() AS LONG
AFX\CTIME64.INC|CTimeSpan.GetMinutes|CTimeSpan.GetMinutes() AS LONG
AFX\CTIME64.INC|CTimeSpan.GetSeconds|CTimeSpan.GetSeconds() AS LONG
AFX\CTIME64.INC|CTime64.SetDateTime|CTime64.SetDateTime(BYVAL nYear AS WORD, BYVAL nMonth AS WORD, BYVAL nDay AS WORD, BYVAL nHour AS WORD = 0, BYVAL nMin AS WORD = 0, BYVAL nSec AS WORD = 0) AS BOOLEAN
AFX\CTIME64.INC|CTime64.GetCurrentTime|CTime64.GetCurrentTime() AS CTime64
AFX\CTIME64.INC|CTime64.GetTime|CTime64.GetTime() AS LONGLONG
AFX\CTIME64.INC|CTime64.GetYear|CTime64.GetYear() AS LONG
AFX\CTIME64.INC|CTime64.GetMonth|CTime64.GetMonth() AS LONG
AFX\CTIME64.INC|CTime64.GetDay|CTime64.GetDay() AS LONG
AFX\CTIME64.INC|CTime64.GetHour|CTime64.GetHour() AS LONG
AFX\CTIME64.INC|CTime64.GetMinute|CTime64.GetMinute() AS LONG
AFX\CTIME64.INC|CTime64.GetSecond|CTime64.GetSecond() AS LONG
AFX\CTIME64.INC|CTime64.GetDayOfWeek|CTime64.GetDayOfWeek() AS LONG
AFX\CTIME64.INC|CTime64.GetGmtTime|CTime64.GetGmtTime() AS tm
AFX\CTIME64.INC|CTime64.GetLocalTime|CTime64.GetLocalTime() AS tm
AFX\CTIME64.INC|CTime64.GetAsSystemTime|CTime64.GetAsSystemTime() AS SYSTEMTIME
AFX\CTIME64.INC|CTime64.GetAsFileTime|CTime64.GetAsFileTime() AS FILETIME
AFX\CTIME64.INC|CTime64.Format|CTime64.Format(BYREF wszFmt AS WSTRING) AS CWSTR
AFX\CTIME64.INC|CTime64.FormatGmt|CTime64.FormatGmt(BYREF wszFmt AS WSTRING) AS CWSTR
AFX\CUTF16.INC|AfxIsUtf16|AfxIsUtf16(BYVAL pv aS ANY PTR) AS BOOLEAN
AFX\CUTF16.INC|CUTF16.wstr|CUTF16.wstr() BYREF AS WSTRING
AFX\CUTF16.INC|CUTF16.vptr|CUTF16.vptr() AS WSTRING PTR
AFX\CUTF16.INC|CUTF16.sptr|CUTF16.sptr() AS WSTRING PTR
AFX\CUTF16.INC|CUTF16.wchar|CUTF16.wchar() AS WSTRING PTR
AFX\CUTF16.INC|CUTF16.cbstr|CUTF16.cbstr() AS CBSTR_
AFX\CUTF16.INC|CUTF16.bstr|CUTF16.bstr() AS AFX_BSTR
AFX\CUTF16.INC|CUTF16.ResizeBuffer|CUTF16.ResizeBuffer(BYVAL nChars AS UINT) AS WSTRING PTR
AFX\CUTF16.INC|CUTF16.AppendBuffer|CUTF16.AppendBuffer(BYVAL memAddr AS ANY PTR, BYVAL nChars AS UINT) AS BOOLEAN
AFX\CUTF16.INC|CUTF16.DelChars|CUTF16.DelChars(BYVAL nIndex AS UINT, BYVAL nCount AS UINT) AS BOOLEAN
AFX\CUTF16.INC|CUTF16.InsertBuffer|CUTF16.InsertBuffer(BYVAL memAddr AS ANY PTR, BYVAL nIndex AS UINT, BYVAL nChars AS UINT) AS BOOLEAN
AFX\CUTF16.INC|CUTF16.Insert|CUTF16.Insert(BYREF ansiStr AS STRING, BYVAL nIndex AS UINT, BYVAL nCodePage AS UINT = 0) AS BOOLEAN
AFX\CUTF16.INC|CUTF16.Insert|CUTF16.Insert(BYVAL pwszStr AS WSTRING PTR, BYVAL nIndex AS UINT) AS BOOLEAN
AFX\CUTF16.INC|CUTF16.Insert|CUTF16.Insert(BYREF cws AS CUTF16, BYVAL nIndex AS UINT) AS BOOLEAN
AFX\CUTF16.INC|CUTF16.Insert|CUTF16.Insert(BYREF cws AS CWSTR, BYVAL nIndex AS UINT) AS BOOLEAN
AFX\CUTF16.INC|CUTF16.Insert|CUTF16.Insert(BYREF cbs AS CBSTR_, BYVAL nIndex AS LONG) AS BOOLEAN
AFX\CUTF16.INC|CUTF16.Clear|
AFX\CUTF16.INC|CUTF16.Add|CUTF16.Add(BYVAL pwszStr AS WSTRING PTR) AS BOOLEAN
AFX\CUTF16.INC|CUTF16.Add|CUTF16.Add(BYREF ansiStr AS STRING, BYVAL nCodePage AS UINT = 0) AS BOOLEAN
AFX\CUTF16.INC|CUTF16.Add|CUTF16.Add(BYREF cws AS CUTF16) AS BOOLEAN
AFX\CUTF16.INC|CUTF16.Add|CUTF16.Add(BYREF cws AS CWSTR) AS BOOLEAN
AFX\CUTF16.INC|CUTF16.Add|CUTF16.Add(BYREF cbs AS CBSTR_) AS BOOLEAN
AFX\CUTF16.INC|CUTF16.LeftChars|CUTF16.LeftChars(BYVAL nChars AS LONG) AS CUTF16
AFX\CUTF16.INC|CUTF16.RightChars|CUTF16.RightChars(BYVAL nChars AS LONG) AS CUTF16
AFX\CUTF16.INC|CUTF16.MidChars|CUTF16.MidChars(BYVAL nStart AS LONG, BYVAL nChars AS LONG = 0) AS CUTF16
AFX\CUTF16.INC|CUTF16.ValLong|CUTF16.ValLong() AS LONG
AFX\CUTF16.INC|CUTF16.ValInt|CUTF16.ValInt() AS LONG
AFX\CUTF16.INC|CUTF16.ValULong|CUTF16.ValULong() AS ULONG
AFX\CUTF16.INC|CUTF16.ValUInt|CUTF16.ValUInt() AS ULONG
AFX\CUTF16.INC|CUTF16.ValLongInt|CUTF16.ValLongInt() AS LONGINT
AFX\CUTF16.INC|CUTF16.ValULongInt|CUTF16.ValULongInt() AS ULONGINT
AFX\CUTF16.INC|CUTF16.ValDouble|CUTF16.ValDouble() AS DOUBLE
AFX\CUTF16.INC|CUTF16.Value|CUTF16.Value() AS DOUBLE
AFX\CUTF16.INC|Left|Left OVERLOAD(BYREF cws AS CUTF16, BYVAL nChars AS INTEGER) AS CUTF16
AFX\CUTF16.INC|Right|Right OVERLOAD(BYREF cws AS CUTF16, BYVAL nChars AS INTEGER) AS CUTF16
AFX\CUTF16.INC|Val|Val OVERLOAD(BYREF cws AS CUTF16) AS DOUBLE
AFX\CVAR.INC|CVar.vptr|CVar.vptr() AS VARIANT PTR
AFX\CVAR.INC|CVar.sptr|CVar.sptr() AS VARIANT PTR
AFX\CVAR.INC|CVar.ToStr|CVar.ToStr() AS CWSTR
AFX\CVAR.INC|CVar.ToWStr|CVar.ToWStr() AS CWSTR
AFX\CVAR.INC|CVar.wstr|CVar.wstr() AS CWSTR
AFX\CVAR.INC|CVar.ToBStr|CVar.ToBStr() AS CBSTR
AFX\CVAR.INC|CVar.bstr|CVar.bstr() AS CBSTR
AFX\CVAR.INC|CVar.ToUtf8|CVar.ToUtf8() AS STRING
AFX\CVAR.INC|CVar.ToBuffer|CVar.ToBuffer(BYVAL pv AS ANY PTR, BYVAL cb AS UINT) AS HRESULT
AFX\CVAR.INC|CVar.ToBuffer|CVar.ToBuffer() AS STRING
AFX\CVAR.INC|CVar.ToUnknown|CVar.ToUnknown() AS ANY PTR
AFX\CVAR.INC|CVar.ToDispatch|CVar.ToDispatch() AS ANY PTR
AFX\CVAR.INC|CVar.DecToDouble|CVar.DecToDouble() AS DOUBLE
AFX\CVAR.INC|CVar.DecToCy|CVar.DecToCy() AS CY
AFX\CVAR.INC|CVar.ToVbDate|CVar.ToVbDate() AS DATE_
AFX\CVAR.INC|CVar.ToSystemTime|CVar.ToSystemTime() AS SYSTEMTIME
AFX\CVAR.INC|CVar.ToGuid|CVar.ToGuid() AS GUID
AFX\CVAR.INC|CVar.ToGuidStr|CVar.ToGuidStr() AS CWSTR
AFX\CVAR.INC|CVar.ToGuidWStr|CVar.ToGuidWStr() AS CWSTR
AFX\CVAR.INC|CVar.ToGuidBStr|CVar.ToGuidBStr() AS CBSTR
AFX\CVAR.INC|CVar.ToDosDateTime|CVar.ToDosDateTime(BYVAL pwDate AS USHORT PTR, BYVAL pwTime AS USHORT PTR) AS HRESULT
AFX\CVAR.INC|CVar.ToFileTime|CVar.ToFileTime(BYVAL stfOut AS AFX_PSTIME_FLAGS) AS FILETIME
AFX\CVAR.INC|CVar.ToStrRet|CVar.ToStrRet() AS STRRET
AFX\CVAR.INC|CVar.ToBooleanArray|CVar.ToBooleanArray(BYVAL prgf AS WINBOOL PTR, BYVAL crgn AS ULONG) AS ULONG
AFX\CVAR.INC|CVar.ToBooleanArrayAlloc|CVar.ToBooleanArrayAlloc(BYVAL pprgf AS WINBOOL PTR PTR) AS ULONG
AFX\CVAR.INC|CVar.ToShortArray|CVar.ToShortArray(BYVAL prgn AS SHORT PTR, BYVAL crgn AS ULONG) AS ULONG
AFX\CVAR.INC|CVar.ToShortArrayAlloc|CVar.ToShortArrayAlloc(BYVAL pprgn AS SHORT PTR PTR) AS ULONG
AFX\CVAR.INC|CVar.ToUShortArray|CVar.ToUShortArray(BYVAL prgn AS USHORT PTR, BYVAL crgn AS ULONG) AS ULONG
AFX\CVAR.INC|CVar.ToUShortArrayAlloc|CVar.ToUShortArrayAlloc(BYVAL pprgn AS USHORT PTR PTR) AS ULONG
AFX\CVAR.INC|CVar.ToLongArray|CVar.ToLongArray(BYVAL prgn AS LONG PTR, BYVAL crgn AS ULONG) AS ULONG
AFX\CVAR.INC|CVar.ToLongArrayAlloc|CVar.ToLongArrayAlloc(BYVAL pprgn AS LONG PTR PTR) AS ULONG
AFX\CVAR.INC|CVar.ToULongArray|CVar.ToULongArray(BYVAL prgn AS ULONG PTR, BYVAL crgn AS ULONG) AS ULONG
AFX\CVAR.INC|CVar.ToULongArrayAlloc|CVar.ToULongArrayAlloc(BYVAL pprgn AS ULONG PTR PTR) AS ULONG
AFX\CVAR.INC|CVar.ToLongIntArray|CVar.ToLongIntArray(BYVAL prgn AS LONGINT PTR, BYVAL crgn AS ULONG) AS ULONG
AFX\CVAR.INC|CVar.ToLongIntArrayAlloc|CVar.ToLongIntArrayAlloc(BYVAL pprgn AS LONGINT PTR PTR) AS ULONG
AFX\CVAR.INC|CVar.ToULongIntArray|CVar.ToULongIntArray(BYVAL prgn AS ULONGINT PTR, BYVAL crgn AS ULONG) AS ULONG
AFX\CVAR.INC|CVar.ToULongIntArrayAlloc|CVar.ToULongIntArrayAlloc(BYVAL pprgn AS ULONGINT PTR PTR) AS ULONG
AFX\CVAR.INC|CVar.ToDoubleArray|CVar.ToDoubleArray(BYVAL prgn AS DOUBLE PTR, BYVAL crgn AS ULONG) AS ULONG
AFX\CVAR.INC|CVar.ToDoubleArrayAlloc|CVar.ToDoubleArrayAlloc(BYVAL pprgn AS DOUBLE PTR PTR) AS ULONG
AFX\CVAR.INC|CVar.ToStringArray|CVar.ToStringArray(BYVAL prgsz AS PWSTR, BYVAL crgsz AS ULONG) AS ULONG
AFX\CVAR.INC|CVar.ToStringArrayAlloc|CVar.ToStringArrayAlloc(BYVAL pprgsz AS PWSTR PTR) AS ULONG
AFX\CVAR.INC|CVar.Put|CVar.Put(BYREF cv AS CVAR) AS HRESULT
AFX\CVAR.INC|CVar.Put|CVar.Put(BYREF v AS VARIANT) AS HRESULT
AFX\CVAR.INC|CVar.Put|CVar.Put(BYREF wszStr AS WSTRING)
AFX\CVAR.INC|CVar.Put|CVar.Put(BYVAL pvar AS VARIANT PTR) As HRESULT
AFX\CVAR.INC|CVar.Put|CVar.Put(BYREF cws AS CWSTR)
AFX\CVAR.INC|CVar.Put|CVar.Put(BYREF cbs AS CBSTR)
AFX\CVAR.INC|CVar.Put|CVar.Put(BYVAL pdisp AS IDispatch PTR, BYVAL fAddRef AS BOOLEAN = FALSE) AS HRESULT
AFX\CVAR.INC|CVar.Put|CVar.Put(BYVAL punk AS IUnknown PTR, BYVAL fAddRef AS BOOLEAN = FALSE) AS HRESULT
AFX\CVAR.INC|CVar.Put|CVar.Put(BYVAL _value AS LONGINT, BYVAL _vType AS WORD)
AFX\CVAR.INC|CVar.Put|CVar.Put(BYVAL _value AS LONGINT, BYREF strType AS STRING)
AFX\CVAR.INC|CVar.Put|CVar.Put(BYVAL _value AS DOUBLE, BYVAL _vType AS WORD = VT_R8)
AFX\CVAR.INC|CVar.Put|CVar.Put(BYVAL _value AS DOUBLE, BYREF strType AS STRING)
AFX\CVAR.INC|CVar.PutRef|CVar.PutRef(BYVAL _pvar AS ANY PTR, BYVAL _vType AS WORD) AS HRESULT
AFX\CVAR.INC|CVar.PutRef|CVar.PutRef(BYVAL _pvar AS ANY PTR, BYREF strType AS STRING) AS HRESULT
AFX\CVAR.INC|CVar.PutNull|
AFX\CVAR.INC|CVar.PutBool|CVar.PutBool(BYVAL _value AS BOOL)
AFX\CVAR.INC|CVar.PutBoolean|CVar.PutBoolean(BYVAL _value AS BOOLEAN)
AFX\CVAR.INC|CVar.PutByte|CVar.PutByte(BYVAL _value AS BYTE)
AFX\CVAR.INC|CVar.PutUByte|CVar.PutUByte(BYVAL _value AS UBYTE)
AFX\CVAR.INC|CVar.PutShort|CVar.PutShort(BYVAL _value AS SHORT)
AFX\CVAR.INC|CVar.PutUShort|CVar.PutUShort(BYVAL _value AS USHORT)
AFX\CVAR.INC|CVar.PutInt|CVar.PutInt(BYVAL _value AS INT_)
AFX\CVAR.INC|CVar.PutUInt|CVar.PutUInt(BYVAL _value AS UINT)
AFX\CVAR.INC|CVar.PutLong|CVar.PutLong(BYVAL _value AS LONG)
AFX\CVAR.INC|CVar.PutULong|CVar.PutULong(BYVAL _value AS ULONG)
AFX\CVAR.INC|CVar.PutLongInt|CVar.PutLongInt(BYVAL _value AS LONGINT)
AFX\CVAR.INC|CVar.PutULongInt|CVar.PutULongInt(BYVAL _value AS ULONGINT)
AFX\CVAR.INC|CVar.PutSingle|CVar.PutSingle(BYVAL _value AS SINGLE)
AFX\CVAR.INC|CVar.PutFloat|CVar.PutFloat(BYVAL _value AS SINGLE)
AFX\CVAR.INC|CVar.PutDouble|CVar.PutDouble(BYVAL _value AS DOUBLE)
AFX\CVAR.INC|CVar.PutBuffer|CVar.PutBuffer(BYVAL pv AS ANY PTR, BYVAL cb AS UINT) AS HRESULT
AFX\CVAR.INC|CVar.PutUtf8|CVar.PutUtf8(BYREF strUtf8 AS STRING) AS HRESULT
AFX\CVAR.INC|CVar.PutSafeArray|CVar.PutSafeArray(BYVAL parray AS SAFEARRAY PTR, BYVAL fAttach AS BOOLEAN = FALSE) AS HRESULT
AFX\CVAR.INC|CVar.PutResource|CVar.PutResource(BYVAL hinst AS HINSTANCE, BYVAL id AS UINT) AS HRESULT
AFX\CVAR.INC|CVar.PutRecord|CVar.PutRecord(BYVAL pIRecordInfo AS IRecordInfo PTR, BYVAL pRec AS ANY PTR) AS HRESULT
AFX\CVAR.INC|CVar.PutDateString|CVar.PutDateString(BYVAL pwszDate AS WSTRING PTR, BYVAL lcid AS LCID = 0, BYVAL dwFlags AS ULONG = 0) AS HRESULT
AFX\CVAR.INC|CVar.PutVbDate|CVar.PutVbDate(BYVAL vbDate AS DATE_) AS HRESULT
AFX\CVAR.INC|CVar.PutSystemTime|CVar.PutSystemTime(BYVAL st AS SYSTEMTIME PTR) AS BOOLEAN
AFX\CVAR.INC|CVar.PutGuid|CVar.PutGuid(BYVAL guid AS IID PTR) AS HRESULT
AFX\CVAR.INC|CVar.PutFileTime|CVar.PutFileTime(BYVAL pft AS FILETIME PTR) AS HRESULT
AFX\CVAR.INC|CVar.PutFileTimeArray|CVar.PutFileTimeArray(BYVAL prgft AS FILETIME PTR, BYVAL cElems AS ULONG) AS HRESULT
AFX\CVAR.INC|CVar.PutStrRet|CVar.PutStrRet(BYVAL pstrret AS STRRET PTR, BYVAL pidl AS PCUITEMID_CHILD) AS HRESULT
AFX\CVAR.INC|CVar.PutDec|CVar.PutDec(BYVAL dec AS DECIMAL) AS HRESULT
AFX\CVAR.INC|CVar.PutDecFromStr|CVar.PutDecFromStr(BYVAL pwszIn AS WSTRING PTR, BYVAL lcid AS LCID = 0, BYVAL dwFlags AS ULONG = 0) AS HRESULT
AFX\CVAR.INC|CVar.PutDecFromDouble|CVar.PutDecFromDouble(BYVAL dbIn AS DOUBLE) AS HRESULT
AFX\CVAR.INC|CVar.PutDecFromCy|CVar.PutDecFromCy(BYVAL cyIn AS CY) AS HRESULT
AFX\CVAR.INC|CVar.PutBooleanArray|CVar.PutBooleanArray(BYVAL prgf AS WINBOOL PTR, BYVAL cElems AS ULONG) AS HRESULT
AFX\CVAR.INC|CVar.PutShortArray|CVar.PutShortArray(BYVAL prgf AS SHORT PTR, BYVAL cElems AS ULONG) AS HRESULT
AFX\CVAR.INC|CVar.PutUShortArray|CVar.PutUShortArray(BYVAL prgf AS USHORT PTR, BYVAL cElems AS ULONG) AS HRESULT
AFX\CVAR.INC|CVar.PutLongArray|CVar.PutLongArray(BYVAL prgn AS LONG PTR, BYVAL cElems AS ULONG) AS CVAR
AFX\CVAR.INC|CVar.PutULongArray|CVar.PutULongArray(BYVAL prgn AS ULONG PTR, BYVAL cElems AS ULONG) AS HRESULT
AFX\CVAR.INC|CVar.PutLongIntArray|CVar.PutLongIntArray(BYVAL prgn AS LONGINT PTR, BYVAL cElems AS ULONG) AS HRESULT
AFX\CVAR.INC|CVar.PutULongIntArray|CVar.PutULongIntArray(BYVAL prgn AS ULONGINT PTR, BYVAL cElems AS ULONG) AS HRESULT
AFX\CVAR.INC|CVar.PutDoubleArray|CVar.PutDoubleArray(BYVAL prgn AS DOUBLE PTR, BYVAL cElems AS ULONG) AS HRESULT
AFX\CVAR.INC|CVar.PutStringArray|CVar.PutStringArray(BYVAL prgsz AS PCWSTR, BYVAL cElems AS ULONG) AS HRESULT
AFX\CVAR.INC|CVar.PutPropVariant|CVar.PutPropVariant(BYVAL pPropVar AS PROPVARIANT PTR) AS HRESULT
AFX\CVAR.INC|CVar.PutVariantArrayElem|CVar.PutVariantArrayElem(BYVAL pvarIn AS VARIANT PTR, BYVAL iElem AS ULONG) AS CVAR
AFX\CVAR.INC|CVar.GetDim|CVar.GetDim() AS ULONG
AFX\CVAR.INC|CVar.GetLBound|CVar.GetLBound(BYVAL nDim AS UINT = 1) AS LONG
AFX\CVAR.INC|CVar.GetUBound|CVar.GetUBound(BYVAL nDim AS UINT = 1) AS LONG
AFX\CVAR.INC|CVar.GetElementCount|CVar.GetElementCount() AS ULONG
AFX\CVAR.INC|CVar.GetVariantElem|CVar.GetVariantElem(BYVAL iElem AS ULONG) AS CVAR
AFX\CVAR.INC|CVar.GetBooleanElem|CVar.GetBooleanElem(BYVAL iElem AS ULONG) AS BOOLEAN
AFX\CVAR.INC|CVar.GetShortElem|CVar.GetShortElem(BYVAL iElem AS ULONG) AS SHORT
AFX\CVAR.INC|CVar.GetUShortElem|CVar.GetUShortElem(BYVAL iElem AS ULONG) AS USHORT
AFX\CVAR.INC|CVar.GetLongElem|CVar.GetLongElem(BYVAL iElem AS ULONG) AS LONG
AFX\CVAR.INC|CVar.GetULongElem|CVar.GetULongElem(BYVAL iElem AS ULONG) AS ULONG
AFX\CVAR.INC|CVar.GetLongIntElem|CVar.GetLongIntElem(BYVAL iElem AS ULONG) AS LONGINT
AFX\CVAR.INC|CVar.GetULongIntElem|CVar.GetULongIntElem(BYVAL iElem AS ULONG) AS ULONGINT
AFX\CVAR.INC|CVar.GetDoubleElem|CVar.GetDoubleElem(BYVAL iElem AS ULONG) AS DOUBLE
AFX\CVAR.INC|CVar.GetStringElem|CVar.GetStringElem(BYVAL iElem AS ULONG) AS CWSTR
AFX\CVAR.INC|CVar.FormatNumber|CVar.FormatNumber(BYVAL iNumDig AS LONG = -1, BYVAL iIncLead AS LONG = -2, BYVAL iUseParens AS LONG = -2, BYVAL iGroup AS LONG = -2, BYVAL dwFlags AS DWORD = 0) AS CWSTR
AFX\CVAR.INC|CVar.Clear|
AFX\CVAR.INC|CVar.Attach|CVar.Attach(BYVAL pvar AS VARIANT PTR) AS HRESULT
AFX\CVAR.INC|CVar.Attach|CVar.Attach(BYREF v AS VARIANT) AS HRESULT
AFX\CVAR.INC|CVar.Detach|CVar.Detach(BYVAL pvar AS VARIANT PTR) AS HRESULT
AFX\CVAR.INC|CVar.Detach|CVar.Detach(BYREF v AS VARIANT) AS HRESULT
AFX\CVAR.INC|CVar.vType|CVar.vType() AS VARTYPE
AFX\CVAR.INC|CVar.ChangeType|CVar.ChangeType(BYVAL vtNew AS VARTYPE, BYVAL wFlags AS USHORT = 0) AS HRESULT
AFX\CVAR.INC|CVar.ChangeTypeEx|CVar.ChangeTypeEx(BYVAL vtNew AS VARTYPE, BYVAL lcid AS LCID = 0, BYVAL wFlags AS USHORT = 0) AS HRESULT
AFX\CVAR.INC|CVar.Round|CVar.Round(BYREF cv AS CVAR, BYVAL cDecimals AS LONG) AS CVAR
AFX\CVAR.INC|CVar.Round|CVar.Round(BYVAL cDecimals AS LONG) AS CVAR
AFX\CVAR.INC|CVar.ValLong|CVar.ValLong() AS LONG
AFX\CVAR.INC|CVar.ValInt|CVar.ValInt() AS LONG
AFX\CVAR.INC|CVar.ValULong|CVar.ValULong() AS ULONG
AFX\CVAR.INC|CVar.ValUInt|CVar.ValUInt() AS ULONG
AFX\CVAR.INC|CVar.ValLongInt|CVar.ValLongInt() AS LONGINT
AFX\CVAR.INC|CVar.ValULongInt|CVar.ValULongInt() AS ULONGINT
AFX\CVAR.INC|CVar.ValDouble|CVar.ValDouble() AS DOUBLE
AFX\CVAR.INC|CVar.Value|CVar.Value() AS DOUBLE
AFX\CVAR.INC|AfxCVarToStr|AfxCVarToStr OVERLOAD(BYREF cv AS CVAR) AS CWSTR
AFX\CVAR.INC|AfxCVarToStr|AfxCVarToStr OVERLOAD(BYVAL pcv AS CVAR PTR) AS CWSTR
AFX\CVAR.INC|AfxCVarOptPrm|AfxCVarOptPrm() AS CVAR
AFX\CVAR.INC|AfxCVariantToBuffer|AfxCVariantToBuffer(BYREF cvIn AS CVAR, BYVAL pv AS LPVOID, BYVAL cb AS ULONG) AS ULONG
AFX\CVAR.INC|Left|Left OVERLOAD(BYREF cv AS CVAR, BYVAL nChars AS INTEGER) AS CWSTR
AFX\CVAR.INC|Right|Right OVERLOAD(BYREF cv AS CVAR, BYVAL nChars AS INTEGER) AS CWSTR
AFX\CVAR.INC|Val|Val OVERLOAD(BYREF cv AS CVAR) AS DOUBLE
AFX\CVAR.INC|AfxMsg|AfxMsg OVERLOAD(BYREF cv AS CVAR, BYREF wszCaption AS WSTRING = "#######", BYVAL uType AS DWORD = 0) AS LONG
AFX\CWINDOW.INC|CScrollWindow.SetClientRect|CScrollWindow.SetClientRect(BYVAL pRect AS RECT PTR)
AFX\CWINDOW.INC|CScrollWindow.SetScrollingUnits|CScrollWindow.SetScrollingUnits(BYVAL nHorzUnits AS LONG, BYVAL nVertUnits AS LONG)
AFX\CWINDOW.INC|CScrollWindow.ResetScrollbars|
AFX\CWINDOW.INC|CScrollWindow.SetupScrollbars|
AFX\CWINDOW.INC|CScrollWindow.OnVScroll|CScrollWindow.OnVScroll(BYVAL wParam AS WPARAM, BYVAL lParam AS LPARAM)
AFX\CWINDOW.INC|CScrollWindow.OnHScroll|CScrollWindow.OnHScroll(BYVAL wParam AS WPARAM, BYVAL lParam AS LPARAM)
AFX\CWINDOW.INC|CScrollWindow.OnSize|CScrollWindow.OnSize(BYVAL wParam AS WPARAM, BYVAL lParam AS LPARAM)
AFX\CWINDOW.INC|CWindow_RegisterClass|CWindow_RegisterClass(BYREF wszClassName AS CONST WSTRING, BYVAL hInstance AS HINSTANCE, BYVAL lpfnWndProc AS WNDPROC) AS ATOM
AFX\CWINDOW.INC|CWindow.DoEvents|CWindow.DoEvents(BYVAL nCmdShow AS LONG = 0) AS LONG
AFX\CWINDOW.INC|CWindow_WindowProc|CWindow_WindowProc(BYVAL hwnd AS HWND, BYVAL uMsg AS UINT, BYVAL wParam AS WPARAM, BYVAL lParam AS LPARAM) AS LRESULT
AFX\CWINDOW.INC|CWindow.Create|CWindow.Create(BYVAL hParent AS HWND = NULL, BYREF wszTitle AS WSTRING = "", BYVAL lpfnWndProc AS WNDPROC = NULL, BYVAL x AS LONG = CW_USEDEFAULT, BYVAL y AS LONG = CW_USEDEFAULT, BYVAL nWidth AS LONG = CW_USEDEFAULT, BYVAL nHeight AS LONG = CW_USEDEFAULT, BYVAL dwStyle AS UINT = WS_OVERLAPPEDWINDOW OR WS_CLIPCHILDREN OR WS_CLIPSIBLINGS, BYVAL dwExStyle AS UINT = WS_EX_CONTROLPARENT OR WS_EX_WINDOWEDGE) AS HWND
AFX\CWINDOW.INC|CWindow.CreateOverlapped|CWindow.CreateOverlapped(BYVAL hParent AS HWND = NULL, BYREF wszTitle AS WSTRING = "", BYVAL lpfnWndProc AS WNDPROC = NULL, BYVAL x AS LONG = CW_USEDEFAULT, BYVAL y AS LONG = CW_USEDEFAULT, BYVAL nWidth AS LONG = CW_USEDEFAULT, BYVAL nHeight AS LONG = CW_USEDEFAULT, BYVAL dwExStyle AS UINT = WS_EX_CONTROLPARENT OR WS_EX_WINDOWEDGE) AS HWND
AFX\CWINDOW.INC|CWindow.SetClientSize|CWindow.SetClientSize(BYVAL nWidth AS LONG, BYVAL nHeight AS LONG)
AFX\CWINDOW.INC|CWindow.Center|CWindow.Center(BYVAL hwnd AS HWND = NULL, BYVAL hwndParent AS HWND = NULL)
AFX\CWINDOW.INC|CWindow.ScaleX|CWindow.ScaleX(BYVAL cx AS SINGLE) AS SINGLE
AFX\CWINDOW.INC|CWindow.ScaleY|CWindow.ScaleY(BYVAL cy AS SINGLE) AS SINGLE
AFX\CWINDOW.INC|CWindow.UnScaleX|CWindow.UnScaleX(BYVAL cx AS SINGLE) AS SINGLE
AFX\CWINDOW.INC|CWindow.UnScaleY|CWindow.UnScaleY(BYVAL cy AS SINGLE) AS SINGLE
AFX\CWINDOW.INC|CWindow.GetWindowRect|CWindow.GetWindowRect OVERLOAD(BYVAL lpRect AS LPRECT)
AFX\CWINDOW.INC|CWindow.GetWindowRect|CWindow.GetWindowRect OVERLOAD() AS RECT
AFX\CWINDOW.INC|CWindow.GetClientRect|CWindow.GetClientRect OVERLOAD(BYVAL lpRect AS LPRECT)
AFX\CWINDOW.INC|CWindow.GetClientRect|CWindow.GetClientRect OVERLOAD() AS RECT
AFX\CWINDOW.INC|CWindow.GetControlWindowRect|CWindow.GetControlWindowRect(BYVAL hwnd AS HWND, BYVAL lpRect AS LPRECT)
AFX\CWINDOW.INC|CWindow.GetControlWindowRect|CWindow.GetControlWindowRect(BYVAL hwnd AS HWND) AS RECT
AFX\CWINDOW.INC|CWindow.GetControlClientRect|CWindow.GetControlClientRect OVERLOAD(BYVAL hwnd AS HWND, BYVAL lpRect AS LPRECT)
AFX\CWINDOW.INC|CWindow.GetControlClientRect|CWindow.GetControlClientRect OVERLOAD(BYVAL hwnd AS HWND) AS RECT
AFX\CWINDOW.INC|CWindow.GetWorkArea|CWindow.GetWorkArea OVERLOAD(BYVAL lpRect AS LPRECT)
AFX\CWINDOW.INC|CWindow.GetWorkArea|CWindow.GetWorkArea OVERLOAD() AS RECT
AFX\CWINDOW.INC|CWindow.ControlHandle|CWindow.ControlHandle(BYVAL cID AS LONG) AS HWND
AFX\CWINDOW.INC|CWindow.Resize|
AFX\CWINDOW.INC|CWindow.SetWindowPos|CWindow.SetWindowPos(BYVAL hwnd AS HWND, BYVAL hwndInsertAfter AS HWND, BYVAL x AS LONG, BYVAL y AS LONG, BYVAL cx AS LONG, BYVAL cy AS LONG, BYVAL uFlags AS UINT) AS BOOLEAN
AFX\CWINDOW.INC|CWindow.MoveWindow|CWindow.MoveWindow(BYVAL hwnd AS HWND, BYVAL x AS LONG, BYVAL y AS LONG, BYVAL nWidth AS LONG, BYVAL nHeight AS LONG, BYVAL bRepaint AS BOOLEAN) AS BOOLEAN
AFX\CWINDOW.INC|CWindow.CreateFont|CWindow.CreateFont( BYREF wszFaceName AS WSTRING, BYVAL lPointSize AS LONG, BYVAL lWeight AS LONG = 0, BYVAL bItalic AS UBYTE = FALSE, BYVAL bUnderline AS UBYTE = FALSE, BYVAL bStrikeOut AS UBYTE = FALSE, BYVAL bCharSet AS UBYTE = DEFAULT_CHARSET ) AS HFONT
AFX\CWINDOW.INC|CWindow.SetFont|CWindow.SetFont( BYREF wszFaceName AS WSTRING, BYVAL lPointSize AS LONG, BYVAL lWeight AS LONG = 0, BYVAL bItalic AS UBYTE = FALSE, BYVAL bUnderline AS UBYTE = FALSE, BYVAL bStrikeOut AS UBYTE = FALSE, BYVAL bCharSet AS UBYTE = DEFAULT_CHARSET ) AS BOOLEAN
AFX\CWINDOW.INC|CWindow.AddControl|CWindow.AddControl( BYREF wszClassName AS WSTRING, BYVAL hParent AS HWND = NULL, BYVAL cID AS LONG_PTR = 0, BYREF wszTitle AS WSTRING = "", BYVAL x AS LONG = 0, BYVAL y AS LONG = 0, BYVAL nWidth AS LONG = 0, BYVAL nHeight AS LONG = 0, BYVAL dwStyle AS LONG = -1, BYVAL dwExStyle AS LONG = -1, BYVAL lpParam AS LONG_PTR = 0, BYVAL pWndProc AS WNDPROC = NULL, BYVAL uIdSubclass AS UINT_PTR = &HFFFFFFFF, BYVAL dwRefData as DWORD_PTR = NULL ) AS HWND
AFX\CWINDOW.INC|CWindow.AddAccelerator|CWindow.AddAccelerator OVERLOAD(BYVAL fvirt AS UBYTE, BYVAL wKey AS WORD, BYVAL cmd AS WORD)
AFX\CWINDOW.INC|CWindow.AddAccelerator|CWindow.AddAccelerator OVERLOAD(BYVAL fvirt AS UBYTE, BYREF wszKey AS WSTRING, BYVAL cmd AS WORD)
AFX\CWINDOW.INC|CWindow.CreateAcceleratorTable|CWindow.CreateAcceleratorTable() AS HACCEL
AFX\CWINDOW.INC|CWindow.DestroyAcceleratorTable|
AFX\CWINDOW.INC|CWindow_RegisterMDIClass|CWindow_RegisterMDIClass(BYREF wsClassName AS WSTRING, BYVAL hInstance AS HINSTANCE, BYVAL lpfnWndProc AS WNDPROC) AS WORD
AFX\CWINDOW.INC|CWindow.CreateMDIWindow|CWindow.CreateMDIWindow( BYVAL cID AS LONG_PTR, BYVAL x AS LONG, BYVAL y AS LONG, BYVAL nWidth AS LONG, BYVAL nHeight AS LONG, BYVAL dwStyle AS DWORD, BYVAL dwExStyle AS DWORD, BYVAL hSubMenu AS HANDLE, BYVAL lpfnWndProc AS WNDPROC ) AS HWND
AFX\CWINDOW.INC|CWindowMDIProc|CWindowMDIProc(BYVAL hwnd AS HWND, BYVAL uMsg AS UINT, BYVAL wParam AS WPARAM, BYVAL lParam AS LPARAM) AS LRESULT
AFX\CWINDOW.INC|CWindow_CloseEnumProc|CWindow_CloseEnumProc( BYVAL hwnd AS HWND, BYVAL lParam AS LPARAM ) AS LONG
AFX\CWINDOW.INC|CTabPage.InsertPage|CTabPage.InsertPage(BYVAL hTab AS HWND, BYVAL nPage AS LONG, BYREF wszTitle AS WSTRING = "", BYVAL nImage AS LONG = -1, BYVAL lpfnWndProc AS WNDPROC = NULL, BYVAL dwStyle AS DWORD = WS_CLIPSIBLINGS OR WS_CLIPCHILDREN, BYVAL dwExStyle AS DWORD = 0) AS HWND
AFX\CWINDOW.INC|AfxResizeTabPages|AfxResizeTabPages(BYVAL hTab AS HWND) AS BOOLEAN
AFX\CWINDOW.INC|AfxDestroyTabPage|AfxDestroyTabPage(BYVAL hTab AS HWND, BYVAL idx AS LONG) AS BOOLEAN
AFX\CWINDOW.INC|AfxDestroyAllTabPages|AfxDestroyAllTabPages(BYVAL hTab AS HWND) AS BOOLEAN
AFX\CWINDOW.INC|AfxCWindowPtr|AfxCWindowPtr OVERLOAD(BYVAL hwnd AS HWND) AS CWindow PTR
AFX\CWINDOW.INC|AfxCWindowPtr|AfxCWindowPtr OVERLOAD(BYVAL lParam AS LPARAM) AS CWindow PTR
AFX\CWINDOW.INC|AfxCWindowPtr|AfxCWindowPtr OVERLOAD(BYVAL pCreateStruct AS CREATESTRUCT PTR) AS CWindow PTR
AFX\CWINDOW.INC|AfxCWindowOwnerPtr|AfxCWindowOwnerPtr OVERLOAD(BYVAL hwnd AS HWND) AS CWindow PTR
AFX\CWINDOW.INC|AfxCTabPagePtr|AfxCTabPagePtr OVERLOAD(BYVAL hTab AS HWND, BYVAL idx AS LONG) AS CTabPage PTR
AFX\CWINDOW.INC|AfxScrollTabPagePtr|AfxScrollTabPagePtr(BYVAL hTab AS HWND, BYVAL idx AS LONG) AS CScrollWindow PTR
AFX\CWINDOW.INC|AfxScrollWindowPtr|AfxScrollWindowPtr(BYVAL hwnd AS HWND) AS CScrollWindow PTR
AFX\CWINDOW.INC|AfxInputBox|AfxInputBox(BYVAL hParent AS HWND = NULL, BYVAL x AS LONG = 0, BYVAL y AS LONG = 0, BYREF cwsCaption AS CWSTR = "", BYREF cwsPrompt AS CWSTR = "", BYREF cwsText AS CWSTR = "", BYVAL nLen AS LONG = 260, BYVAL bPassword AS BOOLEAN = FALSE) AS CWSTR
AFX\CWINDOW.INC|AfxInputBoxWindowProc|AfxInputBoxWindowProc(BYVAL hwnd AS HWND, BYVAL uMsg AS UINT, BYVAL wParam AS WPARAM, BYVAL lParam AS LPARAM) AS LRESULT
AFX\CWINHTTPREQUEST.INC|AfxWinHttpCheckPlatform|AfxWinHttpCheckPlatform() AS BOOLEAN
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.GetLastResult|CWinHttpRequest.GetLastResult() AS HRESULT
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.SetResult|CWinHttpRequest.SetResult(BYVAL Result AS HRESULT) AS HRESULT
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.Open|CWinHttpRequest.Open(BYREF cbsMethod AS CBSTR, BYREF cbsUrl AS CBSTR, BYVAL bAsync AS BOOLEAN = FALSE) AS HRESULT
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.Send|CWinHttpRequest.Send(BYREF cvBody AS CVAR = "") AS HRESULT
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.WaitForResponse|CWinHttpRequest.WaitForResponse(BYVAL nTimeout AS LONG = 0) AS BOOLEAN
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.GetResponseHeader|CWinHttpRequest.GetResponseHeader(BYREF cbsHeader AS CBSTR) AS CBSTR
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.GetAllResponseHeaders|CWinHttpRequest.GetAllResponseHeaders() AS CBSTR
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.GetResponseBody|CWinHttpRequest.GetResponseBody() AS STRING
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.GetResponseStream|CWinHttpRequest.GetResponseStream() AS STRING
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.GetResponseText|CWinHttpRequest.GetResponseText() AS CBSTR
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.SetProxy|CWinHttpRequest.SetProxy(BYVAL ProxySetting AS HTTPREQUEST_PROXY_SETTING, BYREF cvProxyServer AS CVAR = "", BYVAL cvBypassList AS CVAR = "") AS HRESULT
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.SetCredentials|CWinHttpRequest.SetCredentials(BYREF cbsUserName AS CBSTR, BYREF cbsPassword AS CBSTR, BYVAL Flags AS HTTPREQUEST_SETCREDENTIALS_FLAGS) AS HRESULT
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.SetRequestHeader|CWinHttpRequest.SetRequestHeader(BYREF cbsHeader AS CBSTR, BYREF cbsValue AS CBSTR) AS HRESULT
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.GetStatus|CWinHttpRequest.GetStatus() AS LONG
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.GetStatusText|CWinHttpRequest.GetStatusText() AS CBSTR
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.Abort|CWinHttpRequest.Abort() AS HRESULT
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.SetTimeouts|CWinHttpRequest.SetTimeouts(BYVAL ResolveTimeout AS LONG, BYVAL ConnectTimeout AS LONG, BYVAL SendTimeout AS LONG, BYVAL ReceiveTimeout AS LONG) AS HRESULT
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.SetClientCertificate|CWinHttpRequest.SetClientCertificate(BYREF cbsClientCertificate AS CBSTR) AS HRESULT
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.SetAutoLogonPolicy|CWinHttpRequest.SetAutoLogonPolicy(BYVAL AutoLogonPolicy AS WinHttpRequestAutoLogonPolicy) AS HRESULT
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.GetOption|CWinHttpRequest.GetOption(BYVAL nOption AS WinHttpRequestOption) AS CVAR
AFX\CWINHTTPREQUEST.INC|CWinHttpRequest.SetOption|CWinHttpRequest.SetOption(BYVAL nOption AS WinHttpRequestOption, BYREF cvValue AS CVAR) AS HRESULT
AFX\CWMIDISP.INC|AfxWmiGetErrorCodeText|AfxWmiGetErrorCodeText(BYVAL hRes AS HRESULT) AS CBSTR
AFX\CWMIDISP.INC|AfxWmiGetFacilityCodeText|AfxWmiGetFacilityCodeText(BYVAL hRes AS LONG) AS CBSTR
AFX\CWMIDISP.INC|AfxWmiTimeToFileTime|AfxWmiTimeToFileTime(BYVAL pwszDateTime AS WSTRING PTR, BYVAL bIsLocal AS BOOLEAN = TRUE) AS FILETIME
AFX\CWMIDISP.INC|AfxWmiTimeToDateStr|AfxWmiTimeToDateStr(BYVAL pwszDateTime AS WSTRING PTR, BYREF wszMask AS WSTRING, BYVAL bIsLocal AS BOOLEAN = TRUE, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CBSTR
AFX\CWMIDISP.INC|AfxWmiTimeToTimeStr|AfxWmiTimeToTimeStr(BYVAL pwszDateTime AS WSTRING PTR, BYREF wszMask AS WSTRING, BYVAL bIsLocal AS BOOLEAN = TRUE, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CBSTR
AFX\CWMIDISP.INC|CWmiServices.GetLastResult|CWmiServices.GetLastResult() AS HRESULT
AFX\CWMIDISP.INC|CWmiServices.SetResult|CWmiServices.SetResult(BYVAL Result AS HRESULT) AS HRESULT
AFX\CWMIDISP.INC|CWmiServices.GetErrorCodeText|CWmiServices.GetErrorCodeText() AS CBSTR
AFX\CWMIDISP.INC|CWmiServices.GetFacilityCodeText|CWmiServices.GetFacilityCodeText() AS CBSTR
AFX\CWMIDISP.INC|CWmiServices.ServicesPtr|CWmiServices.ServicesPtr() AS IDispatch PTR
AFX\CWMIDISP.INC|CWmiServices.ServicesObj|CWmiServices.ServicesObj() AS IDispatch PTR
AFX\CWMIDISP.INC|CWmiServices.ObjectSetPtr|CWmiServices.ObjectSetPtr() AS IDispatch PTR
AFX\CWMIDISP.INC|CWmiServices.PropertySetPtr|CWmiServices.PropertySetPtr() AS IDispatch PTR
AFX\CWMIDISP.INC|CWmiServices.WmiTimeToFileTime|CWmiServices.WmiTimeToFileTime(BYREF cbsDateTime AS CBSTR, BYVAL bIsLocal AS BOOLEAN = TRUE) AS FILETIME
AFX\CWMIDISP.INC|CWmiServices.WmiDateToStr|CWmiServices.WmiDateToStr(BYREF cbsDateTime AS CBSTR, BYREF wszMask AS WSTRING, BYVAL bIsLocal AS BOOLEAN = TRUE, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CBSTR
AFX\CWMIDISP.INC|CWmiServices.WmiDateToStr|CWmiServices.WmiDateToStr(BYREF cvDateTime AS CVAR, BYREF wszMask AS WSTRING, BYVAL bIsLocal AS BOOLEAN = TRUE, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CBSTR
AFX\CWMIDISP.INC|CWmiServices.WmiTimeToStr|CWmiServices.WmiTimeToStr(BYREF cbsDateTime AS CBSTR, BYREF wszMask AS WSTRING, BYVAL bIsLocal AS BOOLEAN = TRUE, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CBSTR
AFX\CWMIDISP.INC|CWmiServices.WmiTimeToStr|CWmiServices.WmiTimeToStr(BYREF cvDateTime AS CVAR, BYREF wszMask AS WSTRING, BYVAL bIsLocal AS BOOLEAN = TRUE, BYVAL lcid AS LCID = LOCALE_USER_DEFAULT) AS CBSTR
AFX\CWMIDISP.INC|CWmiServices.ObjectsCount|CWmiServices.ObjectsCount() AS LONG
AFX\CWMIDISP.INC|CWmiServices.NewEnum|CWmiServices.NewEnum() AS BOOLEAN
AFX\CWMIDISP.INC|CWmiServices.ResetEnum|CWmiServices.ResetEnum() AS BOOLEAN
AFX\CWMIDISP.INC|CWmiServices.NextObject|CWmiServices.NextObject() AS CVAR
AFX\CWMIDISP.INC|CWmiServices.GetNamedProperties|CWmiServices.GetNamedProperties(BYVAL idx AS LONG = 0) AS HRESULT
AFX\CWMIDISP.INC|CWmiServices.ExecQuery|CWmiServices.ExecQuery(BYREF cbsQuery AS CBSTR, BYVAL iFlags AS LONG = wbemFlagReturnWhenComplete) AS HRESULT
AFX\CWMIDISP.INC|CWmiServices.InstancesOf|CWmiServices.InstancesOf(BYREF cbsClass AS CBSTR, BYVAL iFlags AS LONG = wbemFlagReturnImmediately) AS HRESULT
AFX\CWMIDISP.INC|CWmiServices.Get|CWmiServices.Get(BYREF cbsObjectPath AS CBSTR, BYVAL iFlags AS LONG = 0, BYVAL objWbemNamedValueSet AS Afx_IDispatch PTR = NULL) AS HRESULT
AFX\CWMIDISP.INC|CWmiServices.PropsCount|CWmiServices.PropsCount() AS LONG
AFX\CWSTR.INC|AfxIsBstr|AfxIsBstr(BYVAL pv aS ANY PTR) AS BOOLEAN
AFX\CWSTR.INC|CWstr.vptr|CWstr.vptr() AS WSTRING PTR
AFX\CWSTR.INC|CWstr.sptr|CWstr.sptr() AS WSTRING PTR
AFX\CWSTR.INC|CWstr.wstr|CWstr.wstr() BYREF AS CONST WSTRING
AFX\CWSTR.INC|CWstr.ResizeBuffer|CWstr.ResizeBuffer(BYVAL nValue AS UINT, BYVAL bClear AS BOOLEAN = FALSE)
AFX\CWSTR.INC|CWstr.AppendBuffer|CWstr.AppendBuffer(BYVAL addrMemory AS ANY PTR, BYVAL nNumBytes AS UINT) AS BOOLEAN
AFX\CWSTR.INC|CWstr.Add|CWstr.Add(BYREF cws AS CWSTR)
AFX\CWSTR.INC|CWstr.Add|CWstr.Add(BYREF cbs AS CBSTR_)
AFX\CWSTR.INC|CWstr.Add|CWstr.Add(BYVAL pwszStr AS WSTRING PTR)
AFX\CWSTR.INC|CWstr.Add|CWstr.Add(BYREF ansiStr AS STRING, BYVAL nCodePage AS UINT = 0)
AFX\CWSTR.INC|CWstr.Clear|
AFX\CWSTR.INC|CWstr.Resize|CWstr.Resize(BYVAL nSize AS UINT, BYREF ch AS WSTRING = "")
AFX\CWSTR.INC|CWstr.DelChars|CWstr.DelChars(BYVAL nIndex AS UINT, BYVAL nCount AS UINT) AS BOOLEAN
AFX\CWSTR.INC|CWstr.InsertBuffer|CWstr.InsertBuffer(BYVAL addrMemory AS ANY PTR, BYVAL nIndex AS UINT, BYVAL nNumBytes AS UINT) AS BOOLEAN
AFX\CWSTR.INC|CWstr.Insert|CWstr.Insert(BYREF cws AS CWSTR, BYVAL nIndex AS UINT) AS BOOLEAN
AFX\CWSTR.INC|CWstr.Insert|CWstr.Insert(BYREF cbs AS CBSTR_, BYVAL nIndex AS LONG) AS BOOLEAN
AFX\CWSTR.INC|CWstr.Insert|CWstr.Insert(BYVAL pwszStr AS WSTRING PTR, BYVAL nIndex AS UINT) AS BOOLEAN
AFX\CWSTR.INC|CWstr.Insert|CWstr.Insert(BYREF ansiStr AS STRING, BYVAL nIndex AS UINT, BYVAL nCodePage AS UINT = 0) AS BOOLEAN
AFX\CWSTR.INC|CWStr.LeftChars|CWStr.LeftChars(BYVAL nChars AS LONG) AS CWSTR
AFX\CWSTR.INC|CWStr.RightChars|CWStr.RightChars(BYVAL nChars AS LONG) AS CWSTR
AFX\CWSTR.INC|CWStr.MidChars|CWStr.MidChars(BYVAL nStart AS LONG, BYVAL nChars AS LONG = 0) AS CWSTR
AFX\CWSTR.INC|CWStr.ValLong|CWStr.ValLong() AS LONG
AFX\CWSTR.INC|CWStr.ValInt|CWStr.ValInt() AS LONG
AFX\CWSTR.INC|CWStr.ValULong|CWStr.ValULong() AS ULONG
AFX\CWSTR.INC|CWStr.ValUInt|CWStr.ValUInt() AS ULONG
AFX\CWSTR.INC|CWStr.ValLongInt|CWStr.ValLongInt() AS LONGINT
AFX\CWSTR.INC|CWStr.ValULongInt|CWStr.ValULongInt() AS ULONGINT
AFX\CWSTR.INC|CWStr.ValDouble|CWStr.ValDouble() AS DOUBLE
AFX\CWSTR.INC|CWStr.Value|CWStr.Value() AS DOUBLE
AFX\CWSTR.INC|CWStr.cbstr|CWStr.cbstr() AS CBStr_
AFX\CWSTR.INC|CWStr.bstr|CWStr.bstr() AS AFX_BSTR
AFX\CWSTR.INC|CWStr.wchar|CWStr.wchar() AS WSTRING PTR
AFX\CWSTR.INC|CBStr.bptr|CBStr.bptr() AS AFX_BSTR
AFX\CWSTR.INC|CBStr.vptr|CBStr.vptr() AS AFX_BSTR PTR
AFX\CWSTR.INC|CBStr.sptr|CBStr.sptr() AS WSTRING PTR
AFX\CWSTR.INC|CBStr.wstr|CBStr.wstr() BYREF AS CONST WSTRING
AFX\CWSTR.INC|CBStr.wchar|CBStr.wchar() AS WSTRING PTR
AFX\CWSTR.INC|CBStr.Append|CBStr.Append(BYREF wszStr AS CONST WSTRING)
AFX\CWSTR.INC|CBstr.Empty|
AFX\CWSTR.INC|CBstr.Clear|
AFX\CWSTR.INC|CBstr.Attach|CBstr.Attach(BYVAL pbstrSrc AS AFX_BSTR)
AFX\CWSTR.INC|CBstr.Detach|CBstr.Detach() AS AFX_BSTR
AFX\CWSTR.INC|CBStr.Copy|CBStr.Copy() AS AFX_BSTR
AFX\CWSTR.INC|CBStr.LeftChars|CBStr.LeftChars(BYVAL nChars AS LONG) AS CBSTR
AFX\CWSTR.INC|CBStr.RightChars|CBStr.RightChars(BYVAL nChars AS LONG) AS CBSTR
AFX\CWSTR.INC|CBStr.MidChars|CBStr.MidChars(BYVAL nStart AS LONG, BYVAL nChars AS LONG = 0) AS CBSTR
AFX\CWSTR.INC|CBStr.ValLong|CBStr.ValLong() AS LONG
AFX\CWSTR.INC|CBStr.ValInt|CBStr.ValInt() AS LONG
AFX\CWSTR.INC|CBStr.ValULong|CBStr.ValULong() AS ULONG
AFX\CWSTR.INC|CBStr.ValUInt|CBStr.ValUInt() AS ULONG
AFX\CWSTR.INC|CBStr.ValLongInt|CBStr.ValLongInt() AS LONGINT
AFX\CWSTR.INC|CBStr.ValULongInt|CBStr.ValULongInt() AS ULONGINT
AFX\CWSTR.INC|CBStr.ValDouble|CBStr.ValDouble() AS DOUBLE
AFX\CWSTR.INC|CBStr.Value|CBStr.Value() AS DOUBLE
AFX\CWSTR.INC|Left|Left OVERLOAD(BYREF cws AS CWSTR, BYVAL nChars AS INTEGER) AS CWSTR
AFX\CWSTR.INC|Right|Right OVERLOAD(BYREF cws AS CWSTR, BYVAL nChars AS INTEGER) AS CWSTR
AFX\CWSTR.INC|Val|Val OVERLOAD(BYREF cws AS CWSTR) AS DOUBLE
AFX\CWSTR.INC|ValLng|ValLng OVERLOAD(BYREF cws AS CWSTR) AS LONG
AFX\CWSTR.INC|ValInt|ValInt OVERLOAD(BYREF cws AS CWSTR) AS LONG
AFX\CWSTR.INC|ValULng|ValULng OVERLOAD(BYREF cws AS CWSTR) AS ULONG
AFX\CWSTR.INC|ValUInt|ValUInt OVERLOAD(BYREF cws AS CWSTR) AS ULONG
AFX\CWSTR.INC|ValLongInt|ValLongInt OVERLOAD(BYREF cws AS CWSTR) AS LONGINT
AFX\CWSTR.INC|ValULongInt|ValULongInt OVERLOAD(BYREF cws AS CWSTR) AS ULONGINT
AFX\CWSTR.INC|Left|Left OVERLOAD(BYREF cbs AS CBSTR, BYVAL nChars AS INTEGER) AS CBSTR
AFX\CWSTR.INC|Right|Right OVERLOAD(BYREF cbs AS CBSTR, BYVAL nChars AS INTEGER) AS CBSTR
AFX\CWSTR.INC|Val|Val OVERLOAD(BYREF cbs AS CBSTR) AS DOUBLE
AFX\CWSTR.INC|ValLng|ValLng OVERLOAD(BYREF cbs AS CBSTR) AS LONG
AFX\CWSTR.INC|ValInt|ValInt OVERLOAD(BYREF cbs AS CBSTR) AS LONG
AFX\CWSTR.INC|ValULng|ValULng OVERLOAD(BYREF cbs AS CBSTR) AS ULONG
AFX\CWSTR.INC|ValUInt|ValUInt OVERLOAD(BYREF cbs AS CBSTR) AS ULONG
AFX\CWSTR.INC|ValLongInt|ValLongInt OVERLOAD(BYREF cbs AS CBSTR) AS LONGINT
AFX\CWSTR.INC|ValULongInt|ValULongInt OVERLOAD(BYREF cbs AS CBSTR) AS ULONGINT
AFX\CWSTR.INC|AfxCWstrArrayCompare|AfxCWstrArrayCompare CDECL(BYVAL a AS CWSTR PTR, BYVAL b AS CWSTR PTR) AS LONG
AFX\CWSTR.INC|AfxCWStrArrayReverseCompare|AfxCWStrArrayReverseCompare CDECL(BYVAL a AS CWSTR PTR, BYVAL b AS CWSTR PTR) AS LONG
AFX\CWSTR.INC|AfxCWstrSort|AfxCWstrSort(BYREF rgwstr AS ANY PTR, BYVAL numElm AS LONG, BYVAL bAscend AS BOOLEAN = TRUE)
AFX\CWSTR.INC|AfxCWstrArraySort|AfxCWstrArraySort(rgwstr() AS CWSTR, BYVAL bAscend AS BOOLEAN = TRUE)
AFX\CWSTR.INC|AfxCWstrArrayAppend|AfxCWstrArrayAppend(rgwstr() AS CWSTR, BYREF cws AS CWSTR) AS BOOLEAN
AFX\CWSTR.INC|AfxCWstrArrayInsert|AfxCWstrArrayInsert(rgwstr() AS CWSTR, BYVAL nPos AS LONG, BYREF cws AS CWSTR) AS BOOLEAN
AFX\CWSTR.INC|AfxCWstrArrayRemove|AfxCWstrArrayRemove(rgwstr() AS CWSTR, BYVAL nPos AS LONG) AS BOOLEAN
AFX\CWSTR.INC|AfxCWstrArrayRemoveFirst|AfxCWstrArrayRemoveFirst(rgwstr() AS CWSTR) AS BOOLEAN
AFX\CWSTR.INC|AfxCWstrArrayRemoveLast|AfxCWstrArrayRemoveLast(rgwstr() AS CWSTR) AS BOOLEAN
AFX\CXPBUTTON.INC|CXpButton.CXPButtonProc|CXpButton.CXPButtonProc(BYVAL hwnd AS HWND, BYVAL uMsg AS UINT, BYVAL wParam AS WPARAM, BYVAL lParam AS LPARAM) AS LRESULT
AFX\CXPBUTTON.INC|CXpButton.hWindow|CXpButton.hWindow() AS HWND
AFX\CXPBUTTON.INC|CXpButton.Redraw|
AFX\CXPBUTTON.INC|CXpButton.SetFont|CXpButton.SetFont(BYVAL hFont AS HFONT, BYVAL fRedraw AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.GetFont|CXpButton.GetFont() AS HFONT
AFX\CXPBUTTON.INC|CXpButton.SetTextFormat|CXpButton.SetTextFormat(BYVAL dwTextFlags AS DWORD, BYVAL fRedraw AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.GetTextFormat|CXpButton.GetTextFormat() AS DWORD
AFX\CXPBUTTON.INC|CXpButton.SetCursor|CXpButton.SetCursor(BYVAL hCursor AS HCURSOR)
AFX\CXPBUTTON.INC|CXpButton.GetCursor|CXpButton.GetCursor() AS HCURSOR
AFX\CXPBUTTON.INC|CXpButton.SetToggle|CXpButton.SetToggle(BYVAL fToggle AS LONG, BYVAL fRedraw AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.GetToggle|CXpButton.GetToggle() AS LONG
AFX\CXPBUTTON.INC|CXpButton.SetToggleState|CXpButton.SetToggleState(BYVAL fState AS LONG, BYVAL fRedraw AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.GetToggleState|CXpButton.GetToggleState() AS LONG
AFX\CXPBUTTON.INC|CXpButton.SetImageSize|CXpButton.SetImageSize(BYVAL nWidth AS LONG, BYVAL nHeight AS LONG, BYVAL fRedraw AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.SetImageWidth|CXpButton.SetImageWidth(BYVAL nWidth AS LONG, BYVAL fRedraw AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.GetImageWidth|CXpButton.GetImageWidth() AS LONG
AFX\CXPBUTTON.INC|CXpButton.SetImageHeight|CXpButton.SetImageHeight(BYVAL nHeight AS LONG, BYVAL fRedraw AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.GetImageHeight|CXpButton.GetImageHeight() AS LONG
AFX\CXPBUTTON.INC|CXpButton.SetImagePos|CXpButton.SetImagePos(BYVAL nPos AS LONG, BYVAL fRedraw AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.GetImagePos|CXpButton.GetImagePos() AS LONG
AFX\CXPBUTTON.INC|CXpButton.SetImageMargin|CXpButton.SetImageMargin(BYVAL nMargin AS LONG, BYVAL fRedraw AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.GetImageMargin|CXpButton.GetImageMargin() AS LONG
AFX\CXPBUTTON.INC|CXpButton.SetTextMargin|CXpButton.SetTextMargin(BYVAL nMargin AS LONG, BYVAL fRedraw AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.GetTextMargin|CXpButton.GetTextMargin() AS LONG
AFX\CXPBUTTON.INC|CXpButton.GetButtonState|CXpButton.GetButtonState() AS LONG
AFX\CXPBUTTON.INC|CXpButton.GetImageType|CXpButton.GetImageType() AS LONG
AFX\CXPBUTTON.INC|CXpButton.IsThemed|CXpButton.IsThemed() AS LONG
AFX\CXPBUTTON.INC|CXpButton.EnableTheming|
AFX\CXPBUTTON.INC|CXpButton.DisableTheming|
AFX\CXPBUTTON.INC|CXpButton.GetImage|CXpButton.GetImage(BYVAL ImageState AS LONG) AS HANDLE
AFX\CXPBUTTON.INC|CXpButton.UxDrawPushButton|CXpButton.UxDrawPushButton(BYVAL hDC AS HDC)
AFX\CXPBUTTON.INC|CXpButton.SetImage|CXpButton.SetImage(BYVAL hImage AS HANDLE, BYVAL nImageType AS LONG, BYVAL nImageState AS LONG, BYVAL fRedraw AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.SetIcon|CXpButton.SetIcon(BYVAL hIcon AS HICON, BYVAL ImageState AS LONG, BYVAL fRedraw AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.SetBitmap|CXpButton.SetBitmap(BYVAL hBitmap AS HBITMAP, BYVAL ImageState AS LONG, BYVAL fRedraw AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.SetIconFromFile|CXpButton.SetIconFromFile(BYVAL pwszPath AS WSTRING PTR, BYVAL ImageState AS LONG, BYVAL fRedraw AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.SetBitmapFromFile|CXpButton.SetBitmapFromFile(BYVAL pwszPath AS WSTRING PTR, BYVAL ImageState AS LONG, BYVAL fRedraw AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.SetImageFromFile|CXpButton.SetImageFromFile(BYREF wszPath AS WSTRING, BYVAL ImageState AS LONG = XPBI_NORMAL, BYVAL fRedraw AS LONG = FALSE, BYVAL dimPercent AS LONG = 0, BYVAL bGrayScale AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.SetImageFromRes|CXpButton.SetImageFromRes(BYVAL hInstance AS HINSTANCE, BYREF wszImageName AS WSTRING, BYVAL ImageState AS LONG = XPBI_NORMAL, BYVAL fRedraw AS LONG = FALSE, BYVAL dimPercent AS LONG = 0, BYVAL bGrayScale AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.SetButtonBkColor|CXpButton.SetButtonBkColor(BYVAL bkColor AS COLORREF, BYVAL fRedraw AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.GetButtonBkColor|CXpButton.GetButtonBkColor() AS COLORREF
AFX\CXPBUTTON.INC|CXpButton.SetTextForeColor|CXpButton.SetTextForeColor(BYVAL textColor AS COLORREF, BYVAL fRedraw AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.GetTextForeColor|CXpButton.GetTextForeColor() AS COLORREF
AFX\CXPBUTTON.INC|CXpButton.SetTextBkColor|CXpButton.SetTextBkColor(BYVAL textColor AS COLORREF, BYVAL fRedraw AS LONG = FALSE)
AFX\CXPBUTTON.INC|CXpButton.GetTextBkColor|CXpButton.GetTextBkColor() AS COLORREF
AFX\CXPBUTTON.INC|CXpButton.SetTextForeColorDown|CXpButton.SetTextForeColorDown(BYVAL textColor AS COLORREF)
AFX\CXPBUTTON.INC|CXpButton.GetTextForeColorDown|CXpButton.GetTextForeColorDown() AS COLORREF
AFX\CXPBUTTON.INC|CXpButton.SetTextBkColorDown|CXpButton.SetTextBkColorDown(BYVAL textColor AS COLORREF)
AFX\CXPBUTTON.INC|CXpButton.GetTextBkColorDown|CXpButton.GetTextBkColorDown() AS COLORREF
AFX\DWSTRING.BI|DWSTRING.wstr|DWSTRING.wstr() BYREF AS CONST WSTRING
AFX\DWSTRING.BI|DWSTRING.vptr|DWSTRING.vptr() AS WSTRING PTR
AFX\DWSTRING.BI|DWSTRING.sptr|DWSTRING.sptr() AS WSTRING PTR
AFX\DWSTRING.BI|DWSTRING.ResizeBuffer|DWSTRING.ResizeBuffer(BYVAL nChars AS UINT, BYVAL bClear AS BOOLEAN = FALSE) AS WSTRING PTR
AFX\DWSTRING.BI|DWSTRING.AppendBuffer|DWSTRING.AppendBuffer(BYVAL memAddr AS ANY PTR, BYVAL nChars AS UINT) AS BOOLEAN
AFX\DWSTRING.BI|DWSTRING.DelChars|DWSTRING.DelChars(BYVAL nIndex AS UINT, BYVAL nCount AS UINT) AS BOOLEAN
AFX\DWSTRING.BI|DWSTRING.InsertBuffer|DWSTRING.InsertBuffer(BYVAL memAddr AS ANY PTR, BYVAL nIndex AS UINT, BYVAL nChars AS UINT) AS BOOLEAN
AFX\DWSTRING.BI|DWSTRING.Insert|DWSTRING.Insert(BYREF ansiStr AS STRING, BYVAL nIndex AS UINT, BYVAL nCodePage AS UINT = 0) AS BOOLEAN
AFX\DWSTRING.BI|DWSTRING.Insert|DWSTRING.Insert(BYVAL pwszStr AS WSTRING PTR, BYVAL nIndex AS UINT) AS BOOLEAN
AFX\DWSTRING.BI|DWSTRING.Insert|DWSTRING.Insert(BYREF dws AS DWSTRING, BYVAL nIndex AS UINT) AS BOOLEAN
AFX\DWSTRING.BI|DWSTRING.Clear|
AFX\DWSTRING.BI|DWSTRING.Add|DWSTRING.Add(BYVAL pwszStr AS WSTRING PTR) AS BOOLEAN
AFX\DWSTRING.BI|DWSTRING.Add|DWSTRING.Add(BYREF ansiStr AS STRING, BYVAL nCodePage AS UINT = 0) AS BOOLEAN
AFX\DWSTRING.BI|DWSTRING.Add|DWSTRING.Add(BYREF dws AS DWSTRING) AS BOOLEAN
AFX\DWSTRING.BI|Left|Left OVERLOAD(BYREF dws AS DWSTRING, BYVAL nChars AS INTEGER) AS DWSTRING
AFX\DWSTRING.BI|Right|Right OVERLOAD(BYREF dws AS DWSTRING, BYVAL nChars AS INTEGER) AS DWSTRING
AFX\DWSTRING.BI|Val|Val OVERLOAD(BYREF dws AS DWSTRING) AS DOUBLE
AFX\DWSTRING.BI|ValLng|ValLng OVERLOAD(BYREF dws AS DWSTRING) AS LONG
AFX\DWSTRING.BI|ValInt|ValInt OVERLOAD(BYREF dws AS DWSTRING) AS LONG
AFX\DWSTRING.BI|ValULng|ValULng OVERLOAD(BYREF dws AS DWSTRING) AS ULONG
AFX\DWSTRING.BI|ValUInt|ValUInt OVERLOAD(BYREF dws AS DWSTRING) AS ULONG
AFX\DWSTRING.BI|ValLongInt|ValLongInt OVERLOAD(BYREF dws AS DWSTRING) AS LONGINT
AFX\DWSTRING.BI|ValULongInt|ValULongInt OVERLOAD(BYREF dws AS DWSTRING) AS ULONGINT
AFX\DWSTRING.BI|DWStringArrayCompare|DWStringArrayCompare CDECL(BYVAL a AS DWSTRING PTR, BYVAL b AS DWSTRING PTR) AS LONG
AFX\DWSTRING.BI|DWStringArrayReverseCompare|DWStringArrayReverseCompare CDECL(BYVAL a AS DWSTRING PTR, BYVAL b AS DWSTRING PTR) AS LONG
AFX\DWSTRING.BI|DWStringSort|DWStringSort(BYREF rgwstr AS ANY PTR, BYVAL numElm AS LONG, BYVAL bAscend AS BOOLEAN = TRUE)
AFX\DWSTRING.BI|DWStringArraySort|DWStringArraySort(rgwstr() AS DWSTRING, BYVAL bAscend AS BOOLEAN = TRUE)
AFX\DWSTRPROCS.BI|DWStrRemove|DWStrRemove OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrRemoveI|DWStrRemoveI(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrRemove|DWStrRemove OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYREF wszDelim1 AS CONST WSTRING, BYREF wszDelim2 AS CONST WSTRING, BYVAL fRemoveAll AS BOOLEAN = FALSE) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrRemove|DWStrRemove OVERLOAD(BYVAL nStart AS LONG = 1, BYREF wszMainStr AS CONST WSTRING, BYREF wszDelim1 AS CONST WSTRING, BYREF wszDelim2 AS CONST WSTRING, BYVAL fRemoveAll AS BOOLEAN = FALSE) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrRemoveAny|DWStrRemoveAny(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrRemoveAnyI|DWStrRemoveAnyI(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrReplace|DWStrReplace OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING, BYREF wszReplaceWith AS WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrReplaceI|DWStrReplaceI(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING, BYREF wszReplaceWith AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrReplaceAny|DWStrReplaceAny(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING, BYREF wszReplaceWith AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrReplaceAnyI|DWStrReplaceAnyI(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING, BYREF wszReplaceWith AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrReverse|DWStrReverse(BYREF wszMainStr AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrExtract|DWStrExtract OVERLOAD(BYVAL nStart AS LONG = 1, BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrExtractI|DWStrExtractI(BYVAL nStart AS LONG = 1, BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrExtract|DWStrExtract OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYREF wszDelim1 AS CONST WSTRING, BYREF wszDelim2 AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrExtract|DWStrExtract OVERLOAD(BYVAL nStart AS LONG = 1, BYREF wszMainStr AS CONST WSTRING, BYREF wszDelim1 AS CONST WSTRING, BYREF wszDelim2 AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrExtractAny|DWStrExtractAny(BYVAL nStart AS LONG = 1, BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrExtractAnyI|DWStrExtractAnyI(BYVAL nStart AS LONG = 1, BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrRemain|DWStrRemain(BYREF wszMainStr AS WSTRING, BYREF wszMatchStr AS CONST WSTRING, BYVAL nStart AS LONG = 1) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrRemainI|DWStrRemainI(BYREF wszMainStr AS WSTRING, BYREF wszMatchStr AS CONST WSTRING, BYVAL nStart AS LONG = 1) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrRemainAny|DWStrRemainAny(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS WSTRING, BYVAL nStart AS LONG = 1) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrRemainAnyI|DWStrRemainAnyI(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING, BYVAL nStart AS LONG = 1) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrTally|DWStrTally(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS LONG
AFX\DWSTRPROCS.BI|DWStrTallyI|DWStrTallyI(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS LONG
AFX\DWSTRPROCS.BI|DWStrTallyAny|DWStrTallyAny(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS LONG
AFX\DWSTRPROCS.BI|DWStrTallyAnyI|DWStrTallyAnyI(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS LONG
AFX\DWSTRPROCS.BI|DWStrVerify|DWStrVerify(BYVAL nStart AS LONG, BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS LONG
AFX\DWSTRPROCS.BI|DWStrVerifyI|DWStrVerifyI(BYVAL nStart AS LONG, BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS LONG
AFX\DWSTRPROCS.BI|DWStrLSet|DWStrLSet(BYREF wszMainStr AS CONST WSTRING, BYVAL nStringLength AS LONG, BYREF wszPadCharacter AS CONST WSTRING = "#") AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrRSet|DWStrRSet(BYREF wszMainStr AS CONST WSTRING, BYVAL nStringLength AS LONG, BYREF wszPadCharacter AS CONST WSTRING = "#") AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrCSet|DWStrCSet(BYREF wszMainStr AS CONST WSTRING, BYVAL nStringLength AS LONG, BYREF wszPadCharacter AS CONST WSTRING = "#") AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrPathName|DWStrPathName(BYREF wszOption AS CONST WSTRING, BYREF wszFileSpec AS WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrRepeat|DWStrRepeat(BYVAL nCount AS LONG, BYREF wszMainStr AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrClipLeft|DWStrClipLeft(BYREF wszMainStr AS CONST WSTRING, BYVAL nCount AS LONG) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrClipRight|DWStrClipRight(BYREF wszMainStr AS CONST WSTRING, BYVAL nCount AS LONG) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrClipMid|DWStrClipMid(BYREF wszMainStr AS CONST WSTRING, BYVAL nStart AS LONG, BYVAL nCount AS LONG) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrWrap|DWStrWrap OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYREF wszLeftChar AS CONST WSTRING, BYREF wszRightChar AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrWrap|DWStrWrap OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYREF wszChar AS CONST WSTRING = CHR(34)) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrUnWrap|DWStrUnWrap OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYREF wszLeftChar AS CONST WSTRING, BYREF wszRightChar AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrUnWrap|DWStrUnWrap OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYREF wszChar AS CONST WSTRING = CHR(34)) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrDelete|DWStrDelete(BYREF wszMainStr AS CONST WSTRING, BYVAL nStart AS LONG, BYVAL nCount AS LONG) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrInsert|DWStrInsert(BYREF wszMainStr AS CONST WSTRING, BYREF wszInsertString AS WSTRING, BYVAL nPosition AS LONG) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrRetain|DWStrRetain(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrRetainI|DWStrRetainI(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrRetainAny|DWStrRetainAny(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrRetainAnyI|DWStrRetainAnyI(BYREF wszMainStr AS CONST WSTRING, BYREF wszMatchStr AS CONST WSTRING) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrShrink|DWStrShrink(BYREF wszMainStr AS CONST WSTRING, BYREF wszMask AS CONST WSTRING = "#") AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrParseCount|DWStrParseCount(BYREF wszMainStr AS CONST WSTRING, BYREF wszDelimiter AS CONST WSTRING = "#") AS LONG
AFX\DWSTRPROCS.BI|DWStrParseCountAny|DWStrParseCountAny(BYREF wszMainStr AS CONST WSTRING, BYREF wszDelimiter AS CONST WSTRING = "#") AS LONG
AFX\DWSTRPROCS.BI|DWStrParse|DWStrParse OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYREF wszDelimiter AS CONST WSTRING, BYVAL nPosition AS LONG, BYVAL bIsAny AS BOOLEAN, BYVAL nLenDelimiter AS LONG) AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrParse|DWStrParse OVERLOAD(BYREF wszMainStr AS CONST WSTRING, BYVAL nPosition AS LONG = 1, BYREF wszDelimiter AS CONST WSTRING = "#") AS DWSTRING
AFX\DWSTRPROCS.BI|DWStrParseAny|DWStrParseAny(BYREF wszMainStr AS CONST WSTRING, BYVAL nPosition AS LONG = 1, BYREF wszDelimiter AS CONST WSTRING = "#") AS DWSTRING
ATK\ATK.BI|type_name##_class_intern_init|type_name##_class_intern_init(byval klass as gpointer)
ATK\ATK.BI|type_name##_get_type|type_name##_get_type() as GType
BFD.BI|bfd_set_section_userdata|bfd_set_section_userdata(byval abfd as bfd ptr, byval ptr_ as asection ptr, byval val_ as any ptr) as bfd_boolean
BFD.BI|bfd_set_section_vma|bfd_set_section_vma(byval abfd as bfd ptr, byval ptr_ as asection ptr, byval val_ as bfd_vma) as bfd_boolean
BFD.BI|bfd_set_section_alignment|bfd_set_section_alignment(byval abfd as bfd ptr, byval ptr_ as asection ptr, byval val_ as ulong) as bfd_boolean
BFD.BI|bfd_set_cacheable|bfd_set_cacheable(byval abfd as bfd ptr, byval val_ as bfd_boolean) as bfd_boolean
BIG_INT\GET_BIT_LENGTH.BI|get_bit_length alias "##############"|get_bit_length cdecl alias "##############"(byval num as big_int_word) as integer
CCTSQL\CCTCONNECTIONPOOL.BI|cCTConnectionPool.AddPoolConnection|cCTConnectionPool.AddPoolConnection(ByVal iDatabaseID as Long, ByVal iConnectionID as Long) as BOOLEAN
CCTSQL\CCTCONNECTIONPOOL.BI|cCTConnectionPool.ReleasePoolConnection|cCTConnectionPool.ReleasePoolConnection(ByVal iDatabaseID as Long, ByVal iConnectionID as Long) as BOOLEAN
CCTSQL\CCTCONNECTIONPOOL.BI|cCTConnectionPool.RequestPoolConnection|cCTConnectionPool.RequestPoolConnection(ByVal iDatabaseID as Long, ByRef iConnectionID as Long) as BOOLEAN
CCTSQL\CCTCONNECTIONPOOL.BI|cCTConnectionPool.RemovePoolConnection|cCTConnectionPool.RemovePoolConnection(ByVal iDatabaseID as Long, ByVal iConnectionID as Long) as BOOLEAN
CCTSQL\CCTCONNECTIONPOOL.BI|cCTConnectionPool.PoolConnectionDetail|cCTConnectionPool.PoolConnectionDetail(arPool() as POOL_CONNECTION)
CCTSQL\CCTCONNECTIONPOOL.BI|cCTConnectionPool.PoolConnectionStatistics|cCTConnectionPool.PoolConnectionStatistics(ByRef iPoolSize as Long, ByRef iTotalCurrentConnections as Long, ByRef iTotalActiveConnections as Long, ByRef nAverageRequestMilliseconds as Double)
CCTSQL\CCTSOCKET.BI|cCTSocket.TCPConnect|cCTSocket.TCPConnect(ByRef hSocket as SOCKET, ByRef sIPAddress as String, ByVal wPort as WORD, ByVal iTimeout as Long) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.HostNameFromIP|cCTSocket.HostNameFromIP(ByRef sIPAddress as String, ByRef sHostName as String) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.IPFromHostName|cCTSocket.IPFromHostName(ByRef sHostName as String, ByRef sIPAddress as String) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.OpenListenerSocket|cCTSocket.OpenListenerSocket(ByRef hSocket as SOCKET, ByVal HWnd as DWORD, ByVal nMessageID as DWORD, ByVal nEvents as Long, ByVal lDefaultIP as BOOLEAN, ByVal nType as Long, ByVal wPort as WORD, ByRef sIPAddress as String) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.PreferredAddress|cCTSocket.PreferredAddress(ByRef sLocalHostName as String, ByRef SockAddress as SOCKADDR_IN) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.LocalHostName|cCTSocket.LocalHostName(ByRef sLocalHostName as String) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.UDPBroadcast|cCTSocket.UDPBroadcast(ByVal sMessage as String, ByRef sResponse as String, ByVal wPort as WORD, ByVal iTimeOut as Long, ByVal nMessageSize as Long) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.BindSocket|cCTSocket.BindSocket(ByVal hSocket as SOCKET, ByRef SockAddress as SOCKADDR_IN) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.ListenSocket|cCTSocket.ListenSocket(ByVal hSocket as SOCKET) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.AcceptSocket|cCTSocket.AcceptSocket(ByVal hListeningSocket as SOCKET, ByRef hAcceptSocket as SOCKET, ByRef AcceptSockAddress as SOCKADDR_IN) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.BlockingSocket|cCTSocket.BlockingSocket(ByVal hSocket as SOCKET, ByVal nMode as Long) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.AsyncSelectSocket|cCTSocket.AsyncSelectSocket(ByVal hSocket as SOCKET, ByVal HWnd as DWORD, ByVal nMessageID as DWORD, ByVal nEvents as Long) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.UDPSendTo|cCTSocket.UDPSendTo(ByVal hSocket as SOCKET, ByRef sMessage as String, ByVal wPort as WORD, ByVal nIPAddress as ulong) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.UDPReceiveFrom|cCTSocket.UDPReceiveFrom(ByVal hSocket as DWORD, ByRef sResponse as String, ByRef SockAddress as SOCKADDR_IN, ByVal nMessageSize as Long) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.SendAndReceiveSocket|cCTSocket.SendAndReceiveSocket(ByVal hSocket as SOCKET, ByVal iBufferSize as Long, ByRef sMessage as String, ByRef sResponse as String, ByVal iTimeOut as Long) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.SendSocket|cCTSocket.SendSocket(ByVal hSocket as SOCKET, ByRef sData as String) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.ReceiveSocket|cCTSocket.ReceiveSocket(ByVal hSocket as Long, ByVal iBufferSize as Long, ByRef sReceived as String, ByVal iTimeOut as Long) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.SocketReceiveReady|cCTSocket.SocketReceiveReady(ByVal hSocket as SOCKET, ByVal iTimeout as Long) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.TimeoutSocket|cCTSocket.TimeoutSocket(ByVal hSocket as SOCKET, ByVal iTimeout as Long) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.HostByAddress|cCTSocket.HostByAddress(ByRef sIPAddress as String, ByRef lpHostEntry as HOSTENT Ptr) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.IPToString|cCTSocket.IPToString(ByVal nIPAddress as ulong, ByRef sIPAddress as String)
CCTSQL\CCTSOCKET.BI|cCTSocket.StringToIP|cCTSocket.StringToIP(ByRef sIPAddress as String) as ulong
CCTSQL\CCTSOCKET.BI|cCTSocket.HostByName|cCTSocket.HostByName(ByRef sHostName as String, ByRef lpHostEntry as HOSTENT Ptr) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.Disconnect|cCTSocket.Disconnect(ByRef hSocket as SOCKET) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.GetSocket|cCTSocket.GetSocket(ByVal nFamily as Long, ByVal nType as Long, ByVal nProtocol as Long, ByRef hSocket as SOCKET) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.SocketShutdown|cCTSocket.SocketShutdown(ByVal hSocket as SOCKET) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.SocketClose|cCTSocket.SocketClose(ByVal hSocket as SOCKET)
CCTSQL\CCTSOCKET.BI|cCTSocket.ConnectSocket|cCTSocket.ConnectSocket(ByVal hSocket as SOCKET, ByRef SockAddress as SOCKADDR_IN) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.WinSockStartup|cCTSocket.WinSockStartup(ByRef iError as Long) as BOOLEAN
CCTSQL\CCTSOCKET.BI|cCTSocket.ZStringPointer|cCTSocket.ZStringPointer(ByRef sAny as String) as ZString Ptr
CCTSQL\CCTSQLITE.BI|cCTSQLite.BackupInit|cCTSQLite.BackupInit(ByRef hDbcDest as DWORD, ByRef sDestFileName as String, ByVal hDbcSource as DWORD, ByRef hBackup as DWORD, ByRef iErrorCode as Long, ByRef sErrorDescription as String) as BOOLEAN
CCTSQL\CCTSQLITE.BI|cCTSQLite.BackupStep|cCTSQLite.BackupStep(ByVal hBackup as DWORD, ByVal iPages as Long) as Long
CCTSQL\CCTSQLITE.BI|cCTSQLite.BackupFinish|cCTSQLite.BackupFinish(ByVal hBackup as DWORD, ByVal hDbcDest as DWORD, ByRef iErrorCode as Long, ByRef sErrorDescription as String) as BOOLEAN
CCTSQL\CCTSQLITE.BI|cCTSQLite.DatabaseVersion|cCTSQLite.DatabaseVersion(ByVal hDbc as DWORD) as Long
CCTSQL\CCTSQLITE.BI|cCTSQLite.SQLExecQuery|cCTSQLite.SQLExecQuery(ByVal hDbc as DWORD, ByRef sSQL as String, arResults() as String, ByRef iCols as Long, ByRef iRows as Long, ByRef iErrorCode as Long, ByRef sErrorDescription as String, ByVal lReturnResults as BOOLEAN) as BOOLEAN
CCTSQL\CCTSQLITE.BI|cCTSQLite.SQLExecNonQuery|cCTSQLite.SQLExecNonQuery(ByVal hDbc as DWORD, ByRef sSQL as String, arResults() as String, ByRef iCols as Long, ByRef iRows as Long, ByRef iErrorCode as Long, ByRef sErrorDescription as String, ByVal lReturnResults as BOOLEAN) as BOOLEAN
CCTSQL\CCTSQLITE.BI|cCTSQLite.SQLExec|cCTSQLite.SQLExec(ByVal hDbc as DWORD, ByRef sSQL as String, arResults() as String, ByRef iCols as Long, ByRef iRows as Long, ByRef iErrorCode as Long, ByRef sErrorDescription as String, ByVal lReturnResults as BOOLEAN) as BOOLEAN
CCTSQL\CCTSQLITE.BI|cCTSQLite.SQLPrepare|cCTSQLite.SQLPrepare(ByVal hDbc as DWORD, ByRef pzSQL as ZString Ptr, ByRef pStmt as DWORD, ByRef pzTail as ZString Ptr, ByRef iErrorCode as Long, ByRef sErrorDescription as String) as BOOLEAN
CCTSQL\CCTSQLITE.BI|cCTSQLite.SQLStep|cCTSQLite.SQLStep(ByVal hDbc as DWORD, ByVal pStmt as DWORD, ByVal lReturnResults as BOOLEAN, arResults() as String, ByRef iCols as Long, ByRef iRows as Long, ByRef iErrorCode as Long, ByRef sErrorDescription as String) as BOOLEAN
CCTSQL\CCTSQLITE.BI|cCTSQLite.OpenDatabase|cCTSQLite.OpenDatabase(ByRef sDatabaseName as String, ByRef hDbc as DWORD, ByRef iErrorCode as Long, ByVal iOpenOptions as Long) as BOOLEAN
CCTSQL\CCTSQLITE.BI|cCTSQLite.CloseDatabase|cCTSQLite.CloseDatabase(ByVal hDbc as DWORD, ByRef iErrorCode as Long) as BOOLEAN
CCTSQL\CCTSQLITE.BI|cCTSQLite.StartupStatus|cCTSQLite.StartupStatus(ByRef sStartUpErrorDescription as String) as BOOLEAN
CCTSQL\CCTSQLITE.BI|cCTSQLite.SQLExtendedErrorDescription|cCTSQLite.SQLExtendedErrorDescription(ByVal hDbc as DWORD, ByRef iExtendedError as Long) as String
CCTSQL\CCTSQLITE.BI|cCTSQLite.ZStringPointer|cCTSQLite.ZStringPointer(ByRef sAny as String) as ZString Ptr
CCTSQL\CCTSQLLITECRYPTO.BI|cCTSQLLiteCrypto.DecryptText|cCTSQLLiteCrypto.DecryptText(ByRef sCipherText as String, ByRef sPlainText as String, ByVal iEncryptIndex1 as Long, ByVal iEncryptIndex2 as Long) as BOOLEAN
CCTSQL\CCTSQLLITECRYPTO.BI|cCTSQLLiteCrypto.DecryptOneBlock|cCTSQLLiteCrypto.DecryptOneBlock(ByVal hKey as BCRYPT_KEY_HANDLE, ByRef sCipherText as String, ByRef sPlainText as String, ByRef sIV as String, ByVal lFinal as BOOLEAN) as BOOLEAN
CCTSQL\CCTSQLLITECRYPTO.BI|cCTSQLLiteCrypto.EncryptText|cCTSQLLiteCrypto.EncryptText(ByRef sPlainText as String, ByRef sCipherText as String, ByVal iEncryptIndex1 as Long, ByVal iEncryptIndex2 as Long) as BOOLEAN
CCTSQL\CCTSQLLITECRYPTO.BI|cCTSQLLiteCrypto.EncryptOneBlock|cCTSQLLiteCrypto.EncryptOneBlock(ByVal hKey as BCRYPT_KEY_HANDLE, ByRef sPlainText as String, ByRef sCipherText as String, ByRef sIV as String, ByVal lFinal as BOOLEAN) as BOOLEAN
CCTSQL\CCTSQLLITECRYPTO.BI|cCTSQLLiteCrypto.HashString|cCTSQLLiteCrypto.HashString(ByRef sAny as String, ByRef sHash as String)
CCTSQL\CCTSQLLITECRYPTO.BI|cCTSQLLiteCrypto.SharedSessionKey|cCTSQLLiteCrypto.SharedSessionKey(ByVal iIndex1 as Long, ByVal iIndex2 as Long) as String
CCTSQL\CCTSQLLITECRYPTO.BI|cCTSQLLiteCrypto.SessionKey|cCTSQLLiteCrypto.SessionKey(ByRef iIndex1 as Long, ByRef iIndex2 as Long) as String
CCTSQL\CCTSQLLITECRYPTO.BI|cCTSQLLiteCrypto.Bin2Hex|cCTSQLLiteCrypto.Bin2Hex(ByRef sBinary as String, ByRef sHex as String)
CCTSQL\CCTSQLLITECRYPTO.BI|cCTSQLLiteCrypto.Hex2Bin|cCTSQLLiteCrypto.Hex2Bin(ByRef sHex as String, ByRef sBinary as String)
CCTSQL\CCTSQLLITECRYPTO.BI|cCTSQLLiteCrypto.GetPrime|cCTSQLLiteCrypto.GetPrime(ByRef iIndex as Long) as Long
CCTSQL\CCTSQLLITECRYPTO.BI|cCTSQLLiteCrypto.RandomIndex|cCTSQLLiteCrypto.RandomIndex() as Long
CCTSQL\CCTSQLLITECRYPTO.BI|cCTSQLLiteCrypto.RandomString|cCTSQLLiteCrypto.RandomString(ByRef sRandom as String, ByVal nLength as Long)
CCTSQL\CCTSQLLITECRYPTO.BI|cCTSQLLiteCrypto.RestoreDefaultIV|cCTSQLLiteCrypto.RestoreDefaultIV()
CHIPMUNK\CHIPMUNK.BI|cpfmax|cpfmax(byval a as cpFloat, byval b as cpFloat) as cpFloat
CHIPMUNK\CHIPMUNK.BI|cpfmin|cpfmin(byval a as cpFloat, byval b as cpFloat) as cpFloat
CHIPMUNK\CHIPMUNK.BI|cpfabs|cpfabs(byval f_ as cpFloat) as cpFloat
CHIPMUNK\CHIPMUNK.BI|cpflerp|cpflerp(byval f1 as cpFloat, byval f2 as cpFloat, byval t as cpFloat) as cpFloat
CHIPMUNK\CHIPMUNK.BI|cpflerpconst|cpflerpconst(byval f1 as cpFloat, byval f2 as cpFloat, byval d as cpFloat) as cpFloat
CHIPMUNK\CHIPMUNK.BI|cpv|cpv(byval x as const cpFloat, byval y as const cpFloat) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpveql|cpveql(byval v1 as const cpVect, byval v2 as const cpVect) as cpBool
CHIPMUNK\CHIPMUNK.BI|cpvadd|cpvadd(byval v1 as const cpVect, byval v2 as const cpVect) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpvsub|cpvsub(byval v1 as const cpVect, byval v2 as const cpVect) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpvneg|cpvneg(byval v as const cpVect) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpvmult|cpvmult(byval v as const cpVect, byval s as const cpFloat) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpvdot|cpvdot(byval v1 as const cpVect, byval v2 as const cpVect) as cpFloat
CHIPMUNK\CHIPMUNK.BI|cpvcross|cpvcross(byval v1 as const cpVect, byval v2 as const cpVect) as cpFloat
CHIPMUNK\CHIPMUNK.BI|cpvperp|cpvperp(byval v as const cpVect) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpvrperp|cpvrperp(byval v as const cpVect) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpvproject|cpvproject(byval v1 as const cpVect, byval v2 as const cpVect) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpvforangle|cpvforangle(byval a as const cpFloat) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpvtoangle|cpvtoangle(byval v as const cpVect) as cpFloat
CHIPMUNK\CHIPMUNK.BI|cpvrotate|cpvrotate(byval v1 as const cpVect, byval v2 as const cpVect) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpvunrotate|cpvunrotate(byval v1 as const cpVect, byval v2 as const cpVect) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpvlengthsq|cpvlengthsq(byval v as const cpVect) as cpFloat
CHIPMUNK\CHIPMUNK.BI|cpvlength|cpvlength(byval v as const cpVect) as cpFloat
CHIPMUNK\CHIPMUNK.BI|cpvlerp|cpvlerp(byval v1 as const cpVect, byval v2 as const cpVect, byval t as const cpFloat) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpvnormalize|cpvnormalize(byval v as const cpVect) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpvslerp|cpvslerp(byval v1 as const cpVect, byval v2 as const cpVect, byval t as const cpFloat) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpvslerpconst|cpvslerpconst(byval v1 as const cpVect, byval v2 as const cpVect, byval a as const cpFloat) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpvclamp|cpvclamp(byval v as const cpVect, byval len_ as const cpFloat) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpvlerpconst|cpvlerpconst(byval v1 as cpVect, byval v2 as cpVect, byval d as cpFloat) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpvnear|cpvnear(byval v1 as const cpVect, byval v2 as const cpVect, byval dist as const cpFloat) as cpBool
CHIPMUNK\CHIPMUNK.BI|cpMat2x2New|cpMat2x2New(byval a as cpFloat, byval b as cpFloat, byval c as cpFloat, byval d as cpFloat) as cpMat2x2
CHIPMUNK\CHIPMUNK.BI|cpMat2x2Transform|cpMat2x2Transform(byval m as cpMat2x2, byval v as cpVect) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpBBSegmentQuery|cpBBSegmentQuery(byval bb as cpBB, byval a as cpVect, byval b as cpVect) as cpFloat
CHIPMUNK\CHIPMUNK.BI|cpBBWrapVect|cpBBWrapVect(byval bb as const cpBB, byval v as const cpVect) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpTransformInverse|cpTransformInverse(byval t as cpTransform) as cpTransform
CHIPMUNK\CHIPMUNK.BI|cpTransformMult|cpTransformMult(byval t1 as cpTransform, byval t2 as cpTransform) as cpTransform
CHIPMUNK\CHIPMUNK.BI|cpTransformPoint|cpTransformPoint(byval t as cpTransform, byval p as cpVect) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpTransformVect|cpTransformVect(byval t as cpTransform, byval v as cpVect) as cpVect
CHIPMUNK\CHIPMUNK.BI|cpTransformbBB|cpTransformbBB(byval t as cpTransform, byval bb as cpBB) as cpBB
CHIPMUNK\CHIPMUNK.BI|cpTransformTranslate|cpTransformTranslate(byval translate as cpVect) as cpTransform
CHIPMUNK\CHIPMUNK.BI|cpTransformRotate|cpTransformRotate(byval radians as cpFloat) as cpTransform
CHIPMUNK\CHIPMUNK.BI|cpTransformRigid|cpTransformRigid(byval translate as cpVect, byval radians as cpFloat) as cpTransform
CHIPMUNK\CHIPMUNK.BI|cpTransformRigidInverse|cpTransformRigidInverse(byval t as cpTransform) as cpTransform
CHIPMUNK\CHIPMUNK.BI|cpTransformWrap|cpTransformWrap(byval outer as cpTransform, byval inner as cpTransform) as cpTransform
CHIPMUNK\CHIPMUNK.BI|cpTransformWrapInverse|cpTransformWrapInverse(byval outer as cpTransform, byval inner as cpTransform) as cpTransform
CHIPMUNK\CHIPMUNK.BI|cpTransformOrtho|cpTransformOrtho(byval bb as cpBB) as cpTransform
CHIPMUNK\CHIPMUNK.BI|cpTransformBoneScale|cpTransformBoneScale(byval v0 as cpVect, byval v1 as cpVect) as cpTransform
CHIPMUNK\CHIPMUNK.BI|cpTransformAxialScale|cpTransformAxialScale(byval axis as cpVect, byval pivot as cpVect, byval scale as cpFloat) as cpTransform
CHIPMUNK\CHIPMUNK.BI|cpSpatialIndexDestroy|cpSpatialIndexDestroy(byval index as cpSpatialIndex ptr)
CHIPMUNK\CHIPMUNK.BI|cpSpatialIndexCount|cpSpatialIndexCount(byval index as cpSpatialIndex ptr) as long
CHIPMUNK\CHIPMUNK.BI|cpSpatialIndexEach|cpSpatialIndexEach(byval index as cpSpatialIndex ptr, byval func as cpSpatialIndexIteratorFunc, byval data_ as any ptr)
CHIPMUNK\CHIPMUNK.BI|cpSpatialIndexContains|cpSpatialIndexContains(byval index as cpSpatialIndex ptr, byval obj as any ptr, byval hashid as cpHashValue) as cpBool
CHIPMUNK\CHIPMUNK.BI|cpSpatialIndexInsert|cpSpatialIndexInsert(byval index as cpSpatialIndex ptr, byval obj as any ptr, byval hashid as cpHashValue)
CHIPMUNK\CHIPMUNK.BI|cpSpatialIndexRemove|cpSpatialIndexRemove(byval index as cpSpatialIndex ptr, byval obj as any ptr, byval hashid as cpHashValue)
CHIPMUNK\CHIPMUNK.BI|cpSpatialIndexReindex|cpSpatialIndexReindex(byval index as cpSpatialIndex ptr)
CHIPMUNK\CHIPMUNK.BI|cpSpatialIndexReindexObject|cpSpatialIndexReindexObject(byval index as cpSpatialIndex ptr, byval obj as any ptr, byval hashid as cpHashValue)
CHIPMUNK\CHIPMUNK.BI|cpSpatialIndexQuery|cpSpatialIndexQuery(byval index as cpSpatialIndex ptr, byval obj as any ptr, byval bb as cpBB, byval func as cpSpatialIndexQueryFunc, byval data_ as any ptr)
CHIPMUNK\CHIPMUNK.BI|cpSpatialIndexSegmentQuery|cpSpatialIndexSegmentQuery(byval index as cpSpatialIndex ptr, byval obj as any ptr, byval a as cpVect, byval b as cpVect, byval t_exit as cpFloat, byval func as cpSpatialIndexSegmentQueryFunc, byval data_ as any ptr)
CHIPMUNK\CHIPMUNK.BI|cpSpatialIndexReindexQuery|cpSpatialIndexReindexQuery(byval index as cpSpatialIndex ptr, byval func as cpSpatialIndexQueryFunc, byval data_ as any ptr)
CHIPMUNK\CHIPMUNK.BI|cpShapeFilterNew|cpShapeFilterNew(byval group as cpGroup, byval categories as cpBitmask, byval mask as cpBitmask) as cpShapeFilter
CHIPMUNK\CHIPMUNK.BI|cpClosetPointOnSegment|cpClosetPointOnSegment(byval p as const cpVect, byval a as const cpVect, byval b as const cpVect) as cpVect
FLITE\CST_VAL_DEFS.BI|val_##NAME|val_##NAME(byval v as const cst_val ptr) as TYPE ptr
FLITE\CST_VAL_DEFS.BI|val_delete_##NAME|val_delete_##NAME(byval v as any ptr)
FLITE\CST_VAL_DEFS.BI|NAME##_val|NAME##_val(byval v as const TYPE ptr) as cst_val ptr
FLITE\CST_VAL_DEFS.BI|val_##NAME|val_##NAME(byval v as const cst_val ptr) as TYPE ptr
FLITE\CST_VAL_DEFS.BI|NAME##_val|NAME##_val(byval v as const TYPE ptr) as cst_val ptr
FLITE\CST_VAL_DEFS.BI|val_delete_##NAME|val_delete_##NAME(byval v as any ptr)
FLITE\CST_VAL_DEFS.BI|val_##NAME|val_##NAME(byval v as const cst_val ptr) as TYPE
FLITE\CST_VAL_DEFS.BI|NAME##_val|NAME##_val(byval v as const TYPE) as cst_val ptr
FLITE\CST_VAL_DEFS.BI|val_delete_##NAME|val_delete_##NAME(byval v as any ptr)
FMOD.BI|FSOUND_GetErrorString|FSOUND_GetErrorString(byval errcode as integer) as string
GDK\GDK3.BI|glib_autoptr_cleanup_GdkAppLaunchContext|glib_autoptr_cleanup_GdkAppLaunchContext(byval _ptr as GdkAppLaunchContext ptr ptr)
GDK\GDK3.BI|glib_autoptr_cleanup_GdkCursor|glib_autoptr_cleanup_GdkCursor(byval _ptr as GdkCursor ptr ptr)
GDK\GDK3.BI|glib_autoptr_cleanup_GdkDevice|glib_autoptr_cleanup_GdkDevice(byval _ptr as GdkDevice ptr ptr)
GDK\GDK3.BI|glib_autoptr_cleanup_GdkDeviceManager|glib_autoptr_cleanup_GdkDeviceManager(byval _ptr as GdkDeviceManager ptr ptr)
GDK\GDK3.BI|glib_autoptr_cleanup_GdkDisplay|glib_autoptr_cleanup_GdkDisplay(byval _ptr as GdkDisplay ptr ptr)
GDK\GDK3.BI|glib_autoptr_cleanup_GdkDisplayManager|glib_autoptr_cleanup_GdkDisplayManager(byval _ptr as GdkDisplayManager ptr ptr)
GDK\GDK3.BI|glib_autoptr_cleanup_GdkDragContext|glib_autoptr_cleanup_GdkDragContext(byval _ptr as GdkDragContext ptr ptr)
GDK\GDK3.BI|glib_autoptr_cleanup_GdkFrameClock|glib_autoptr_cleanup_GdkFrameClock(byval _ptr as GdkFrameClock ptr ptr)
GDK\GDK3.BI|glib_autoptr_cleanup_GdkGLContext|glib_autoptr_cleanup_GdkGLContext(byval _ptr as GdkGLContext ptr ptr)
GDK\GDK3.BI|glib_autoptr_cleanup_GdkKeymap|glib_autoptr_cleanup_GdkKeymap(byval _ptr as GdkKeymap ptr ptr)
GDK\GDK3.BI|glib_autoptr_cleanup_GdkScreen|glib_autoptr_cleanup_GdkScreen(byval _ptr as GdkScreen ptr ptr)
GDK\GDK3.BI|glib_autoptr_cleanup_GdkVisual|glib_autoptr_cleanup_GdkVisual(byval _ptr as GdkVisual ptr ptr)
GDK\GDK3.BI|glib_autoptr_cleanup_GdkWindow|glib_autoptr_cleanup_GdkWindow(byval _ptr as GdkWindow ptr ptr)
GDK\GDK3.BI|glib_autoptr_cleanup_GdkEvent|glib_autoptr_cleanup_GdkEvent(byval _ptr as GdkEvent ptr ptr)
GDK\GDK3.BI|glib_autoptr_cleanup_GdkFrameTimings|glib_autoptr_cleanup_GdkFrameTimings(byval _ptr as GdkFrameTimings ptr ptr)
GDK\GDK3.BI|glib_autoptr_cleanup_GdkRGBA|glib_autoptr_cleanup_GdkRGBA(byval _ptr as GdkRGBA ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GListModel|glib_autoptr_cleanup_GListModel(byval _ptr as GListModel ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GListStore|glib_autoptr_cleanup_GListStore(byval _ptr as GListStore ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GAction|glib_autoptr_cleanup_GAction(byval _ptr as GAction ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GActionMap|glib_autoptr_cleanup_GActionMap(byval _ptr as GActionMap ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GAppInfo|glib_autoptr_cleanup_GAppInfo(byval _ptr as GAppInfo ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GAppLaunchContext|glib_autoptr_cleanup_GAppLaunchContext(byval _ptr as GAppLaunchContext ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GAppInfoMonitor|glib_autoptr_cleanup_GAppInfoMonitor(byval _ptr as GAppInfoMonitor ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GApplicationCommandLine|glib_autoptr_cleanup_GApplicationCommandLine(byval _ptr as GApplicationCommandLine ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GApplication|glib_autoptr_cleanup_GApplication(byval _ptr as GApplication ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GAsyncInitable|glib_autoptr_cleanup_GAsyncInitable(byval _ptr as GAsyncInitable ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GAsyncResult|glib_autoptr_cleanup_GAsyncResult(byval _ptr as GAsyncResult ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GBufferedInputStream|glib_autoptr_cleanup_GBufferedInputStream(byval _ptr as GBufferedInputStream ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GBufferedOutputStream|glib_autoptr_cleanup_GBufferedOutputStream(byval _ptr as GBufferedOutputStream ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GBytesIcon|glib_autoptr_cleanup_GBytesIcon(byval _ptr as GBytesIcon ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GCancellable|glib_autoptr_cleanup_GCancellable(byval _ptr as GCancellable ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GCharsetConverter|glib_autoptr_cleanup_GCharsetConverter(byval _ptr as GCharsetConverter ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GConverter|glib_autoptr_cleanup_GConverter(byval _ptr as GConverter ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GConverterInputStream|glib_autoptr_cleanup_GConverterInputStream(byval _ptr as GConverterInputStream ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GConverterOutputStream|glib_autoptr_cleanup_GConverterOutputStream(byval _ptr as GConverterOutputStream ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GCredentials|glib_autoptr_cleanup_GCredentials(byval _ptr as GCredentials ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDataInputStream|glib_autoptr_cleanup_GDataInputStream(byval _ptr as GDataInputStream ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDataOutputStream|glib_autoptr_cleanup_GDataOutputStream(byval _ptr as GDataOutputStream ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDBusActionGroup|glib_autoptr_cleanup_GDBusActionGroup(byval _ptr as GDBusActionGroup ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDBusAuthObserver|glib_autoptr_cleanup_GDBusAuthObserver(byval _ptr as GDBusAuthObserver ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDBusConnection|glib_autoptr_cleanup_GDBusConnection(byval _ptr as GDBusConnection ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDBusInterface|glib_autoptr_cleanup_GDBusInterface(byval _ptr as GDBusInterface ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDBusInterfaceSkeleton|glib_autoptr_cleanup_GDBusInterfaceSkeleton(byval _ptr as GDBusInterfaceSkeleton ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDBusMenuModel|glib_autoptr_cleanup_GDBusMenuModel(byval _ptr as GDBusMenuModel ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDBusMessage|glib_autoptr_cleanup_GDBusMessage(byval _ptr as GDBusMessage ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDBusMethodInvocation|glib_autoptr_cleanup_GDBusMethodInvocation(byval _ptr as GDBusMethodInvocation ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDBusNodeInfo|glib_autoptr_cleanup_GDBusNodeInfo(byval _ptr as GDBusNodeInfo ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDBusObject|glib_autoptr_cleanup_GDBusObject(byval _ptr as GDBusObject ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDBusObjectManagerClient|glib_autoptr_cleanup_GDBusObjectManagerClient(byval _ptr as GDBusObjectManagerClient ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDBusObjectManager|glib_autoptr_cleanup_GDBusObjectManager(byval _ptr as GDBusObjectManager ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDBusObjectManagerServer|glib_autoptr_cleanup_GDBusObjectManagerServer(byval _ptr as GDBusObjectManagerServer ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDBusObjectProxy|glib_autoptr_cleanup_GDBusObjectProxy(byval _ptr as GDBusObjectProxy ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDBusObjectSkeleton|glib_autoptr_cleanup_GDBusObjectSkeleton(byval _ptr as GDBusObjectSkeleton ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDBusProxy|glib_autoptr_cleanup_GDBusProxy(byval _ptr as GDBusProxy ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDBusServer|glib_autoptr_cleanup_GDBusServer(byval _ptr as GDBusServer ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GDrive|glib_autoptr_cleanup_GDrive(byval _ptr as GDrive ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GEmblemedIcon|glib_autoptr_cleanup_GEmblemedIcon(byval _ptr as GEmblemedIcon ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GEmblem|glib_autoptr_cleanup_GEmblem(byval _ptr as GEmblem ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GFileEnumerator|glib_autoptr_cleanup_GFileEnumerator(byval _ptr as GFileEnumerator ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GFile|glib_autoptr_cleanup_GFile(byval _ptr as GFile ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GFileIcon|glib_autoptr_cleanup_GFileIcon(byval _ptr as GFileIcon ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GFileInfo|glib_autoptr_cleanup_GFileInfo(byval _ptr as GFileInfo ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GFileInputStream|glib_autoptr_cleanup_GFileInputStream(byval _ptr as GFileInputStream ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GFileIOStream|glib_autoptr_cleanup_GFileIOStream(byval _ptr as GFileIOStream ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GFileMonitor|glib_autoptr_cleanup_GFileMonitor(byval _ptr as GFileMonitor ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GFilenameCompleter|glib_autoptr_cleanup_GFilenameCompleter(byval _ptr as GFilenameCompleter ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GFileOutputStream|glib_autoptr_cleanup_GFileOutputStream(byval _ptr as GFileOutputStream ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GFilterInputStream|glib_autoptr_cleanup_GFilterInputStream(byval _ptr as GFilterInputStream ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GFilterOutputStream|glib_autoptr_cleanup_GFilterOutputStream(byval _ptr as GFilterOutputStream ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GIcon|glib_autoptr_cleanup_GIcon(byval _ptr as GIcon ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GInetAddress|glib_autoptr_cleanup_GInetAddress(byval _ptr as GInetAddress ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GInetAddressMask|glib_autoptr_cleanup_GInetAddressMask(byval _ptr as GInetAddressMask ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GInetSocketAddress|glib_autoptr_cleanup_GInetSocketAddress(byval _ptr as GInetSocketAddress ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GInitable|glib_autoptr_cleanup_GInitable(byval _ptr as GInitable ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GInputStream|glib_autoptr_cleanup_GInputStream(byval _ptr as GInputStream ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GIOModule|glib_autoptr_cleanup_GIOModule(byval _ptr as GIOModule ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GIOStream|glib_autoptr_cleanup_GIOStream(byval _ptr as GIOStream ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GLoadableIcon|glib_autoptr_cleanup_GLoadableIcon(byval _ptr as GLoadableIcon ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GMemoryInputStream|glib_autoptr_cleanup_GMemoryInputStream(byval _ptr as GMemoryInputStream ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GMemoryOutputStream|glib_autoptr_cleanup_GMemoryOutputStream(byval _ptr as GMemoryOutputStream ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GMenu|glib_autoptr_cleanup_GMenu(byval _ptr as GMenu ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GMenuItem|glib_autoptr_cleanup_GMenuItem(byval _ptr as GMenuItem ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GMenuModel|glib_autoptr_cleanup_GMenuModel(byval _ptr as GMenuModel ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GMenuAttributeIter|glib_autoptr_cleanup_GMenuAttributeIter(byval _ptr as GMenuAttributeIter ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GMenuLinkIter|glib_autoptr_cleanup_GMenuLinkIter(byval _ptr as GMenuLinkIter ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GMount|glib_autoptr_cleanup_GMount(byval _ptr as GMount ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GMountOperation|glib_autoptr_cleanup_GMountOperation(byval _ptr as GMountOperation ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GNativeVolumeMonitor|glib_autoptr_cleanup_GNativeVolumeMonitor(byval _ptr as GNativeVolumeMonitor ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GNetworkAddress|glib_autoptr_cleanup_GNetworkAddress(byval _ptr as GNetworkAddress ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GNetworkMonitor|glib_autoptr_cleanup_GNetworkMonitor(byval _ptr as GNetworkMonitor ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GNetworkService|glib_autoptr_cleanup_GNetworkService(byval _ptr as GNetworkService ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GNotification|glib_autoptr_cleanup_GNotification(byval _ptr as GNotification ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GOutputStream|glib_autoptr_cleanup_GOutputStream(byval _ptr as GOutputStream ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GPermission|glib_autoptr_cleanup_GPermission(byval _ptr as GPermission ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GPollableInputStream|glib_autoptr_cleanup_GPollableInputStream(byval _ptr as GPollableInputStream ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GPollableOutputStream|glib_autoptr_cleanup_GPollableOutputStream(byval _ptr as GPollableOutputStream ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GPropertyAction|glib_autoptr_cleanup_GPropertyAction(byval _ptr as GPropertyAction ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GProxyAddressEnumerator|glib_autoptr_cleanup_GProxyAddressEnumerator(byval _ptr as GProxyAddressEnumerator ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GProxyAddress|glib_autoptr_cleanup_GProxyAddress(byval _ptr as GProxyAddress ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GProxy|glib_autoptr_cleanup_GProxy(byval _ptr as GProxy ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GProxyResolver|glib_autoptr_cleanup_GProxyResolver(byval _ptr as GProxyResolver ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GRemoteActionGroup|glib_autoptr_cleanup_GRemoteActionGroup(byval _ptr as GRemoteActionGroup ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GResolver|glib_autoptr_cleanup_GResolver(byval _ptr as GResolver ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSeekable|glib_autoptr_cleanup_GSeekable(byval _ptr as GSeekable ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSettingsBackend|glib_autoptr_cleanup_GSettingsBackend(byval _ptr as GSettingsBackend ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSettingsSchema|glib_autoptr_cleanup_GSettingsSchema(byval _ptr as GSettingsSchema ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSettings|glib_autoptr_cleanup_GSettings(byval _ptr as GSettings ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSimpleActionGroup|glib_autoptr_cleanup_GSimpleActionGroup(byval _ptr as GSimpleActionGroup ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSimpleAction|glib_autoptr_cleanup_GSimpleAction(byval _ptr as GSimpleAction ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSimpleAsyncResult|glib_autoptr_cleanup_GSimpleAsyncResult(byval _ptr as GSimpleAsyncResult ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSimplePermission|glib_autoptr_cleanup_GSimplePermission(byval _ptr as GSimplePermission ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSimpleProxyResolver|glib_autoptr_cleanup_GSimpleProxyResolver(byval _ptr as GSimpleProxyResolver ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSocketAddressEnumerator|glib_autoptr_cleanup_GSocketAddressEnumerator(byval _ptr as GSocketAddressEnumerator ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSocketAddress|glib_autoptr_cleanup_GSocketAddress(byval _ptr as GSocketAddress ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSocketClient|glib_autoptr_cleanup_GSocketClient(byval _ptr as GSocketClient ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSocketConnectable|glib_autoptr_cleanup_GSocketConnectable(byval _ptr as GSocketConnectable ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSocketConnection|glib_autoptr_cleanup_GSocketConnection(byval _ptr as GSocketConnection ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSocketControlMessage|glib_autoptr_cleanup_GSocketControlMessage(byval _ptr as GSocketControlMessage ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSocket|glib_autoptr_cleanup_GSocket(byval _ptr as GSocket ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSocketListener|glib_autoptr_cleanup_GSocketListener(byval _ptr as GSocketListener ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSocketService|glib_autoptr_cleanup_GSocketService(byval _ptr as GSocketService ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSubprocess|glib_autoptr_cleanup_GSubprocess(byval _ptr as GSubprocess ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GSubprocessLauncher|glib_autoptr_cleanup_GSubprocessLauncher(byval _ptr as GSubprocessLauncher ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GTask|glib_autoptr_cleanup_GTask(byval _ptr as GTask ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GTcpConnection|glib_autoptr_cleanup_GTcpConnection(byval _ptr as GTcpConnection ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GTcpWrapperConnection|glib_autoptr_cleanup_GTcpWrapperConnection(byval _ptr as GTcpWrapperConnection ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GTestDBus|glib_autoptr_cleanup_GTestDBus(byval _ptr as GTestDBus ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GThemedIcon|glib_autoptr_cleanup_GThemedIcon(byval _ptr as GThemedIcon ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GThreadedSocketService|glib_autoptr_cleanup_GThreadedSocketService(byval _ptr as GThreadedSocketService ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GTlsBackend|glib_autoptr_cleanup_GTlsBackend(byval _ptr as GTlsBackend ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GTlsCertificate|glib_autoptr_cleanup_GTlsCertificate(byval _ptr as GTlsCertificate ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GTlsClientConnection|glib_autoptr_cleanup_GTlsClientConnection(byval _ptr as GTlsClientConnection ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GTlsConnection|glib_autoptr_cleanup_GTlsConnection(byval _ptr as GTlsConnection ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GTlsDatabase|glib_autoptr_cleanup_GTlsDatabase(byval _ptr as GTlsDatabase ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GTlsFileDatabase|glib_autoptr_cleanup_GTlsFileDatabase(byval _ptr as GTlsFileDatabase ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GTlsInteraction|glib_autoptr_cleanup_GTlsInteraction(byval _ptr as GTlsInteraction ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GTlsPassword|glib_autoptr_cleanup_GTlsPassword(byval _ptr as GTlsPassword ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GTlsServerConnection|glib_autoptr_cleanup_GTlsServerConnection(byval _ptr as GTlsServerConnection ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GVfs|glib_autoptr_cleanup_GVfs(byval _ptr as GVfs ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GVolume|glib_autoptr_cleanup_GVolume(byval _ptr as GVolume ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GVolumeMonitor|glib_autoptr_cleanup_GVolumeMonitor(byval _ptr as GVolumeMonitor ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GZlibCompressor|glib_autoptr_cleanup_GZlibCompressor(byval _ptr as GZlibCompressor ptr ptr)
GIO\GIO.BI|glib_autoptr_cleanup_GZlibDecompressor|glib_autoptr_cleanup_GZlibDecompressor(byval _ptr as GZlibDecompressor ptr ptr)
GLIB-OBJECT.BI|type_name##_class_intern_init|type_name##_class_intern_init(byval klass as gpointer)
GLIB-OBJECT.BI|type_name##_get_instance_private|type_name##_get_instance_private(byval self as const TypeName ptr) as gpointer
GLIB-OBJECT.BI|type_name##_get_type|type_name##_get_type() as GType
GLIB-OBJECT.BI|type_name##_get_type|type_name##_get_type() as GType
GLIB-OBJECT.BI|g_set_object_ alias "############"|g_set_object_ alias "############"(byval object_ptr as GObject ptr ptr, byval new_object as GObject ptr) as gboolean
GLIB-OBJECT.BI|type_name##_get_instance_private|type_name##_get_instance_private(byval self as TypeName ptr) as gpointer
GLIB-OBJECT.BI|type_name##_get_type|type_name##_get_type() as GType
GLIB-OBJECT.BI|type_name##_register_type|type_name##_register_type(byval type_module as GTypeModule ptr)
GLIB-OBJECT.BI|glib_auto_cleanup_GStrv|glib_auto_cleanup_GStrv(byval _ptr as GStrv ptr)
GLIB-OBJECT.BI|glib_autoptr_cleanup_GObject|glib_autoptr_cleanup_GObject(byval _ptr as GObject ptr ptr)
GLIB-OBJECT.BI|glib_autoptr_cleanup_GInitiallyUnowned|glib_autoptr_cleanup_GInitiallyUnowned(byval _ptr as GInitiallyUnowned ptr ptr)
GLIB-OBJECT.BI|glib_auto_cleanup_GValue|glib_auto_cleanup_GValue(byval _ptr as GValue ptr)
GLIB.BI|_GLIB_AUTOPTR_FUNC_NAME|_GLIB_AUTOPTR_FUNC_NAME(ModuleObjName)(byval _ptr as ModuleObjName ptr ptr)
GLIB.BI|_GLIB_AUTOPTR_FUNC_NAME|_GLIB_AUTOPTR_FUNC_NAME(TypeName)(byval _ptr as TypeName ptr ptr)
GLIB.BI|_GLIB_AUTO_FUNC_NAME|_GLIB_AUTO_FUNC_NAME(TypeName)(byval _ptr as TypeName ptr)
GLIB.BI|_GLIB_AUTO_FUNC_NAME|_GLIB_AUTO_FUNC_NAME(TypeName)(byval _ptr as TypeName ptr)
GLIB.BI|DllMain alias "#######"|DllMain stdcall alias "#######"(byval hinstDLL as HINSTANCE, byval fdwReason as DWORD, byval lpvReserved as LPVOID) as BOOL
GLIB.BI|g_mutex_locker_new|g_mutex_locker_new(byval mutex as GMutex ptr) as GMutexLocker ptr
GLIB.BI|g_mutex_locker_free|g_mutex_locker_free(byval locker as GMutexLocker ptr)
GLIB.BI|g_steal_pointer_ alias "###############"|g_steal_pointer_ alias "###############"(byval pp as gpointer) as gpointer
GLIB.BI|g_autoptr_cleanup_generic_gfree|g_autoptr_cleanup_generic_gfree(byval p as any ptr)
GLIB.BI|glib_autoptr_cleanup_GAsyncQueue|glib_autoptr_cleanup_GAsyncQueue(byval _ptr as GAsyncQueue ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GBookmarkFile|glib_autoptr_cleanup_GBookmarkFile(byval _ptr as GBookmarkFile ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GBytes|glib_autoptr_cleanup_GBytes(byval _ptr as GBytes ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GChecksum|glib_autoptr_cleanup_GChecksum(byval _ptr as GChecksum ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GDateTime|glib_autoptr_cleanup_GDateTime(byval _ptr as GDateTime ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GDir|glib_autoptr_cleanup_GDir(byval _ptr as GDir ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GError|glib_autoptr_cleanup_GError(byval _ptr as GError ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GHashTable|glib_autoptr_cleanup_GHashTable(byval _ptr as GHashTable ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GHmac|glib_autoptr_cleanup_GHmac(byval _ptr as GHmac ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GIOChannel|glib_autoptr_cleanup_GIOChannel(byval _ptr as GIOChannel ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GKeyFile|glib_autoptr_cleanup_GKeyFile(byval _ptr as GKeyFile ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GList|glib_autoptr_cleanup_GList(byval _ptr as GList ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GArray|glib_autoptr_cleanup_GArray(byval _ptr as GArray ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GPtrArray|glib_autoptr_cleanup_GPtrArray(byval _ptr as GPtrArray ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GByteArray|glib_autoptr_cleanup_GByteArray(byval _ptr as GByteArray ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GMainContext|glib_autoptr_cleanup_GMainContext(byval _ptr as GMainContext ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GMainLoop|glib_autoptr_cleanup_GMainLoop(byval _ptr as GMainLoop ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GSource|glib_autoptr_cleanup_GSource(byval _ptr as GSource ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GMappedFile|glib_autoptr_cleanup_GMappedFile(byval _ptr as GMappedFile ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GMarkupParseContext|glib_autoptr_cleanup_GMarkupParseContext(byval _ptr as GMarkupParseContext ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GNode|glib_autoptr_cleanup_GNode(byval _ptr as GNode ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GOptionContext|glib_autoptr_cleanup_GOptionContext(byval _ptr as GOptionContext ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GOptionGroup|glib_autoptr_cleanup_GOptionGroup(byval _ptr as GOptionGroup ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GPatternSpec|glib_autoptr_cleanup_GPatternSpec(byval _ptr as GPatternSpec ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GQueue|glib_autoptr_cleanup_GQueue(byval _ptr as GQueue ptr ptr)
GLIB.BI|glib_auto_cleanup_GQueue|glib_auto_cleanup_GQueue(byval _ptr as GQueue ptr)
GLIB.BI|glib_autoptr_cleanup_GRand|glib_autoptr_cleanup_GRand(byval _ptr as GRand ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GRegex|glib_autoptr_cleanup_GRegex(byval _ptr as GRegex ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GMatchInfo|glib_autoptr_cleanup_GMatchInfo(byval _ptr as GMatchInfo ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GScanner|glib_autoptr_cleanup_GScanner(byval _ptr as GScanner ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GSequence|glib_autoptr_cleanup_GSequence(byval _ptr as GSequence ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GSList|glib_autoptr_cleanup_GSList(byval _ptr as GSList ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GStringChunk|glib_autoptr_cleanup_GStringChunk(byval _ptr as GStringChunk ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GThread|glib_autoptr_cleanup_GThread(byval _ptr as GThread ptr ptr)
GLIB.BI|glib_auto_cleanup_GMutex|glib_auto_cleanup_GMutex(byval _ptr as GMutex ptr)
GLIB.BI|glib_autoptr_cleanup_GMutexLocker|glib_autoptr_cleanup_GMutexLocker(byval _ptr as GMutexLocker ptr ptr)
GLIB.BI|glib_auto_cleanup_GCond|glib_auto_cleanup_GCond(byval _ptr as GCond ptr)
GLIB.BI|glib_autoptr_cleanup_GTimer|glib_autoptr_cleanup_GTimer(byval _ptr as GTimer ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GTimeZone|glib_autoptr_cleanup_GTimeZone(byval _ptr as GTimeZone ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GTree|glib_autoptr_cleanup_GTree(byval _ptr as GTree ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GVariant|glib_autoptr_cleanup_GVariant(byval _ptr as GVariant ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GVariantBuilder|glib_autoptr_cleanup_GVariantBuilder(byval _ptr as GVariantBuilder ptr ptr)
GLIB.BI|glib_auto_cleanup_GVariantBuilder|glib_auto_cleanup_GVariantBuilder(byval _ptr as GVariantBuilder ptr)
GLIB.BI|glib_autoptr_cleanup_GVariantIter|glib_autoptr_cleanup_GVariantIter(byval _ptr as GVariantIter ptr ptr)
GLIB.BI|glib_autoptr_cleanup_GVariantDict|glib_autoptr_cleanup_GVariantDict(byval _ptr as GVariantDict ptr ptr)
GLIB.BI|glib_auto_cleanup_GVariantDict|glib_auto_cleanup_GVariantDict(byval _ptr as GVariantDict ptr)
GLIB.BI|glib_autoptr_cleanup_GVariantType|glib_autoptr_cleanup_GVariantType(byval _ptr as GVariantType ptr ptr)
LIBXSLT\WIN32CONFIG.BI|isinf|isinf(byval d as double) as long
LIBXSLT\WIN32CONFIG.BI|isnan|isnan(byval d as double) as long
LLVM-C.BI|LLVMInitializeAllTargetInfos|LLVMInitializeAllTargetInfos()
LLVM-C.BI|LLVMInitializeAllTargets|LLVMInitializeAllTargets()
LLVM-C.BI|LLVMInitializeAllTargetMCs|LLVMInitializeAllTargetMCs()
LLVM-C.BI|LLVMInitializeAllAsmPrinters|LLVMInitializeAllAsmPrinters()
LLVM-C.BI|LLVMInitializeAllAsmParsers|LLVMInitializeAllAsmParsers()
LLVM-C.BI|LLVMInitializeAllDisassemblers|LLVMInitializeAllDisassemblers()
LLVM-C.BI|LLVMInitializeNativeTarget|LLVMInitializeNativeTarget() as LLVMBool
LLVM-C.BI|LLVMInitializeNativeAsmParser|LLVMInitializeNativeAsmParser() as LLVMBool
LLVM-C.BI|LLVMInitializeNativeAsmPrinter|LLVMInitializeNativeAsmPrinter() as LLVMBool
LLVM-C.BI|LLVMInitializeNativeDisassembler|LLVMInitializeNativeDisassembler() as LLVMBool
LUA\LAUXLIB.BI|luaL_dofile|luaL_dofile(byval L as lua_State ptr, byval fn as const zstring ptr) as long
LUA\LAUXLIB.BI|luaL_dostring|luaL_dostring(byval L as lua_State ptr, byval s as const zstring ptr) as long
LUA\LUA.BI|lua_numbertointeger|lua_numbertointeger(byval n as LUA_NUMBER_, byval p as LUA_INTEGER_ ptr) as long
NEWTON.BI|NewtonWorldSetCollisionConstructorDestuctorCallback|NewtonWorldSetCollisionConstructorDestuctorCallback(byval newtonWorld as const NewtonWorld const ptr, byval constructor_ as NewtonCollisionCopyConstructionCallback, byval destructor_ as NewtonCollisionDestructorCallback)
NEWTON.BI|NewtonTreeCollisionSetFaceAtribute|NewtonTreeCollisionSetFaceAtribute(byval treeCollision as const NewtonCollision const ptr, byval faceIndexArray as const long const ptr, byval indexCount as long, byval attribute as long)
ODE\ODE.BI|dAddVectors3|dAddVectors3(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dSubtractVectors3|dSubtractVectors3(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dAddScaledVectors3|dAddScaledVectors3(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr, byval a_scale as dReal, byval b_scale as dReal)
ODE\ODE.BI|dScaleVector3|dScaleVector3(byval res as dReal ptr, byval nScale as dReal)
ODE\ODE.BI|dNegateVector3|dNegateVector3(byval res as dReal ptr)
ODE\ODE.BI|dCopyVector3|dCopyVector3(byval res as dReal ptr, byval a as const dReal ptr)
ODE\ODE.BI|dCopyScaledVector3|dCopyScaledVector3(byval res as dReal ptr, byval a as const dReal ptr, byval nScale as dReal)
ODE\ODE.BI|dCopyNegatedVector3|dCopyNegatedVector3(byval res as dReal ptr, byval a as const dReal ptr)
ODE\ODE.BI|dCopyVector4|dCopyVector4(byval res as dReal ptr, byval a as const dReal ptr)
ODE\ODE.BI|dCopyMatrix4x4|dCopyMatrix4x4(byval res as dReal ptr, byval a as const dReal ptr)
ODE\ODE.BI|dCopyMatrix4x3|dCopyMatrix4x3(byval res as dReal ptr, byval a as const dReal ptr)
ODE\ODE.BI|dGetMatrixColumn3|dGetMatrixColumn3(byval res as dReal ptr, byval a as const dReal ptr, byval n as ulong)
ODE\ODE.BI|dCalcVectorLength3|dCalcVectorLength3(byval a as const dReal ptr) as dReal
ODE\ODE.BI|dCalcVectorLength3|dCalcVectorLength3(byval a as const dReal ptr) as dReal
ODE\ODE.BI|dCalcVectorLengthSquare3|dCalcVectorLengthSquare3(byval a as const dReal ptr) as dReal
ODE\ODE.BI|dCalcPointDepth3|dCalcPointDepth3(byval test_p as const dReal ptr, byval plane_p as const dReal ptr, byval plane_n as const dReal ptr) as dReal
ODE\ODE.BI|_dCalcVectorDot3|_dCalcVectorDot3(byval a as const dReal ptr, byval b as const dReal ptr, byval step_a as ulong, byval step_b as ulong) as dReal
ODE\ODE.BI|_dCalcVectorCross3|_dCalcVectorCross3(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr, byval step_res as ulong, byval step_a as ulong, byval step_b as ulong)
ODE\ODE.BI|dCalcVectorCross3|dCalcVectorCross3(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dCalcVectorCross3_114|dCalcVectorCross3_114(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dCalcVectorCross3_141|dCalcVectorCross3_141(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dCalcVectorCross3_144|dCalcVectorCross3_144(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dCalcVectorCross3_411|dCalcVectorCross3_411(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dCalcVectorCross3_414|dCalcVectorCross3_414(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dCalcVectorCross3_441|dCalcVectorCross3_441(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dCalcVectorCross3_444|dCalcVectorCross3_444(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dAddVectorCross3|dAddVectorCross3(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dSubtractVectorCross3|dSubtractVectorCross3(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dSetCrossMatrixPlus|dSetCrossMatrixPlus(byval res as dReal ptr, byval a as const dReal ptr, byval skip as ulong)
ODE\ODE.BI|dSetCrossMatrixMinus|dSetCrossMatrixMinus(byval res as dReal ptr, byval a as const dReal ptr, byval skip as ulong)
ODE\ODE.BI|dCalcPointsDistance3|dCalcPointsDistance3(byval a as const dReal ptr, byval b as const dReal ptr) as dReal
ODE\ODE.BI|dMultiplyHelper0_331|dMultiplyHelper0_331(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dMultiplyHelper1_331|dMultiplyHelper1_331(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dMultiplyHelper0_133|dMultiplyHelper0_133(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dMultiplyHelper1_133|dMultiplyHelper1_133(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dMultiply0_331|dMultiply0_331(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dMultiply1_331|dMultiply1_331(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dMultiply0_133|dMultiply0_133(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dMultiply0_333|dMultiply0_333(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dMultiply1_333|dMultiply1_333(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dMultiply2_333|dMultiply2_333(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dMultiplyAdd0_331|dMultiplyAdd0_331(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dMultiplyAdd1_331|dMultiplyAdd1_331(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dMultiplyAdd0_133|dMultiplyAdd0_133(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dMultiplyAdd0_333|dMultiplyAdd0_333(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dMultiplyAdd1_333|dMultiplyAdd1_333(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dMultiplyAdd2_333|dMultiplyAdd2_333(byval res as dReal ptr, byval a as const dReal ptr, byval b as const dReal ptr)
ODE\ODE.BI|dCalcMatrix3Det|dCalcMatrix3Det(byval mat as const dReal ptr) as dReal
ODE\ODE.BI|dInvertMatrix3|dInvertMatrix3(byval dst as dReal ptr, byval ma as const dReal ptr) as dReal
ODE\ODE.BI|dInvertMatrix3|dInvertMatrix3(byval dst as dReal ptr, byval ma as const dReal ptr) as dReal
SDL\SDL.BI|SDL_revcpy|SDL_revcpy(byval dst as any ptr, byval src as const any ptr, byval length as uinteger) as any ptr
SDL\SDL.BI|SDL_QuitRequested|SDL_QuitRequested() as SDL_bool
SDL2\SDL.BI|SDL_SwapFloat|SDL_SwapFloat(byval x as single) as single
SDL2\SDL.BI|SDL_RectEmpty|SDL_RectEmpty(byval r as const SDL_Rect ptr) as SDL_bool
SDL2\SDL.BI|SDL_RectEquals|SDL_RectEquals(byval a as const SDL_Rect ptr, byval b as const SDL_Rect ptr) as SDL_bool
SDL2\SDL.BI|SDL_QuitRequested|SDL_QuitRequested() as SDL_bool
SDL2\SDL_NET.BI|_SDLNet_SocketReady|_SDLNet_SocketReady(byval sock as SDLNet_GenericSocket) as long
SDL2\SDL_NET.BI|_SDLNet_Write16|_SDLNet_Write16(byval value as Uint16, byval areap as any ptr)
SDL2\SDL_NET.BI|_SDLNet_Write32|_SDLNet_Write32(byval value as Uint32, byval areap as any ptr)
SDL2\SDL_NET.BI|_SDLNet_Read16|_SDLNet_Read16(byval areap as any ptr) as Uint16
SDL2\SDL_NET.BI|_SDLNet_Read32|_SDLNet_Read32(byval areap as const any ptr) as Uint32
SPIDERMONKEY\JSAPI.BI|JSPRINCIPALS_HOLD|JSPRINCIPALS_HOLD(byval cx as JSContext ptr, byval principals as JSPrincipals ptr) as jsrefcount
SPIDERMONKEY\JSAPI.BI|JSPRINCIPALS_DROP|JSPRINCIPALS_DROP( byval cx as JSContext ptr, byval principals as JSPrincipals ptr) as jsrefcount
